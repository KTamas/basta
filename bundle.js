/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const stops = [
    {
        "id": "002133",
        "name": "Örs vezér tere M+H, déli tárolótér",
        "lat": "47.500366",
        "lon": "19.135700",
        "parent": "CS003106"
    },
    {
        "id": "002136",
        "name": "Fogas üzem (kapu)",
        "lat": "47.509119",
        "lon": "19.014403",
        "parent": ""
    },
    {
        "id": "002138",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.483354",
        "lon": "19.127803",
        "parent": "CSF01800"
    },
    {
        "id": "003002",
        "name": "Puskás Ferenc Stadion M",
        "lat": "47.500368",
        "lon": "19.103406",
        "parent": "CS008132"
    },
    {
        "id": "003105",
        "name": "Bécsi út \/ Vörösvári út",
        "lat": "47.548817",
        "lon": "19.029722",
        "parent": "CSF00571"
    },
    {
        "id": "003106",
        "name": "Örs vezér tere M+H, északi tároló",
        "lat": "47.505160",
        "lon": "19.136637",
        "parent": "CS003106"
    },
    {
        "id": "003118",
        "name": "Óbuda, Bogdáni út",
        "lat": "47.551471",
        "lon": "19.041971",
        "parent": "CS003118"
    },
    {
        "id": "004716",
        "name": "ÉD metró járműtelep,porta",
        "lat": "47.469651",
        "lon": "19.129090",
        "parent": ""
    },
    {
        "id": "004948",
        "name": "Metró ÉD járműtelep (kapu)",
        "lat": "47.465239",
        "lon": "19.142612",
        "parent": ""
    },
    {
        "id": "004952",
        "name": "Metró KNY járműtelep (kapu)",
        "lat": "47.502234",
        "lon": "19.132179",
        "parent": ""
    },
    {
        "id": "005924",
        "name": "Mill.FAV járműtelep (kapu)",
        "lat": "47.518788",
        "lon": "19.093168",
        "parent": ""
    },
    {
        "id": "006390",
        "name": "Cinkota kocsiszín (kapu)",
        "lat": "47.519345",
        "lon": "19.217072",
        "parent": "CSF03379"
    },
    {
        "id": "007177",
        "name": "Csepel kocsiszín (kapu)",
        "lat": "47.421498",
        "lon": "19.066247",
        "parent": "CSF04294"
    },
    {
        "id": "007675",
        "name": "Dunaharaszti külső kocsiszín (kapu)",
        "lat": "47.362751",
        "lon": "19.088475",
        "parent": ""
    },
    {
        "id": "007693",
        "name": "Ráckeve kocsiszín (kapu)",
        "lat": "47.175265",
        "lon": "18.942059",
        "parent": ""
    },
    {
        "id": "007762",
        "name": "Szentendre kocsiszín (kapu)",
        "lat": "47.658755",
        "lon": "19.072392",
        "parent": "CSF04687"
    },
    {
        "id": "007817",
        "name": "Márta utca",
        "lat": "47.428685",
        "lon": "18.929674",
        "parent": ""
    },
    {
        "id": "007877",
        "name": "Bíróság",
        "lat": "47.519564",
        "lon": "18.978068",
        "parent": "CS007877"
    },
    {
        "id": "007878",
        "name": "Bíróság",
        "lat": "47.519456",
        "lon": "18.978041",
        "parent": "CS007877"
    },
    {
        "id": "007879",
        "name": "Római úti lakótelep, Varsa utca",
        "lat": "47.570863",
        "lon": "19.058543",
        "parent": ""
    },
    {
        "id": "007880",
        "name": "Bécsi út \/ Vörösvári út",
        "lat": "47.547647",
        "lon": "19.028766",
        "parent": "CSF00571"
    },
    {
        "id": "007881",
        "name": "Váradi utca",
        "lat": "47.543771",
        "lon": "19.030123",
        "parent": "CSF00591"
    },
    {
        "id": "007882",
        "name": "Váradi utca",
        "lat": "47.542691",
        "lon": "19.029977",
        "parent": "CSF00591"
    },
    {
        "id": "007883",
        "name": "Perényi út",
        "lat": "47.545812",
        "lon": "19.029591",
        "parent": ""
    },
    {
        "id": "007884",
        "name": "Deák Ferenc tér M",
        "lat": "47.497386",
        "lon": "19.055091",
        "parent": "CS038717"
    },
    {
        "id": "007887",
        "name": "Mester utca \/ Ferenc körút",
        "lat": "47.482246",
        "lon": "19.068716",
        "parent": "CSF01380"
    },
    {
        "id": "007888",
        "name": "Mester utca \/ Ferenc körút",
        "lat": "47.482570",
        "lon": "19.068477",
        "parent": "CSF01380"
    },
    {
        "id": "007890",
        "name": "Mester utca \/ Ferenc körút",
        "lat": "47.481656",
        "lon": "19.068722",
        "parent": "CSF01380"
    },
    {
        "id": "007897",
        "name": "Kelenföld vasútállomás M",
        "lat": "47.464597",
        "lon": "19.022948",
        "parent": "CS007967"
    },
    {
        "id": "007899",
        "name": "Kelenföld vasútállomás M",
        "lat": "47.464744",
        "lon": "19.022994",
        "parent": "CS007967"
    },
    {
        "id": "007900",
        "name": "Maros utcai rendelőintézet",
        "lat": "47.503728",
        "lon": "19.022391",
        "parent": ""
    },
    {
        "id": "007902",
        "name": "Újpest-Városkapu M",
        "lat": "47.558600",
        "lon": "19.078220",
        "parent": "CS011762"
    },
    {
        "id": "007913",
        "name": "526. sor",
        "lat": "47.479281",
        "lon": "19.211332",
        "parent": "CS007914"
    },
    {
        "id": "007914",
        "name": "526. sor",
        "lat": "47.479300",
        "lon": "19.211468",
        "parent": "CS007914"
    },
    {
        "id": "007919",
        "name": "Pólus Center",
        "lat": "47.552619",
        "lon": "19.143665",
        "parent": ""
    },
    {
        "id": "007923",
        "name": "Kele utca",
        "lat": "47.431808",
        "lon": "19.173804",
        "parent": ""
    },
    {
        "id": "007924",
        "name": "Ültetvény utca",
        "lat": "47.396915",
        "lon": "19.175497",
        "parent": "CS007924"
    },
    {
        "id": "007927",
        "name": "Ferihegy vasútállomás",
        "lat": "47.438405",
        "lon": "19.222663",
        "parent": "CS007927"
    },
    {
        "id": "007928",
        "name": "Ferihegy vasútállomás",
        "lat": "47.437693",
        "lon": "19.223443",
        "parent": "CS007927"
    },
    {
        "id": "007930",
        "name": "Savoyai Jenő tér (Törley tér)",
        "lat": "47.430374",
        "lon": "19.036286",
        "parent": "CS007930"
    },
    {
        "id": "007931",
        "name": "Savoyai Jenő tér (Törley tér)",
        "lat": "47.430374",
        "lon": "19.036551",
        "parent": "CS007930"
    },
    {
        "id": "007949",
        "name": "Kocsis Sándor út",
        "lat": "47.574316",
        "lon": "19.013288",
        "parent": ""
    },
    {
        "id": "007950",
        "name": "Keleti pályaudvar M",
        "lat": "47.501159",
        "lon": "19.082700",
        "parent": "CSF01131"
    },
    {
        "id": "007967",
        "name": "Kelenföld vasútállomás M",
        "lat": "47.465775",
        "lon": "19.021886",
        "parent": "CS007967"
    },
    {
        "id": "007968",
        "name": "Mogyoród útja",
        "lat": "47.570602",
        "lon": "19.128267",
        "parent": ""
    },
    {
        "id": "007972",
        "name": "Hűvösvölgy",
        "lat": "47.543166",
        "lon": "18.964394",
        "parent": "CS007976"
    },
    {
        "id": "007973",
        "name": "Hűvösvölgy",
        "lat": "47.542923",
        "lon": "18.964567",
        "parent": "CS007976"
    },
    {
        "id": "007974",
        "name": "Hűvösvölgy",
        "lat": "47.542635",
        "lon": "18.964753",
        "parent": "CS007976"
    },
    {
        "id": "007975",
        "name": "Hűvösvölgy",
        "lat": "47.543247",
        "lon": "18.964261",
        "parent": "CS007976"
    },
    {
        "id": "007976",
        "name": "Hűvösvölgy",
        "lat": "47.543264",
        "lon": "18.963995",
        "parent": "CS007976"
    },
    {
        "id": "007977",
        "name": "Hűvösvölgy",
        "lat": "47.542968",
        "lon": "18.964195",
        "parent": "CS007976"
    },
    {
        "id": "007978",
        "name": "Hűvösvölgy",
        "lat": "47.542707",
        "lon": "18.964355",
        "parent": "CS007976"
    },
    {
        "id": "007979",
        "name": "Vörösmarty utca M",
        "lat": "47.507468",
        "lon": "19.066509",
        "parent": "CSF01090"
    },
    {
        "id": "007980",
        "name": "Vörösmarty utca M",
        "lat": "47.507444",
        "lon": "19.066767",
        "parent": "CSF01090"
    },
    {
        "id": "007995",
        "name": "Jókai Mór utca",
        "lat": "47.410717",
        "lon": "19.020681",
        "parent": "CS007995"
    },
    {
        "id": "007996",
        "name": "Budatétény vasútállomás (Campona)",
        "lat": "47.405724",
        "lon": "19.013796",
        "parent": "CS007997"
    },
    {
        "id": "007997",
        "name": "Budatétény vasútállomás (Campona)",
        "lat": "47.405963",
        "lon": "19.014089",
        "parent": "CS007997"
    },
    {
        "id": "007998",
        "name": "Budatétény vasútállomás (Campona)",
        "lat": "47.405705",
        "lon": "19.014297",
        "parent": "CS007997"
    },
    {
        "id": "007999",
        "name": "Budatétény vasútállomás (Campona)",
        "lat": "47.405711",
        "lon": "19.014142",
        "parent": "CS007997"
    },
    {
        "id": "008003",
        "name": "Budagyöngye",
        "lat": "47.515941",
        "lon": "18.999449",
        "parent": "CSF00166"
    },
    {
        "id": "008005",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.477023",
        "lon": "19.047527",
        "parent": "CSF02198"
    },
    {
        "id": "008006",
        "name": "Kelenföld vasútállomás M",
        "lat": "47.464840",
        "lon": "19.022311",
        "parent": "CS007967"
    },
    {
        "id": "008018",
        "name": "Örs vezér tere M+H, új tárolótér",
        "lat": "47.500933",
        "lon": "19.135714",
        "parent": "CS003106"
    },
    {
        "id": "008020",
        "name": "Örs vezér tere M+H",
        "lat": "47.501005",
        "lon": "19.136378",
        "parent": "CS003106"
    },
    {
        "id": "008021",
        "name": "Örs vezér tere M+H",
        "lat": "47.501814",
        "lon": "19.136233",
        "parent": "CS003106"
    },
    {
        "id": "008022",
        "name": "Örs vezér tere M+H",
        "lat": "47.501355",
        "lon": "19.136333",
        "parent": "CS003106"
    },
    {
        "id": "008023",
        "name": "Örs vezér tere M+H",
        "lat": "47.501535",
        "lon": "19.136180",
        "parent": "CS003106"
    },
    {
        "id": "008024",
        "name": "Örs vezér tere M+H",
        "lat": "47.501112",
        "lon": "19.136280",
        "parent": "CS003106"
    },
    {
        "id": "008025",
        "name": "Örs vezér tere M+H",
        "lat": "47.501814",
        "lon": "19.135915",
        "parent": "CS003106"
    },
    {
        "id": "008026",
        "name": "Örs vezér tere M+H",
        "lat": "47.501374",
        "lon": "19.136007",
        "parent": "CS003106"
    },
    {
        "id": "008027",
        "name": "Örs vezér tere M+H",
        "lat": "47.501482",
        "lon": "19.135861",
        "parent": "CS003106"
    },
    {
        "id": "008028",
        "name": "Örs vezér tere M+H",
        "lat": "47.501085",
        "lon": "19.135948",
        "parent": "CS003106"
    },
    {
        "id": "008029",
        "name": "Örs vezér tere M+H",
        "lat": "47.502129",
        "lon": "19.135703",
        "parent": "CS003106"
    },
    {
        "id": "008030",
        "name": "Örs vezér tere M+H",
        "lat": "47.501751",
        "lon": "19.135617",
        "parent": "CS003106"
    },
    {
        "id": "008031",
        "name": "Örs vezér tere M+H",
        "lat": "47.501365",
        "lon": "19.135688",
        "parent": "CS003106"
    },
    {
        "id": "008036",
        "name": "Kőbányai út 31.",
        "lat": "47.487478",
        "lon": "19.104202",
        "parent": "CSF01263"
    },
    {
        "id": "008037",
        "name": "Kőbányai út 31.",
        "lat": "47.487506",
        "lon": "19.103698",
        "parent": "CSF01263"
    },
    {
        "id": "008040",
        "name": "Tas vezér utca",
        "lat": "47.478597",
        "lon": "19.040788",
        "parent": "CS008041"
    },
    {
        "id": "008041",
        "name": "Tas vezér utca",
        "lat": "47.478866",
        "lon": "19.040866",
        "parent": "CS008041"
    },
    {
        "id": "008047",
        "name": "Lajosmizsei sorompó",
        "lat": "47.450468",
        "lon": "19.161410",
        "parent": "CSF03735"
    },
    {
        "id": "008050",
        "name": "Liptó utca",
        "lat": "47.486135",
        "lon": "19.007080",
        "parent": "CS008050"
    },
    {
        "id": "008051",
        "name": "Liptó utca",
        "lat": "47.486072",
        "lon": "19.007093",
        "parent": "CS008050"
    },
    {
        "id": "008067",
        "name": "Szent Imre tér",
        "lat": "47.430948",
        "lon": "19.070300",
        "parent": "CS041095"
    },
    {
        "id": "008080",
        "name": "Árpád híd M",
        "lat": "47.534584",
        "lon": "19.067859",
        "parent": "CS008080"
    },
    {
        "id": "008086",
        "name": "Széll Kálmán tér M",
        "lat": "47.507350",
        "lon": "19.026352",
        "parent": "CS073099"
    },
    {
        "id": "008087",
        "name": "Fény utcai piac",
        "lat": "47.508510",
        "lon": "19.023683",
        "parent": "CS008087"
    },
    {
        "id": "008090",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.477256",
        "lon": "19.048786",
        "parent": "CSF02198"
    },
    {
        "id": "008093",
        "name": "Dél-pesti autóbuszgarázs",
        "lat": "47.426667",
        "lon": "19.161783",
        "parent": "CS043154"
    },
    {
        "id": "008094",
        "name": "Dél-pesti autóbuszgarázs",
        "lat": "47.426227",
        "lon": "19.161000",
        "parent": "CS043154"
    },
    {
        "id": "008095",
        "name": "Nagykőrösi út",
        "lat": "47.425268",
        "lon": "19.157088",
        "parent": "CS008095"
    },
    {
        "id": "008096",
        "name": "Nagykőrösi út",
        "lat": "47.425241",
        "lon": "19.157512",
        "parent": "CS008095"
    },
    {
        "id": "008098",
        "name": "Szabina út",
        "lat": "47.436450",
        "lon": "19.013416",
        "parent": "CS061286"
    },
    {
        "id": "008099",
        "name": "Pék utca",
        "lat": "47.442037",
        "lon": "19.018742",
        "parent": "CSF04376"
    },
    {
        "id": "008100",
        "name": "Pék utca",
        "lat": "47.442184",
        "lon": "19.018652",
        "parent": "CSF04376"
    },
    {
        "id": "008101",
        "name": "Rózsavölgy felső",
        "lat": "47.441102",
        "lon": "19.022349",
        "parent": "CS008102"
    },
    {
        "id": "008102",
        "name": "Rózsavölgy felső",
        "lat": "47.441120",
        "lon": "19.022627",
        "parent": "CS008102"
    },
    {
        "id": "008103",
        "name": "Rózsavölgy alsó",
        "lat": "47.438280",
        "lon": "19.030491",
        "parent": "CSF04379"
    },
    {
        "id": "008104",
        "name": "Rózsavölgy alsó",
        "lat": "47.438270",
        "lon": "19.029987",
        "parent": "CSF04379"
    },
    {
        "id": "008106",
        "name": "Vihar utca",
        "lat": "47.434313",
        "lon": "19.035689",
        "parent": ""
    },
    {
        "id": "008109",
        "name": "Damjanich utca",
        "lat": "47.402518",
        "lon": "18.991053",
        "parent": "CS008109"
    },
    {
        "id": "008110",
        "name": "Barosstelep vasútállomás",
        "lat": "47.399651",
        "lon": "18.990905",
        "parent": "CS008110"
    },
    {
        "id": "008111",
        "name": "Barackos út \/ Angeli utca",
        "lat": "47.402248",
        "lon": "18.974427",
        "parent": "CS008111"
    },
    {
        "id": "008112",
        "name": "Szakiskola utca",
        "lat": "47.404959",
        "lon": "18.975835",
        "parent": "CSF04487"
    },
    {
        "id": "008113",
        "name": "Szilvafa utca",
        "lat": "47.405214",
        "lon": "18.982168",
        "parent": "CS008113"
    },
    {
        "id": "008114",
        "name": "Mátyás király utca",
        "lat": "47.404319",
        "lon": "18.990768",
        "parent": "CS009447"
    },
    {
        "id": "008115",
        "name": "Szebeni utca",
        "lat": "47.430361",
        "lon": "19.016058",
        "parent": "CS008115"
    },
    {
        "id": "008116",
        "name": "Szebeni utca",
        "lat": "47.430199",
        "lon": "19.016893",
        "parent": "CS008115"
    },
    {
        "id": "008119",
        "name": "Mátra utca",
        "lat": "47.400104",
        "lon": "18.997714",
        "parent": "CSF04521"
    },
    {
        "id": "008120",
        "name": "Budatétény vasútállomás (Campona)",
        "lat": "47.405630",
        "lon": "19.013758",
        "parent": "CS007997"
    },
    {
        "id": "008124",
        "name": "Zöldike utca",
        "lat": "47.430738",
        "lon": "19.012823",
        "parent": "CS008125"
    },
    {
        "id": "008125",
        "name": "Zöldike utca",
        "lat": "47.431205",
        "lon": "19.012359",
        "parent": "CS008125"
    },
    {
        "id": "008126",
        "name": "Hír utca",
        "lat": "47.432896",
        "lon": "19.011523",
        "parent": "CS008127"
    },
    {
        "id": "008127",
        "name": "Hír utca",
        "lat": "47.432914",
        "lon": "19.011403",
        "parent": "CS008127"
    },
    {
        "id": "008128",
        "name": "Ady Endre út",
        "lat": "47.435906",
        "lon": "19.036550",
        "parent": "CS009541"
    },
    {
        "id": "008132",
        "name": "Puskás Ferenc Stadion M",
        "lat": "47.501311",
        "lon": "19.107734",
        "parent": "CS008132"
    },
    {
        "id": "008146",
        "name": "Vajda Péter utca",
        "lat": "47.481389",
        "lon": "19.103174",
        "parent": "CSF01258"
    },
    {
        "id": "008147",
        "name": "Vajda Péter utca",
        "lat": "47.481770",
        "lon": "19.103619",
        "parent": "CSF01258"
    },
    {
        "id": "008148",
        "name": "Kőbányai út \/ Könyves Kálmán körút",
        "lat": "47.485742",
        "lon": "19.107077",
        "parent": "CSF01267"
    },
    {
        "id": "008149",
        "name": "Kőbányai út \/ Könyves Kálmán körút",
        "lat": "47.486236",
        "lon": "19.107515",
        "parent": "CSF01267"
    },
    {
        "id": "008150",
        "name": "Zsil utca",
        "lat": "47.482940",
        "lon": "19.062984",
        "parent": "CSF01346"
    },
    {
        "id": "008152",
        "name": "Mester utca \/ Könyves Kálmán körút",
        "lat": "47.469596",
        "lon": "19.083728",
        "parent": "CSF01507"
    },
    {
        "id": "008153",
        "name": "Mester utca \/ Könyves Kálmán körút",
        "lat": "47.469723",
        "lon": "19.084482",
        "parent": "CSF01507"
    },
    {
        "id": "008155",
        "name": "Közvágóhíd H",
        "lat": "47.468737",
        "lon": "19.072756",
        "parent": "CSF01527"
    },
    {
        "id": "008156",
        "name": "Új köztemető",
        "lat": "47.473522",
        "lon": "19.178241",
        "parent": "CSF01866"
    },
    {
        "id": "008164",
        "name": "Örs vezér tere M+H",
        "lat": "47.501463",
        "lon": "19.136578",
        "parent": "CS003106"
    },
    {
        "id": "008168",
        "name": "I. utca",
        "lat": "47.401015",
        "lon": "19.002721",
        "parent": "CSF04468"
    },
    {
        "id": "008169",
        "name": "I. utca",
        "lat": "47.400931",
        "lon": "19.003494",
        "parent": "CSF04468"
    },
    {
        "id": "008170",
        "name": "Angeli utca \/ Nagytétényi út",
        "lat": "47.390632",
        "lon": "18.981022",
        "parent": "CSF04499"
    },
    {
        "id": "008174",
        "name": "Népliget M",
        "lat": "47.475904",
        "lon": "19.100568",
        "parent": "CS008287"
    },
    {
        "id": "008175",
        "name": "Népliget, tároló",
        "lat": "47.475832",
        "lon": "19.100183",
        "parent": "CS008287"
    },
    {
        "id": "008181",
        "name": "Cinkotai autóbuszgarázs",
        "lat": "47.498526",
        "lon": "19.237725",
        "parent": "CSF03286"
    },
    {
        "id": "008206",
        "name": "Mexikói út M",
        "lat": "47.519299",
        "lon": "19.091104",
        "parent": "CSF02974"
    },
    {
        "id": "008209",
        "name": "Nagy Lajos király útja \/ Czobor utca",
        "lat": "47.522226",
        "lon": "19.102752",
        "parent": "CSF02868"
    },
    {
        "id": "008218",
        "name": "Széchenyi István tér",
        "lat": "47.499032",
        "lon": "19.047008",
        "parent": "CSF00974"
    },
    {
        "id": "008222",
        "name": "Örs vezér tere M+H",
        "lat": "47.503670",
        "lon": "19.136482",
        "parent": "CS003106"
    },
    {
        "id": "008238",
        "name": "Széchenyi István tér",
        "lat": "47.500588",
        "lon": "19.046703",
        "parent": "CSF00974"
    },
    {
        "id": "008239",
        "name": "Millenniumi Kulturális Központ",
        "lat": "47.471308",
        "lon": "19.073063",
        "parent": "CS008240"
    },
    {
        "id": "008240",
        "name": "Millenniumi Kulturális Központ",
        "lat": "47.471335",
        "lon": "19.073209",
        "parent": "CS008240"
    },
    {
        "id": "008241",
        "name": "Szőnyi út",
        "lat": "47.526654",
        "lon": "19.096249",
        "parent": ""
    },
    {
        "id": "008242",
        "name": "Teleki Blanka utca",
        "lat": "47.523948",
        "lon": "19.093763",
        "parent": ""
    },
    {
        "id": "008243",
        "name": "Szántóföld utca",
        "lat": "47.572277",
        "lon": "19.138862",
        "parent": "CS049185"
    },
    {
        "id": "008245",
        "name": "Kolozsvár utcai piac",
        "lat": "47.536854",
        "lon": "19.114960",
        "parent": ""
    },
    {
        "id": "008246",
        "name": "Rákospalotai köztemető",
        "lat": "47.551240",
        "lon": "19.136010",
        "parent": "CSF03127"
    },
    {
        "id": "008260",
        "name": "Nagybányai út",
        "lat": "47.528442",
        "lon": "18.996170",
        "parent": "CS008260"
    },
    {
        "id": "008261",
        "name": "Nagybányai út",
        "lat": "47.528352",
        "lon": "18.996317",
        "parent": "CS008260"
    },
    {
        "id": "008262",
        "name": "Hidegkuti Nándor Stadion",
        "lat": "47.490690",
        "lon": "19.108910",
        "parent": "CSF01275"
    },
    {
        "id": "008263",
        "name": "Közvágóhíd",
        "lat": "47.469113",
        "lon": "19.070051",
        "parent": "CS008264"
    },
    {
        "id": "008264",
        "name": "Közvágóhíd",
        "lat": "47.469995",
        "lon": "19.070144",
        "parent": "CS008264"
    },
    {
        "id": "008265",
        "name": "Közvágóhíd H",
        "lat": "47.468737",
        "lon": "19.073486",
        "parent": "CSF01527"
    },
    {
        "id": "008267",
        "name": "Szentlőrinci út",
        "lat": "47.424593",
        "lon": "19.157763",
        "parent": "CSF03632"
    },
    {
        "id": "008269",
        "name": "Delej utca",
        "lat": "47.484685",
        "lon": "19.096357",
        "parent": "CS008269"
    },
    {
        "id": "008270",
        "name": "Delej utca",
        "lat": "47.484478",
        "lon": "19.096423",
        "parent": "CS008269"
    },
    {
        "id": "008283",
        "name": "Óceán-árok utca",
        "lat": "47.590056",
        "lon": "19.100627",
        "parent": "CS008284"
    },
    {
        "id": "008284",
        "name": "Óceán-árok utca",
        "lat": "47.590352",
        "lon": "19.101585",
        "parent": "CS008284"
    },
    {
        "id": "008286",
        "name": "Népliget M",
        "lat": "47.476294",
        "lon": "19.099288",
        "parent": "CS008287"
    },
    {
        "id": "008287",
        "name": "Népliget M",
        "lat": "47.476345",
        "lon": "19.098937",
        "parent": "CS008287"
    },
    {
        "id": "008289",
        "name": "Szilágyi utca",
        "lat": "47.570883",
        "lon": "19.111334",
        "parent": "CS008289"
    },
    {
        "id": "008317",
        "name": "Bartók Béla utca",
        "lat": "47.433298",
        "lon": "18.919575",
        "parent": "CS008317"
    },
    {
        "id": "008318",
        "name": "Raktárváros",
        "lat": "47.441547",
        "lon": "18.938276",
        "parent": "CS008319"
    },
    {
        "id": "008319",
        "name": "Raktárváros",
        "lat": "47.441566",
        "lon": "18.938608",
        "parent": "CS008319"
    },
    {
        "id": "008322",
        "name": "Harangláb",
        "lat": "47.431924",
        "lon": "18.914078",
        "parent": "CSF04757"
    },
    {
        "id": "008323",
        "name": "Károlyi utca",
        "lat": "47.437690",
        "lon": "18.899546",
        "parent": ""
    },
    {
        "id": "008324",
        "name": "Tükörhegy",
        "lat": "47.436382",
        "lon": "18.927085",
        "parent": "CS008324"
    },
    {
        "id": "008325",
        "name": "Tükörhegy",
        "lat": "47.436211",
        "lon": "18.926992",
        "parent": "CS008324"
    },
    {
        "id": "008326",
        "name": "Ady Endre utca",
        "lat": "47.435045",
        "lon": "18.906261",
        "parent": "CS008326"
    },
    {
        "id": "008328",
        "name": "Törökbálint Sportközpont",
        "lat": "47.440051",
        "lon": "18.895734",
        "parent": "CS074495"
    },
    {
        "id": "008329",
        "name": "Törökbálint Sportközpont",
        "lat": "47.440284",
        "lon": "18.895177",
        "parent": "CS074495"
    },
    {
        "id": "008330",
        "name": "Határ utca",
        "lat": "47.445284",
        "lon": "18.894300",
        "parent": "CS008330"
    },
    {
        "id": "008331",
        "name": "Határ utca",
        "lat": "47.444924",
        "lon": "18.894036",
        "parent": "CS008330"
    },
    {
        "id": "008332",
        "name": "Hosszúrét utca",
        "lat": "47.446066",
        "lon": "18.881264",
        "parent": ""
    },
    {
        "id": "008333",
        "name": "Törökbálint, bevásárlóközpont",
        "lat": "47.443242",
        "lon": "18.887398",
        "parent": ""
    },
    {
        "id": "008336",
        "name": "Növény utca",
        "lat": "47.402071",
        "lon": "19.015810",
        "parent": "CS008337"
    },
    {
        "id": "008337",
        "name": "Növény utca",
        "lat": "47.402125",
        "lon": "19.015254",
        "parent": "CS008337"
    },
    {
        "id": "008339",
        "name": "Budaörsi lakótelep",
        "lat": "47.456025",
        "lon": "18.940934",
        "parent": "CSF04724"
    },
    {
        "id": "008341",
        "name": "Templom tér",
        "lat": "47.542367",
        "lon": "19.130057",
        "parent": "CS008341"
    },
    {
        "id": "008344",
        "name": "Királyhágó tér",
        "lat": "47.495421",
        "lon": "19.018729",
        "parent": "CSF02413"
    },
    {
        "id": "008345",
        "name": "Katona József utca",
        "lat": "47.438346",
        "lon": "18.906478",
        "parent": ""
    },
    {
        "id": "008353",
        "name": "Észak-Pesti Kórház",
        "lat": "47.539377",
        "lon": "19.122388",
        "parent": ""
    },
    {
        "id": "008359",
        "name": "Óbudai autóbuszgarázs",
        "lat": "47.567996",
        "lon": "19.026302",
        "parent": "CS008360"
    },
    {
        "id": "008360",
        "name": "Óbudai autóbuszgarázs",
        "lat": "47.568290",
        "lon": "19.026730",
        "parent": "CS008360"
    },
    {
        "id": "008365",
        "name": "Bécsi út \/ Vörösvári út",
        "lat": "47.548475",
        "lon": "19.028925",
        "parent": "CSF00571"
    },
    {
        "id": "008377",
        "name": "Nagykőrösi út \/ Határ út",
        "lat": "47.456450",
        "lon": "19.114660",
        "parent": "CS008377"
    },
    {
        "id": "008379",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.483885",
        "lon": "19.127207",
        "parent": "CSF01800"
    },
    {
        "id": "008380",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.483282",
        "lon": "19.128201",
        "parent": "CSF01800"
    },
    {
        "id": "008381",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.483993",
        "lon": "19.127685",
        "parent": "CSF01800"
    },
    {
        "id": "008382",
        "name": "Örs vezér tere M+H",
        "lat": "47.502506",
        "lon": "19.136818",
        "parent": "CS003106"
    },
    {
        "id": "008383",
        "name": "Örs vezér tere M+H",
        "lat": "47.502632",
        "lon": "19.136712",
        "parent": "CS003106"
    },
    {
        "id": "008385",
        "name": "Rákospalota, MÁV-telep",
        "lat": "47.541293",
        "lon": "19.121408",
        "parent": "CSF03102"
    },
    {
        "id": "008399",
        "name": "Pestszentimre vasútállomás",
        "lat": "47.404251",
        "lon": "19.186538",
        "parent": "CSF03665"
    },
    {
        "id": "008400",
        "name": "Dunakeszi, Auchan áruház",
        "lat": "47.608972",
        "lon": "19.117347",
        "parent": ""
    },
    {
        "id": "008402",
        "name": "Kert sor",
        "lat": "47.591138",
        "lon": "19.045357",
        "parent": "CS008403"
    },
    {
        "id": "008403",
        "name": "Kert sor",
        "lat": "47.591363",
        "lon": "19.045370",
        "parent": "CS008403"
    },
    {
        "id": "008404",
        "name": "Csillaghegy H",
        "lat": "47.584886",
        "lon": "19.042047",
        "parent": "CS008404"
    },
    {
        "id": "008405",
        "name": "Csillaghegy H",
        "lat": "47.584817",
        "lon": "19.041849",
        "parent": "CS008404"
    },
    {
        "id": "008406",
        "name": "Forrásliget lakópark",
        "lat": "47.581153",
        "lon": "19.037568",
        "parent": "CS008407"
    },
    {
        "id": "008407",
        "name": "Forrásliget lakópark",
        "lat": "47.581423",
        "lon": "19.037847",
        "parent": "CS008407"
    },
    {
        "id": "008408",
        "name": "Ürömhegyi lejtő",
        "lat": "47.577645",
        "lon": "19.032198",
        "parent": "CS008409"
    },
    {
        "id": "008409",
        "name": "Ürömhegyi lejtő",
        "lat": "47.577663",
        "lon": "19.032065",
        "parent": "CS008409"
    },
    {
        "id": "008410",
        "name": "Aranyhegyi lejtő",
        "lat": "47.572593",
        "lon": "19.030301",
        "parent": "CS008410"
    },
    {
        "id": "008411",
        "name": "Aranyhegyi lejtő",
        "lat": "47.572512",
        "lon": "19.030128",
        "parent": "CS008410"
    },
    {
        "id": "008412",
        "name": "Bécsi út \/ Vörösvári út",
        "lat": "47.548475",
        "lon": "19.029204",
        "parent": "CSF00571"
    },
    {
        "id": "008426",
        "name": "Káposztásmegyer, Szilas-patak",
        "lat": "47.577384",
        "lon": "19.114891",
        "parent": "CSF00859"
    },
    {
        "id": "008428",
        "name": "Budakalász, Budai út",
        "lat": "47.617063",
        "lon": "19.051534",
        "parent": "CS008428"
    },
    {
        "id": "008429",
        "name": "Budakalász, Budai út",
        "lat": "47.616729",
        "lon": "19.051767",
        "parent": "CS008428"
    },
    {
        "id": "008430",
        "name": "Budakalász, Lenfonó H",
        "lat": "47.620304",
        "lon": "19.046374",
        "parent": "CS008431"
    },
    {
        "id": "008431",
        "name": "Budakalász, Lenfonó H",
        "lat": "47.621800",
        "lon": "19.045662",
        "parent": "CS008431"
    },
    {
        "id": "008432",
        "name": "Szentistvántelep H",
        "lat": "47.628444",
        "lon": "19.043367",
        "parent": "CS008432"
    },
    {
        "id": "008433",
        "name": "Szentistvántelep H",
        "lat": "47.627055",
        "lon": "19.043879",
        "parent": "CS008432"
    },
    {
        "id": "008434",
        "name": "Pomáz H",
        "lat": "47.643897",
        "lon": "19.030357",
        "parent": "CS008434"
    },
    {
        "id": "008435",
        "name": "Pomáz H",
        "lat": "47.642594",
        "lon": "19.031459",
        "parent": "CS008434"
    },
    {
        "id": "008436",
        "name": "Szentendre, Papírgyár",
        "lat": "47.648965",
        "lon": "19.069449",
        "parent": "CS008436"
    },
    {
        "id": "008437",
        "name": "Papírgyár",
        "lat": "47.647762",
        "lon": "19.069061",
        "parent": "CS008436"
    },
    {
        "id": "008438",
        "name": "Egyetem",
        "lat": "47.652306",
        "lon": "19.071738",
        "parent": "CS008438"
    },
    {
        "id": "008439",
        "name": "Egyetem",
        "lat": "47.652067",
        "lon": "19.071331",
        "parent": "CS008438"
    },
    {
        "id": "008447",
        "name": "Dióskert",
        "lat": "47.425580",
        "lon": "18.911840",
        "parent": ""
    },
    {
        "id": "008455",
        "name": "Jászai Mari tér",
        "lat": "47.512866",
        "lon": "19.047924",
        "parent": "CSF02511"
    },
    {
        "id": "008458",
        "name": "Tisza István tér",
        "lat": "47.517295",
        "lon": "19.107340",
        "parent": "CS008458"
    },
    {
        "id": "008459",
        "name": "Uzsoki Utcai Kórház",
        "lat": "47.519842",
        "lon": "19.103732",
        "parent": "CS008459"
    },
    {
        "id": "008460",
        "name": "Uzsoki Utcai Kórház",
        "lat": "47.519671",
        "lon": "19.103453",
        "parent": "CS008459"
    },
    {
        "id": "008461",
        "name": "Erzsébet királyné útja \/ Róna utca",
        "lat": "47.521615",
        "lon": "19.101317",
        "parent": ""
    },
    {
        "id": "008462",
        "name": "Bretzfeld utca",
        "lat": "47.460552",
        "lon": "18.945930",
        "parent": ""
    },
    {
        "id": "008471",
        "name": "Dél-pesti autóbuszgarázs",
        "lat": "47.426479",
        "lon": "19.160895",
        "parent": "CS043154"
    },
    {
        "id": "008472",
        "name": "Dél-pesti autóbuszgarázs",
        "lat": "47.426703",
        "lon": "19.161134",
        "parent": "CS043154"
    },
    {
        "id": "008479",
        "name": "Homokbánya utca",
        "lat": "47.399615",
        "lon": "18.941000",
        "parent": ""
    },
    {
        "id": "008480",
        "name": "Petőfi Sándor utca",
        "lat": "47.402428",
        "lon": "18.937682",
        "parent": "CS009094"
    },
    {
        "id": "008481",
        "name": "Soroksár felső H",
        "lat": "47.410028",
        "lon": "19.111501",
        "parent": "CSF04530"
    },
    {
        "id": "008486",
        "name": "Csonka János tér",
        "lat": "47.470132",
        "lon": "19.044780",
        "parent": "CS009425"
    },
    {
        "id": "008490",
        "name": "Határ út M",
        "lat": "47.464573",
        "lon": "19.126164",
        "parent": "CSF03930"
    },
    {
        "id": "008491",
        "name": "Jászberényi út",
        "lat": "47.485549",
        "lon": "19.192668",
        "parent": ""
    },
    {
        "id": "008498",
        "name": "Aszódi utca",
        "lat": "47.463482",
        "lon": "19.101007",
        "parent": "CSF01476"
    },
    {
        "id": "008499",
        "name": "Közterületfenntartó Zrt.",
        "lat": "47.467994",
        "lon": "19.106702",
        "parent": "CSF01481"
    },
    {
        "id": "008500",
        "name": "Ecseri út M",
        "lat": "47.470485",
        "lon": "19.108814",
        "parent": "CSF01495"
    },
    {
        "id": "008501",
        "name": "Ferencvárosi rendelőintézet",
        "lat": "47.476947",
        "lon": "19.075454",
        "parent": "CS008702"
    },
    {
        "id": "008519",
        "name": "Tímár utca H",
        "lat": "47.533311",
        "lon": "19.043634",
        "parent": ""
    },
    {
        "id": "008520",
        "name": "Szentlélek tér H",
        "lat": "47.539380",
        "lon": "19.047083",
        "parent": "CSF00621"
    },
    {
        "id": "008521",
        "name": "Serfőző utca",
        "lat": "47.538327",
        "lon": "19.046955",
        "parent": "CS009295"
    },
    {
        "id": "008532",
        "name": "Kossuth Lajos tér M",
        "lat": "47.505867",
        "lon": "19.048628",
        "parent": "CSF00970"
    },
    {
        "id": "008535",
        "name": "Cinkotai autóbuszgarázs",
        "lat": "47.498283",
        "lon": "19.237565",
        "parent": "CSF03286"
    },
    {
        "id": "008544",
        "name": "Szépvölgyi út H",
        "lat": "47.527482",
        "lon": "19.039956",
        "parent": ""
    },
    {
        "id": "008545",
        "name": "Puskás Ferenc Stadion M",
        "lat": "47.500124",
        "lon": "19.107069",
        "parent": "CS008132"
    },
    {
        "id": "008546",
        "name": "Boráros tér H",
        "lat": "47.479809",
        "lon": "19.067866",
        "parent": "CSF01516"
    },
    {
        "id": "008548",
        "name": "Gyál, Bem József utca",
        "lat": "47.372935",
        "lon": "19.216779",
        "parent": ""
    },
    {
        "id": "008549",
        "name": "Kisfaludy Sándor utca",
        "lat": "47.375035",
        "lon": "19.213621",
        "parent": ""
    },
    {
        "id": "008550",
        "name": "Toldi Miklós utca",
        "lat": "47.377325",
        "lon": "19.210039",
        "parent": ""
    },
    {
        "id": "008551",
        "name": "Bacsó Béla utca",
        "lat": "47.379534",
        "lon": "19.206696",
        "parent": ""
    },
    {
        "id": "008552",
        "name": "Erdősor utca",
        "lat": "47.383039",
        "lon": "19.201912",
        "parent": ""
    },
    {
        "id": "008553",
        "name": "Bajcsy-Zsilinszky utca",
        "lat": "47.385653",
        "lon": "19.204449",
        "parent": ""
    },
    {
        "id": "008559",
        "name": "Korompai utca",
        "lat": "47.484896",
        "lon": "19.012508",
        "parent": "CS008559"
    },
    {
        "id": "008560",
        "name": "Korompai utca",
        "lat": "47.484815",
        "lon": "19.012866",
        "parent": "CS008559"
    },
    {
        "id": "008567",
        "name": "Gazdagréti tér",
        "lat": "47.473321",
        "lon": "18.992775",
        "parent": "CSF02229"
    },
    {
        "id": "008569",
        "name": "Cinkotai autóbuszgarázs",
        "lat": "47.498194",
        "lon": "19.237086",
        "parent": "CSF03286"
    },
    {
        "id": "008575",
        "name": "Távíró utca",
        "lat": "47.461151",
        "lon": "19.118990",
        "parent": ""
    },
    {
        "id": "008577",
        "name": "Rákoshegy vasútállomás",
        "lat": "47.467968",
        "lon": "19.244845",
        "parent": "CSF03528"
    },
    {
        "id": "008587",
        "name": "Gyáli út",
        "lat": "47.456515",
        "lon": "19.111039",
        "parent": "CS008587"
    },
    {
        "id": "008588",
        "name": "Gyáli út",
        "lat": "47.456326",
        "lon": "19.110349",
        "parent": "CS008587"
    },
    {
        "id": "008589",
        "name": "Gyáli út",
        "lat": "47.466017",
        "lon": "19.103463",
        "parent": "CS008589"
    },
    {
        "id": "008590",
        "name": "Szent Gellért tér M",
        "lat": "47.483390",
        "lon": "19.053152",
        "parent": "CS044592"
    },
    {
        "id": "008591",
        "name": "Szent Gellért tér M",
        "lat": "47.483651",
        "lon": "19.053524",
        "parent": "CS044592"
    },
    {
        "id": "008593",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.476836",
        "lon": "19.047188",
        "parent": "CSF02198"
    },
    {
        "id": "008597",
        "name": "Sport utca",
        "lat": "47.455942",
        "lon": "18.948108",
        "parent": ""
    },
    {
        "id": "008598",
        "name": "Baross utca",
        "lat": "47.460328",
        "lon": "18.958490",
        "parent": "CS008598"
    },
    {
        "id": "008605",
        "name": "Kolosy tér",
        "lat": "47.527590",
        "lon": "19.036729",
        "parent": "CSF00137"
    },
    {
        "id": "008642",
        "name": "Székesdűlő",
        "lat": "47.611119",
        "lon": "19.104279",
        "parent": "CS008643"
    },
    {
        "id": "008643",
        "name": "Székesdűlő",
        "lat": "47.611164",
        "lon": "19.104053",
        "parent": "CS008643"
    },
    {
        "id": "008644",
        "name": "Vízművek",
        "lat": "47.599539",
        "lon": "19.092791",
        "parent": "CS008645"
    },
    {
        "id": "008645",
        "name": "Vízművek",
        "lat": "47.600312",
        "lon": "19.093310",
        "parent": "CS008645"
    },
    {
        "id": "008646",
        "name": "Áruházi bekötőút",
        "lat": "47.386494",
        "lon": "19.022627",
        "parent": "CS008647"
    },
    {
        "id": "008647",
        "name": "Áruházi bekötőút",
        "lat": "47.386539",
        "lon": "19.023091",
        "parent": "CS008647"
    },
    {
        "id": "008649",
        "name": "Székesdűlő, ipartelep",
        "lat": "47.615164",
        "lon": "19.109245",
        "parent": "CS008649"
    },
    {
        "id": "008650",
        "name": "Székesdűlő, ipartelep",
        "lat": "47.614750",
        "lon": "19.108806",
        "parent": "CS008649"
    },
    {
        "id": "008651",
        "name": "Auchan Sziget áruház",
        "lat": "47.384381",
        "lon": "19.025807",
        "parent": "CS008651"
    },
    {
        "id": "008652",
        "name": "Auchan Sziget áruház",
        "lat": "47.384174",
        "lon": "19.025966",
        "parent": "CS008651"
    },
    {
        "id": "008670",
        "name": "Auchan Liget",
        "lat": "47.541169",
        "lon": "19.247043",
        "parent": "CS074909"
    },
    {
        "id": "008684",
        "name": "Albertfalva kitérő",
        "lat": "47.452693",
        "lon": "19.038524",
        "parent": "CS008685"
    },
    {
        "id": "008685",
        "name": "Albertfalva kitérő",
        "lat": "47.452801",
        "lon": "19.038961",
        "parent": "CS008685"
    },
    {
        "id": "008692",
        "name": "Felsőcsatári köz",
        "lat": "47.458682",
        "lon": "19.177051",
        "parent": "CS008692"
    },
    {
        "id": "008694",
        "name": "Köztelek utca",
        "lat": "47.487044",
        "lon": "19.066933",
        "parent": ""
    },
    {
        "id": "008697",
        "name": "Újpest-Központ M",
        "lat": "47.560791",
        "lon": "19.090114",
        "parent": "CSF00910"
    },
    {
        "id": "008702",
        "name": "Ferencvárosi rendelőintézet",
        "lat": "47.477118",
        "lon": "19.075825",
        "parent": "CS008702"
    },
    {
        "id": "008708",
        "name": "Vízművek lakótelep",
        "lat": "47.597822",
        "lon": "19.091606",
        "parent": "CS008708"
    },
    {
        "id": "008725",
        "name": "Puskás Ferenc Stadion M",
        "lat": "47.499900",
        "lon": "19.104879",
        "parent": "CS008132"
    },
    {
        "id": "008731",
        "name": "Budagyöngye",
        "lat": "47.516130",
        "lon": "18.998891",
        "parent": "CSF00166"
    },
    {
        "id": "008736",
        "name": "Dániel út",
        "lat": "47.512863",
        "lon": "18.994978",
        "parent": "CS008737"
    },
    {
        "id": "008737",
        "name": "Dániel út",
        "lat": "47.512881",
        "lon": "18.994739",
        "parent": "CS008737"
    },
    {
        "id": "008740",
        "name": "Újbuda-központ M",
        "lat": "47.474683",
        "lon": "19.046385",
        "parent": "CSF01999"
    },
    {
        "id": "008750",
        "name": "Batthyány tér M+H",
        "lat": "47.505701",
        "lon": "19.039350",
        "parent": "CSF00065"
    },
    {
        "id": "008754",
        "name": "Pestszentimre vasútállomás (Dózsa Gy.u.)",
        "lat": "47.403586",
        "lon": "19.185688",
        "parent": "CSF03665"
    },
    {
        "id": "008772",
        "name": "Pestszentlőrinc vasútállomás",
        "lat": "47.454646",
        "lon": "19.181749",
        "parent": "CSF03845"
    },
    {
        "id": "008775",
        "name": "Ilonatelep H",
        "lat": "47.525831",
        "lon": "19.228646",
        "parent": "CSF03334"
    },
    {
        "id": "008782",
        "name": "Blaha Lujza tér M",
        "lat": "47.496881",
        "lon": "19.069160",
        "parent": "CSF01116"
    },
    {
        "id": "008785",
        "name": "Puskás Ferenc Stadion M",
        "lat": "47.499936",
        "lon": "19.105237",
        "parent": "CS008132"
    },
    {
        "id": "008788",
        "name": "Kőérberek",
        "lat": "47.445305",
        "lon": "18.999567",
        "parent": "CS009351"
    },
    {
        "id": "008789",
        "name": "Kőérberek",
        "lat": "47.445269",
        "lon": "18.999991",
        "parent": "CS009351"
    },
    {
        "id": "008792",
        "name": "Normafa",
        "lat": "47.502448",
        "lon": "18.965905",
        "parent": "CSF02489"
    },
    {
        "id": "008793",
        "name": "Regényes utca",
        "lat": "47.429436",
        "lon": "19.020658",
        "parent": "CSF04421"
    },
    {
        "id": "008801",
        "name": "Savoya Park",
        "lat": "47.436482",
        "lon": "19.040103",
        "parent": "CS009578"
    },
    {
        "id": "008802",
        "name": "Savoya Park",
        "lat": "47.435861",
        "lon": "19.042410",
        "parent": "CS009578"
    },
    {
        "id": "008832",
        "name": "Szakorvosi rendelőintézet",
        "lat": "47.443871",
        "lon": "19.181125",
        "parent": ""
    },
    {
        "id": "008841",
        "name": "Íves út",
        "lat": "47.592804",
        "lon": "19.107611",
        "parent": "CS044135"
    },
    {
        "id": "008842",
        "name": "Íves út",
        "lat": "47.592598",
        "lon": "19.106813",
        "parent": "CS044135"
    },
    {
        "id": "008844",
        "name": "Egressy út \/ Vezér utca",
        "lat": "47.519325",
        "lon": "19.126370",
        "parent": "CSF02804"
    },
    {
        "id": "008845",
        "name": "Kelenföld vasútállomás M",
        "lat": "47.464723",
        "lon": "19.023213",
        "parent": "CS007967"
    },
    {
        "id": "008846",
        "name": "Méhecske utca",
        "lat": "47.448032",
        "lon": "18.947797",
        "parent": "CS008846"
    },
    {
        "id": "008847",
        "name": "Méhecske utca",
        "lat": "47.447979",
        "lon": "18.947970",
        "parent": "CS008846"
    },
    {
        "id": "008850",
        "name": "Mikszáth Kálmán utca",
        "lat": "47.451162",
        "lon": "19.176781",
        "parent": "CS008850"
    },
    {
        "id": "008863",
        "name": "Gőzmozdony utca",
        "lat": "47.470054",
        "lon": "19.157193",
        "parent": ""
    },
    {
        "id": "008864",
        "name": "Savoya Park",
        "lat": "47.436023",
        "lon": "19.041574",
        "parent": "CS009578"
    },
    {
        "id": "008893",
        "name": "Csepeli átjáró",
        "lat": "47.436339",
        "lon": "19.092257",
        "parent": "CS009719"
    },
    {
        "id": "008894",
        "name": "Vízisport utca",
        "lat": "47.433997",
        "lon": "19.091263",
        "parent": "CS009718"
    },
    {
        "id": "008895",
        "name": "Teremszeg utca",
        "lat": "47.432951",
        "lon": "19.092221",
        "parent": ""
    },
    {
        "id": "008896",
        "name": "Pesterzsébet vasútállomás",
        "lat": "47.433417",
        "lon": "19.096414",
        "parent": "CSF04121"
    },
    {
        "id": "008898",
        "name": "Szakorvosi rendelő",
        "lat": "47.440886",
        "lon": "19.101780",
        "parent": ""
    },
    {
        "id": "008903",
        "name": "Szentmihályi út",
        "lat": "47.541396",
        "lon": "19.151947",
        "parent": "CS048009"
    },
    {
        "id": "008904",
        "name": "Kétújfalu utca",
        "lat": "47.419522",
        "lon": "19.209134",
        "parent": "CS008904"
    },
    {
        "id": "008910",
        "name": "Káposztásmegyer, Mogyoródi-patak",
        "lat": "47.598382",
        "lon": "19.121434",
        "parent": "CS009536"
    },
    {
        "id": "008911",
        "name": "Homoktövis iskola",
        "lat": "47.597234",
        "lon": "19.117084",
        "parent": "CS008911"
    },
    {
        "id": "008912",
        "name": "Hidegkuti Nándor Stadion",
        "lat": "47.490246",
        "lon": "19.110044",
        "parent": "CSF01275"
    },
    {
        "id": "008915",
        "name": "Jászberényi út \/ Maglódi út",
        "lat": "47.490399",
        "lon": "19.148450",
        "parent": "CSF01615"
    },
    {
        "id": "008916",
        "name": "Kőbányai garázs",
        "lat": "47.490648",
        "lon": "19.114424",
        "parent": "CS074021"
    },
    {
        "id": "008917",
        "name": "Kőbányai garázs",
        "lat": "47.490684",
        "lon": "19.113853",
        "parent": "CS074021"
    },
    {
        "id": "008918",
        "name": "Budatétény, benzinkút",
        "lat": "47.430123",
        "lon": "19.003651",
        "parent": ""
    },
    {
        "id": "008919",
        "name": "Pongrátz Gergely tér",
        "lat": "47.509771",
        "lon": "19.128546",
        "parent": "CS008919"
    },
    {
        "id": "008921",
        "name": "Dél-pesti autóbuszgarázs",
        "lat": "47.426613",
        "lon": "19.161081",
        "parent": "CS043154"
    },
    {
        "id": "008922",
        "name": "Gyula vezér út",
        "lat": "47.409254",
        "lon": "19.003430",
        "parent": "CS008971"
    },
    {
        "id": "008923",
        "name": "Kabai utca",
        "lat": "47.495749",
        "lon": "19.160431",
        "parent": "CS008923"
    },
    {
        "id": "008924",
        "name": "Kabai utca",
        "lat": "47.495605",
        "lon": "19.160418",
        "parent": "CS008923"
    },
    {
        "id": "008939",
        "name": "Békásmegyer H",
        "lat": "47.598408",
        "lon": "19.054259",
        "parent": "CS008940"
    },
    {
        "id": "008940",
        "name": "Békásmegyer H",
        "lat": "47.598633",
        "lon": "19.054086",
        "parent": "CS008940"
    },
    {
        "id": "008941",
        "name": "Váci út",
        "lat": "47.561245",
        "lon": "19.079377",
        "parent": ""
    },
    {
        "id": "008942",
        "name": "Örs vezér tere M+H",
        "lat": "47.503279",
        "lon": "19.137603",
        "parent": "CS003106"
    },
    {
        "id": "008943",
        "name": "Budatétény, benzinkút",
        "lat": "47.431086",
        "lon": "19.004419",
        "parent": ""
    },
    {
        "id": "008944",
        "name": "Újpest-Városkapu M (Váci út)",
        "lat": "47.556577",
        "lon": "19.076558",
        "parent": "CS011762"
    },
    {
        "id": "008945",
        "name": "Újpest-Városkapu M (Váci út)",
        "lat": "47.558115",
        "lon": "19.076904",
        "parent": "CS011762"
    },
    {
        "id": "008946",
        "name": "Szénás utca",
        "lat": "47.527604",
        "lon": "19.181627",
        "parent": ""
    },
    {
        "id": "008947",
        "name": "Szlovák út",
        "lat": "47.531165",
        "lon": "19.189578",
        "parent": "CSF03216"
    },
    {
        "id": "008948",
        "name": "Kucorgó tér",
        "lat": "47.469328",
        "lon": "19.295153",
        "parent": "CS008948"
    },
    {
        "id": "008949",
        "name": "Pestszentimre vasútáll. (Nagykőrösi út)",
        "lat": "47.403423",
        "lon": "19.186602",
        "parent": "CSF03665"
    },
    {
        "id": "008950",
        "name": "Pestszentimre vasútáll. (Nagykőrösi út)",
        "lat": "47.404315",
        "lon": "19.185664",
        "parent": "CSF03665"
    },
    {
        "id": "008951",
        "name": "Béke tér",
        "lat": "47.430019",
        "lon": "19.215675",
        "parent": "CS008951"
    },
    {
        "id": "008952",
        "name": "Terv utca",
        "lat": "47.408012",
        "lon": "19.001509",
        "parent": "CSF04463"
    },
    {
        "id": "008953",
        "name": "Csillag utca",
        "lat": "47.409214",
        "lon": "19.119000",
        "parent": "CS008954"
    },
    {
        "id": "008954",
        "name": "Csillag utca",
        "lat": "47.409565",
        "lon": "19.119053",
        "parent": "CS008954"
    },
    {
        "id": "008955",
        "name": "Gombosszeg köz",
        "lat": "47.413020",
        "lon": "19.118396",
        "parent": "CS008955"
    },
    {
        "id": "008956",
        "name": "Gombosszeg köz",
        "lat": "47.412723",
        "lon": "19.118475",
        "parent": "CS008955"
    },
    {
        "id": "008957",
        "name": "Előd utca",
        "lat": "47.418651",
        "lon": "19.117329",
        "parent": ""
    },
    {
        "id": "008958",
        "name": "Alsó határút",
        "lat": "47.416313",
        "lon": "19.116399",
        "parent": "CS008958"
    },
    {
        "id": "008959",
        "name": "Templom utca 6.",
        "lat": "47.408876",
        "lon": "19.113620",
        "parent": ""
    },
    {
        "id": "008960",
        "name": "Gyáli-patak",
        "lat": "47.394698",
        "lon": "19.116570",
        "parent": "CS049172"
    },
    {
        "id": "008961",
        "name": "Soroksár, Hősök tere H",
        "lat": "47.399339",
        "lon": "19.116483",
        "parent": "CSF04542"
    },
    {
        "id": "008962",
        "name": "Szent István utca H",
        "lat": "47.392297",
        "lon": "19.115202",
        "parent": "CS008962"
    },
    {
        "id": "008963",
        "name": "Grassalkovich út",
        "lat": "47.390505",
        "lon": "19.118896",
        "parent": ""
    },
    {
        "id": "008964",
        "name": "Tartsay utca",
        "lat": "47.421343",
        "lon": "19.127194",
        "parent": ""
    },
    {
        "id": "008965",
        "name": "Szent László utca",
        "lat": "47.421272",
        "lon": "19.126902",
        "parent": "CS008965"
    },
    {
        "id": "008966",
        "name": "Mesgye utca",
        "lat": "47.417248",
        "lon": "19.131070",
        "parent": "CS008966"
    },
    {
        "id": "008967",
        "name": "Mesgye utca (Szentlőrinci úti lakótelep)",
        "lat": "47.416978",
        "lon": "19.131216",
        "parent": "CS008966"
    },
    {
        "id": "008971",
        "name": "Gyula vezér út",
        "lat": "47.409902",
        "lon": "19.004383",
        "parent": "CS008971"
    },
    {
        "id": "009000",
        "name": "Kistarcsa H",
        "lat": "47.545503",
        "lon": "19.259839",
        "parent": "CS009001"
    },
    {
        "id": "009001",
        "name": "Kistarcsa H",
        "lat": "47.545584",
        "lon": "19.259693",
        "parent": "CS009001"
    },
    {
        "id": "009002",
        "name": "Kerepes H",
        "lat": "47.552463",
        "lon": "19.270562",
        "parent": "CS009002"
    },
    {
        "id": "009003",
        "name": "Kerepes H",
        "lat": "47.551324",
        "lon": "19.268897",
        "parent": "CS009002"
    },
    {
        "id": "009004",
        "name": "Szilasligeti elágazás",
        "lat": "47.560201",
        "lon": "19.283112",
        "parent": "CS009006"
    },
    {
        "id": "009005",
        "name": "Kerepes, Szabadság útja",
        "lat": "47.560786",
        "lon": "19.282783",
        "parent": ""
    },
    {
        "id": "009006",
        "name": "Szilasligeti elágazás",
        "lat": "47.560766",
        "lon": "19.283700",
        "parent": "CS009006"
    },
    {
        "id": "009007",
        "name": "Szilasliget, Posta",
        "lat": "47.569550",
        "lon": "19.272176",
        "parent": "CS009008"
    },
    {
        "id": "009008",
        "name": "Szilasliget, Posta",
        "lat": "47.569882",
        "lon": "19.272430",
        "parent": "CS009008"
    },
    {
        "id": "009009",
        "name": "Szilasliget, Wesselényi utca",
        "lat": "47.573117",
        "lon": "19.269227",
        "parent": "CS009009"
    },
    {
        "id": "009010",
        "name": "Szilasliget, Wesselényi utca",
        "lat": "47.572955",
        "lon": "19.269240",
        "parent": "CS009009"
    },
    {
        "id": "009011",
        "name": "Szilasliget, Szondi utca",
        "lat": "47.575273",
        "lon": "19.266059",
        "parent": "CS009012"
    },
    {
        "id": "009012",
        "name": "Szilasliget, Szondi utca",
        "lat": "47.575382",
        "lon": "19.265687",
        "parent": "CS009012"
    },
    {
        "id": "009013",
        "name": "Szilasliget, Kemping",
        "lat": "47.578226",
        "lon": "19.261133",
        "parent": ""
    },
    {
        "id": "009014",
        "name": "EGIS-telep (Szentjakab H)",
        "lat": "47.592911",
        "lon": "19.284773",
        "parent": "CS009014"
    },
    {
        "id": "009015",
        "name": "EGIS-telep (Szentjakab H)",
        "lat": "47.592495",
        "lon": "19.285583",
        "parent": "CS009014"
    },
    {
        "id": "009016",
        "name": "Gödöllő, Szökőkút",
        "lat": "47.599126",
        "lon": "19.346731",
        "parent": ""
    },
    {
        "id": "009017",
        "name": "Gödöllő, Szabadság tér H",
        "lat": "47.599243",
        "lon": "19.346771",
        "parent": ""
    },
    {
        "id": "009018",
        "name": "Gödöllő, Szabadság tér H",
        "lat": "47.598050",
        "lon": "19.349038",
        "parent": ""
    },
    {
        "id": "009019",
        "name": "Gödöllő, Palotakert H",
        "lat": "47.598734",
        "lon": "19.355678",
        "parent": "CS009019"
    },
    {
        "id": "009020",
        "name": "Gödöllő, Palotakert H",
        "lat": "47.598679",
        "lon": "19.356116",
        "parent": "CS009019"
    },
    {
        "id": "009021",
        "name": "Gödöllő H",
        "lat": "47.592368",
        "lon": "19.358154",
        "parent": ""
    },
    {
        "id": "009022",
        "name": "Mogyoród H",
        "lat": "47.595494",
        "lon": "19.271446",
        "parent": ""
    },
    {
        "id": "009025",
        "name": "Zichy Jenő utca",
        "lat": "47.505183",
        "lon": "19.057920",
        "parent": "CS009026"
    },
    {
        "id": "009026",
        "name": "Zichy Jenő utca",
        "lat": "47.505265",
        "lon": "19.057627",
        "parent": "CS009026"
    },
    {
        "id": "009031",
        "name": "Margit híd, budai hídfő H",
        "lat": "47.514834",
        "lon": "19.035830",
        "parent": "CSF00234"
    },
    {
        "id": "009039",
        "name": "Csanády utca (Lehel tér M)",
        "lat": "47.515897",
        "lon": "19.058930",
        "parent": "CSF02612"
    },
    {
        "id": "009041",
        "name": "Haller utca \/ Soroksári út",
        "lat": "47.475041",
        "lon": "19.069881",
        "parent": "CSF01386"
    },
    {
        "id": "009042",
        "name": "Haller utca \/ Soroksári út",
        "lat": "47.474816",
        "lon": "19.070199",
        "parent": "CSF01386"
    },
    {
        "id": "009047",
        "name": "Homoktövis utca",
        "lat": "47.594582",
        "lon": "19.113184",
        "parent": "CS009047"
    },
    {
        "id": "009065",
        "name": "Solymár, Szarvas",
        "lat": "47.596321",
        "lon": "18.973591",
        "parent": "CS009065"
    },
    {
        "id": "009066",
        "name": "Solymár, Szarvas",
        "lat": "47.596178",
        "lon": "18.974455",
        "parent": "CS009065"
    },
    {
        "id": "009067",
        "name": "Solymár, Auchan áruház",
        "lat": "47.597798",
        "lon": "18.963376",
        "parent": ""
    },
    {
        "id": "009072",
        "name": "AsiaCenter",
        "lat": "47.548434",
        "lon": "19.146925",
        "parent": ""
    },
    {
        "id": "009085",
        "name": "Budaörs vasútállomás",
        "lat": "47.448190",
        "lon": "18.964863",
        "parent": "CS009589"
    },
    {
        "id": "009094",
        "name": "Petőfi Sándor utca",
        "lat": "47.402454",
        "lon": "18.937006",
        "parent": "CS009094"
    },
    {
        "id": "009095",
        "name": "Pacsirta utca",
        "lat": "47.404610",
        "lon": "18.933941",
        "parent": "CS009096"
    },
    {
        "id": "009096",
        "name": "Pacsirta utca",
        "lat": "47.404637",
        "lon": "18.933742",
        "parent": "CS009096"
    },
    {
        "id": "009097",
        "name": "Nóra utca",
        "lat": "47.407368",
        "lon": "18.930795",
        "parent": "CS009097"
    },
    {
        "id": "009098",
        "name": "Nóra utca",
        "lat": "47.407278",
        "lon": "18.930716",
        "parent": "CS009097"
    },
    {
        "id": "009099",
        "name": "Katinka utca",
        "lat": "47.410333",
        "lon": "18.927025",
        "parent": "CS009099"
    },
    {
        "id": "009100",
        "name": "Katinka utca",
        "lat": "47.410135",
        "lon": "18.927145",
        "parent": "CS009099"
    },
    {
        "id": "009101",
        "name": "Tátika utca",
        "lat": "47.412900",
        "lon": "18.930319",
        "parent": "CS009101"
    },
    {
        "id": "009102",
        "name": "Tátika utca",
        "lat": "47.412836",
        "lon": "18.930001",
        "parent": "CS009101"
    },
    {
        "id": "009103",
        "name": "Valéria utca",
        "lat": "47.414044",
        "lon": "18.932675",
        "parent": "CS009104"
    },
    {
        "id": "009104",
        "name": "Valéria utca",
        "lat": "47.414107",
        "lon": "18.932595",
        "parent": "CS009104"
    },
    {
        "id": "009105",
        "name": "Diósd, Búzavirág utca",
        "lat": "47.416609",
        "lon": "18.934233",
        "parent": ""
    },
    {
        "id": "009119",
        "name": "Szentendre H",
        "lat": "47.659618",
        "lon": "19.074522",
        "parent": "CSF04687"
    },
    {
        "id": "009137",
        "name": "Újmajori utca",
        "lat": "47.471715",
        "lon": "19.220093",
        "parent": ""
    },
    {
        "id": "009138",
        "name": "Csillagmotor köz",
        "lat": "47.471018",
        "lon": "19.221893",
        "parent": ""
    },
    {
        "id": "009139",
        "name": "Dedics Ferenc utca",
        "lat": "47.469113",
        "lon": "19.226092",
        "parent": ""
    },
    {
        "id": "009140",
        "name": "Ősrepülő utca",
        "lat": "47.469552",
        "lon": "19.227168",
        "parent": ""
    },
    {
        "id": "009145",
        "name": "Haller utca \/ Mester utca",
        "lat": "47.475966",
        "lon": "19.077802",
        "parent": "CSF01395"
    },
    {
        "id": "009146",
        "name": "Vágóhíd utca",
        "lat": "47.473699",
        "lon": "19.079631",
        "parent": "CS009146"
    },
    {
        "id": "009147",
        "name": "Vörösmarty utca",
        "lat": "47.419900",
        "lon": "19.120300",
        "parent": ""
    },
    {
        "id": "009148",
        "name": "Szusza Ferenc Stadion",
        "lat": "47.575797",
        "lon": "19.083759",
        "parent": "CSF00767"
    },
    {
        "id": "009153",
        "name": "Óbudai rendelőintézet",
        "lat": "47.545394",
        "lon": "19.033784",
        "parent": "CSF00584"
    },
    {
        "id": "009154",
        "name": "Atlétikai stadion",
        "lat": "47.572653",
        "lon": "19.114447",
        "parent": "CS009154"
    },
    {
        "id": "009155",
        "name": "Atlétikai stadion",
        "lat": "47.572194",
        "lon": "19.114140",
        "parent": "CS009154"
    },
    {
        "id": "009160",
        "name": "Keleti pályaudvar M",
        "lat": "47.499449",
        "lon": "19.083401",
        "parent": "CSF01131"
    },
    {
        "id": "009161",
        "name": "Keleti pályaudvar M",
        "lat": "47.499449",
        "lon": "19.084025",
        "parent": "CSF01131"
    },
    {
        "id": "009162",
        "name": "Keleti pályaudvar M",
        "lat": "47.499998",
        "lon": "19.083230",
        "parent": "CSF01131"
    },
    {
        "id": "009163",
        "name": "Keleti pályaudvar M",
        "lat": "47.499998",
        "lon": "19.083748",
        "parent": "CSF01131"
    },
    {
        "id": "009166",
        "name": "Magdolna utca",
        "lat": "47.492810",
        "lon": "19.087539",
        "parent": "CS009702"
    },
    {
        "id": "009170",
        "name": "Pomáz, Dózsa György utca",
        "lat": "47.645570",
        "lon": "19.027226",
        "parent": "CS009170"
    },
    {
        "id": "009171",
        "name": "Pomáz, Dózsa György utca",
        "lat": "47.645554",
        "lon": "19.027001",
        "parent": "CS009170"
    },
    {
        "id": "009174",
        "name": "Széll Kálmán tér M",
        "lat": "47.507655",
        "lon": "19.024868",
        "parent": "CS073099"
    },
    {
        "id": "009176",
        "name": "Kossuth Lajos tér M",
        "lat": "47.505867",
        "lon": "19.048588",
        "parent": "CSF00970"
    },
    {
        "id": "009179",
        "name": "Petőfi híd, budai hídfő",
        "lat": "47.476773",
        "lon": "19.058876",
        "parent": "CSF02225"
    },
    {
        "id": "009192",
        "name": "Kacsóh Pongrác utca",
        "lat": "47.396486",
        "lon": "19.208733",
        "parent": "CS009193"
    },
    {
        "id": "009193",
        "name": "Kacsóh Pongrác utca",
        "lat": "47.396873",
        "lon": "19.208748",
        "parent": "CS009193"
    },
    {
        "id": "009194",
        "name": "Gyál, Ady Endre utca",
        "lat": "47.389907",
        "lon": "19.217972",
        "parent": "CS009195"
    },
    {
        "id": "009195",
        "name": "Gyál, Ady Endre utca",
        "lat": "47.390177",
        "lon": "19.217708",
        "parent": "CS009195"
    },
    {
        "id": "009196",
        "name": "Széchenyi István utca",
        "lat": "47.381846",
        "lon": "19.230727",
        "parent": ""
    },
    {
        "id": "009197",
        "name": "Bocskai István utca",
        "lat": "47.383397",
        "lon": "19.228295",
        "parent": "CSF04649"
    },
    {
        "id": "009198",
        "name": "Dobó Katica utca",
        "lat": "47.386832",
        "lon": "19.222956",
        "parent": ""
    },
    {
        "id": "009199",
        "name": "Mátyás király utca",
        "lat": "47.394694",
        "lon": "19.210516",
        "parent": "CS009200"
    },
    {
        "id": "009200",
        "name": "Mátyás király utca",
        "lat": "47.394883",
        "lon": "19.210398",
        "parent": "CS009200"
    },
    {
        "id": "009201",
        "name": "Tulipán utca",
        "lat": "47.392296",
        "lon": "19.214271",
        "parent": "CS009202"
    },
    {
        "id": "009202",
        "name": "Tulipán utca",
        "lat": "47.392314",
        "lon": "19.214417",
        "parent": "CS009202"
    },
    {
        "id": "009203",
        "name": "Gyál, Deák Ferenc utca",
        "lat": "47.385265",
        "lon": "19.235533",
        "parent": ""
    },
    {
        "id": "009204",
        "name": "Árpád utca",
        "lat": "47.388079",
        "lon": "19.231106",
        "parent": ""
    },
    {
        "id": "009205",
        "name": "Dobó Katica utca",
        "lat": "47.389747",
        "lon": "19.228502",
        "parent": ""
    },
    {
        "id": "009206",
        "name": "Táncsics Mihály utca",
        "lat": "47.392091",
        "lon": "19.224894",
        "parent": ""
    },
    {
        "id": "009207",
        "name": "Kossuth Lajos utca",
        "lat": "47.391701",
        "lon": "19.221210",
        "parent": ""
    },
    {
        "id": "009208",
        "name": "Pestszentlőrinc, Szarvas csárda tér",
        "lat": "47.441357",
        "lon": "19.185110",
        "parent": "CSF03711"
    },
    {
        "id": "009220",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.477499",
        "lon": "19.048349",
        "parent": "CSF02198"
    },
    {
        "id": "009225",
        "name": "Noszlopy utca",
        "lat": "47.471959",
        "lon": "19.148362",
        "parent": "CS009225"
    },
    {
        "id": "009230",
        "name": "Deák Ferenc tér M",
        "lat": "47.497701",
        "lon": "19.053353",
        "parent": "CS038717"
    },
    {
        "id": "009234",
        "name": "Pestszentimre vasútállomás (Nemes utca)",
        "lat": "47.404493",
        "lon": "19.187068",
        "parent": "CSF03665"
    },
    {
        "id": "009238",
        "name": "Szent Korona utca",
        "lat": "47.525692",
        "lon": "19.169817",
        "parent": "CSF03357"
    },
    {
        "id": "009239",
        "name": "Csömöri út",
        "lat": "47.528249",
        "lon": "19.167313",
        "parent": "CSF03258"
    },
    {
        "id": "009240",
        "name": "Sasvár utca, korlátozott forg.mh.",
        "lat": "47.518340",
        "lon": "19.180675",
        "parent": "CS009240"
    },
    {
        "id": "009241",
        "name": "Margit utca",
        "lat": "47.515079",
        "lon": "19.185207",
        "parent": ""
    },
    {
        "id": "009243",
        "name": "Alsó határút",
        "lat": "47.416223",
        "lon": "19.116187",
        "parent": "CS008958"
    },
    {
        "id": "009289",
        "name": "Gergely utca",
        "lat": "47.468734",
        "lon": "19.154524",
        "parent": "CS009289"
    },
    {
        "id": "009290",
        "name": "Közvágóhíd H",
        "lat": "47.466702",
        "lon": "19.076032",
        "parent": "CSF01527"
    },
    {
        "id": "009292",
        "name": "Szigetszentmiklós, városháza",
        "lat": "47.348591",
        "lon": "19.044709",
        "parent": "CS009292"
    },
    {
        "id": "009295",
        "name": "Serfőző utca",
        "lat": "47.539095",
        "lon": "19.045373",
        "parent": "CS009295"
    },
    {
        "id": "009301",
        "name": "Gárdonyi Géza utca",
        "lat": "47.405396",
        "lon": "18.947745",
        "parent": ""
    },
    {
        "id": "009309",
        "name": "Deák Ferenc tér M",
        "lat": "47.497404",
        "lon": "19.055755",
        "parent": "CS038717"
    },
    {
        "id": "009310",
        "name": "Millenniumi Kulturális Központ",
        "lat": "47.470390",
        "lon": "19.074044",
        "parent": "CS008240"
    },
    {
        "id": "009311",
        "name": "BILK, bekötőút",
        "lat": "47.378957",
        "lon": "19.129170",
        "parent": ""
    },
    {
        "id": "009312",
        "name": "MNB",
        "lat": "47.376865",
        "lon": "19.124280",
        "parent": "CS009312"
    },
    {
        "id": "009314",
        "name": "BILK, DF épület",
        "lat": "47.375197",
        "lon": "19.120908",
        "parent": ""
    },
    {
        "id": "009315",
        "name": "MNB",
        "lat": "47.376667",
        "lon": "19.124426",
        "parent": "CS009312"
    },
    {
        "id": "009318",
        "name": "Örs vezér tere M+H",
        "lat": "47.503245",
        "lon": "19.135293",
        "parent": "CS003106"
    },
    {
        "id": "009321",
        "name": "Keleti pályaudvar M",
        "lat": "47.499998",
        "lon": "19.084332",
        "parent": "CSF01131"
    },
    {
        "id": "009322",
        "name": "Örs vezér tere M+H (Kerepesi út)",
        "lat": "47.503306",
        "lon": "19.137868",
        "parent": "CS003106"
    },
    {
        "id": "009325",
        "name": "Közvágóhíd H, tároló",
        "lat": "47.467520",
        "lon": "19.076073",
        "parent": "CSF01527"
    },
    {
        "id": "009337",
        "name": "Orbánhegyi dűlő",
        "lat": "47.386327",
        "lon": "19.110228",
        "parent": "CS009338"
    },
    {
        "id": "009338",
        "name": "Orbánhegyi dűlő",
        "lat": "47.386390",
        "lon": "19.110480",
        "parent": "CS009338"
    },
    {
        "id": "009339",
        "name": "Szent István utca H",
        "lat": "47.391083",
        "lon": "19.114168",
        "parent": "CS008962"
    },
    {
        "id": "009349",
        "name": "Budaörsi repülőtér",
        "lat": "47.447079",
        "lon": "18.986730",
        "parent": "CSF01913"
    },
    {
        "id": "009350",
        "name": "Budaörsi repülőtér",
        "lat": "47.447007",
        "lon": "18.986584",
        "parent": "CSF01913"
    },
    {
        "id": "009351",
        "name": "Kőérberek",
        "lat": "47.446339",
        "lon": "18.998545",
        "parent": "CS009351"
    },
    {
        "id": "009352",
        "name": "Kőérberek",
        "lat": "47.446231",
        "lon": "18.998784",
        "parent": "CS009351"
    },
    {
        "id": "009353",
        "name": "Tippan utca",
        "lat": "47.447968",
        "lon": "19.000851",
        "parent": "CS009353"
    },
    {
        "id": "009354",
        "name": "Tippan utca",
        "lat": "47.447788",
        "lon": "19.000374",
        "parent": "CS009353"
    },
    {
        "id": "009355",
        "name": "Régi vám (Kánai út)",
        "lat": "47.446377",
        "lon": "19.003968",
        "parent": "CS009431"
    },
    {
        "id": "009356",
        "name": "Régi vám (Kánai út)",
        "lat": "47.446278",
        "lon": "19.004075",
        "parent": "CS009431"
    },
    {
        "id": "009358",
        "name": "Millenniumtelep H",
        "lat": "47.379620",
        "lon": "19.104287",
        "parent": ""
    },
    {
        "id": "009359",
        "name": "Boráros tér H",
        "lat": "47.479755",
        "lon": "19.066473",
        "parent": "CSF01516"
    },
    {
        "id": "009365",
        "name": "Zsil utca",
        "lat": "47.482787",
        "lon": "19.063024",
        "parent": "CSF01346"
    },
    {
        "id": "009369",
        "name": "Csepel, Horgásztanya",
        "lat": "47.388390",
        "lon": "19.103502",
        "parent": "CS009369"
    },
    {
        "id": "009372",
        "name": "Pestszentlőrinc, Béke tér",
        "lat": "47.429102",
        "lon": "19.218511",
        "parent": "CS008951"
    },
    {
        "id": "009373",
        "name": "Hunyadvár utca",
        "lat": "47.508234",
        "lon": "19.192106",
        "parent": ""
    },
    {
        "id": "009375",
        "name": "Szilas-patak",
        "lat": "47.529748",
        "lon": "19.186427",
        "parent": "CSF03351"
    },
    {
        "id": "009376",
        "name": "Újpalota, Nyírpalota út",
        "lat": "47.547035",
        "lon": "19.141981",
        "parent": "CSF03166"
    },
    {
        "id": "009377",
        "name": "Jókai Mór utca (Rendőrség)",
        "lat": "47.510368",
        "lon": "19.190492",
        "parent": "CSF03393"
    },
    {
        "id": "009379",
        "name": "József utca",
        "lat": "47.532065",
        "lon": "19.155820",
        "parent": "CSF02994"
    },
    {
        "id": "009381",
        "name": "Rózsa utca",
        "lat": "47.515812",
        "lon": "19.155721",
        "parent": "CSF03283"
    },
    {
        "id": "009382",
        "name": "Jávorfa utca",
        "lat": "47.526052",
        "lon": "19.177918",
        "parent": "CS009382"
    },
    {
        "id": "009383",
        "name": "János utca",
        "lat": "47.523533",
        "lon": "19.172315",
        "parent": "CS009383"
    },
    {
        "id": "009392",
        "name": "Csillaghegy H",
        "lat": "47.586451",
        "lon": "19.045477",
        "parent": "CS009392"
    },
    {
        "id": "009412",
        "name": "Karolina út",
        "lat": "47.473540",
        "lon": "19.034432",
        "parent": "CS009412"
    },
    {
        "id": "009413",
        "name": "Ezredes utca",
        "lat": "47.510057",
        "lon": "19.021771",
        "parent": "CSF00304"
    },
    {
        "id": "009415",
        "name": "Sárfű utca",
        "lat": "47.550060",
        "lon": "19.138067",
        "parent": "CS009415"
    },
    {
        "id": "009420",
        "name": "Honvédkórház",
        "lat": "47.531588",
        "lon": "19.070912",
        "parent": "CS009420"
    },
    {
        "id": "009421",
        "name": "Ezred utca",
        "lat": "47.606004",
        "lon": "19.097598",
        "parent": "CS009422"
    },
    {
        "id": "009422",
        "name": "Ezred utca",
        "lat": "47.606849",
        "lon": "19.098223",
        "parent": "CS009422"
    },
    {
        "id": "009425",
        "name": "Csonka János tér",
        "lat": "47.470555",
        "lon": "19.045271",
        "parent": "CS009425"
    },
    {
        "id": "009426",
        "name": "Zugló vasútállomás",
        "lat": "47.511855",
        "lon": "19.099631",
        "parent": "CS009426"
    },
    {
        "id": "009427",
        "name": "Kelenföldi autóbuszgarázs",
        "lat": "47.473243",
        "lon": "19.029590",
        "parent": "CSF02220"
    },
    {
        "id": "009429",
        "name": "Keserűvíztelep (Bobpálya)",
        "lat": "47.454806",
        "lon": "19.007542",
        "parent": "CS009429"
    },
    {
        "id": "009430",
        "name": "Keserűvíztelep (Bobpálya)",
        "lat": "47.453880",
        "lon": "19.007516",
        "parent": "CS009429"
    },
    {
        "id": "009431",
        "name": "Régi vám",
        "lat": "47.446818",
        "lon": "19.006063",
        "parent": "CS009431"
    },
    {
        "id": "009438",
        "name": "Budakeszi, Honfoglalás sétány",
        "lat": "47.517899",
        "lon": "18.924110",
        "parent": ""
    },
    {
        "id": "009439",
        "name": "Zichy Péter utca",
        "lat": "47.515575",
        "lon": "18.922359",
        "parent": "CS009440"
    },
    {
        "id": "009440",
        "name": "Zichy Péter utca",
        "lat": "47.516162",
        "lon": "18.922560",
        "parent": "CS009440"
    },
    {
        "id": "009441",
        "name": "Temető utca",
        "lat": "47.514938",
        "lon": "18.921820",
        "parent": ""
    },
    {
        "id": "009442",
        "name": "Gimnázium",
        "lat": "47.512067",
        "lon": "18.928677",
        "parent": "CS009442"
    },
    {
        "id": "009443",
        "name": "Gimnázium",
        "lat": "47.512056",
        "lon": "18.927509",
        "parent": "CS009442"
    },
    {
        "id": "009445",
        "name": "Tatárka utca",
        "lat": "47.434041",
        "lon": "19.021173",
        "parent": "CS009445"
    },
    {
        "id": "009446",
        "name": "Botond utca",
        "lat": "47.403953",
        "lon": "18.995789",
        "parent": ""
    },
    {
        "id": "009447",
        "name": "Mátyás király utca",
        "lat": "47.404446",
        "lon": "18.991589",
        "parent": "CS009447"
    },
    {
        "id": "009448",
        "name": "Görgey utca",
        "lat": "47.406802",
        "lon": "18.991613",
        "parent": ""
    },
    {
        "id": "009449",
        "name": "Török utca",
        "lat": "47.411614",
        "lon": "18.989898",
        "parent": "CS062516"
    },
    {
        "id": "009451",
        "name": "Gyűszű utca",
        "lat": "47.417266",
        "lon": "19.022400",
        "parent": ""
    },
    {
        "id": "009452",
        "name": "Húr utca",
        "lat": "47.416159",
        "lon": "19.020426",
        "parent": ""
    },
    {
        "id": "009453",
        "name": "Dévény utca",
        "lat": "47.415224",
        "lon": "19.022189",
        "parent": ""
    },
    {
        "id": "009454",
        "name": "Wesselényi utca",
        "lat": "47.415917",
        "lon": "19.026059",
        "parent": ""
    },
    {
        "id": "009455",
        "name": "Ostor utca",
        "lat": "47.416665",
        "lon": "19.029941",
        "parent": ""
    },
    {
        "id": "009456",
        "name": "Római utca",
        "lat": "47.417930",
        "lon": "19.017589",
        "parent": "CS009456"
    },
    {
        "id": "009457",
        "name": "Római utca",
        "lat": "47.417175",
        "lon": "19.018319",
        "parent": "CS009456"
    },
    {
        "id": "009458",
        "name": "Hűség utca",
        "lat": "47.421203",
        "lon": "19.013519",
        "parent": "CS009458"
    },
    {
        "id": "009459",
        "name": "Hűség utca",
        "lat": "47.420529",
        "lon": "19.014023",
        "parent": "CS009458"
    },
    {
        "id": "009460",
        "name": "Komáromi út",
        "lat": "47.424593",
        "lon": "19.010866",
        "parent": "CS009460"
    },
    {
        "id": "009461",
        "name": "Komáromi út",
        "lat": "47.423955",
        "lon": "19.011131",
        "parent": "CS009460"
    },
    {
        "id": "009462",
        "name": "Tanító utca",
        "lat": "47.435306",
        "lon": "19.008724",
        "parent": "CS009462"
    },
    {
        "id": "009463",
        "name": "Tanító utca",
        "lat": "47.435297",
        "lon": "19.009784",
        "parent": "CS009462"
    },
    {
        "id": "009465",
        "name": "Plébánia utca",
        "lat": "47.429726",
        "lon": "19.032323",
        "parent": "CS009465"
    },
    {
        "id": "009466",
        "name": "Plébánia utca",
        "lat": "47.429690",
        "lon": "19.032217",
        "parent": "CS009465"
    },
    {
        "id": "009467",
        "name": "Galamb utca",
        "lat": "47.432765",
        "lon": "19.028517",
        "parent": "CS009467"
    },
    {
        "id": "009468",
        "name": "Galamb utca",
        "lat": "47.432711",
        "lon": "19.028438",
        "parent": "CS009467"
    },
    {
        "id": "009469",
        "name": "Alkotmány utca",
        "lat": "47.433430",
        "lon": "19.025932",
        "parent": "CS009469"
    },
    {
        "id": "009470",
        "name": "Alkotmány utca",
        "lat": "47.433385",
        "lon": "19.025919",
        "parent": "CS009469"
    },
    {
        "id": "009471",
        "name": "Széchenyi utca",
        "lat": "47.418185",
        "lon": "19.032578",
        "parent": "CS009473"
    },
    {
        "id": "009472",
        "name": "Promontor utca",
        "lat": "47.418094",
        "lon": "19.027012",
        "parent": ""
    },
    {
        "id": "009473",
        "name": "Széchenyi utca",
        "lat": "47.418464",
        "lon": "19.032657",
        "parent": "CS009473"
    },
    {
        "id": "009474",
        "name": "Komló utca",
        "lat": "47.421339",
        "lon": "19.035137",
        "parent": "CSF04410"
    },
    {
        "id": "009475",
        "name": "Méhész utca",
        "lat": "47.438577",
        "lon": "19.034667",
        "parent": ""
    },
    {
        "id": "009478",
        "name": "Szent Lőrinc-telep (tervezett)",
        "lat": "47.432106",
        "lon": "19.172930",
        "parent": "CSF03620"
    },
    {
        "id": "009479",
        "name": "Szent Lőrinc-telep (tervezett)",
        "lat": "47.432106",
        "lon": "19.173155",
        "parent": "CSF03620"
    },
    {
        "id": "009480",
        "name": "Margó Tivadar utca",
        "lat": "47.433270",
        "lon": "19.177559",
        "parent": "CS009480"
    },
    {
        "id": "009481",
        "name": "Kerékgyártó utca",
        "lat": "47.521397",
        "lon": "19.105645",
        "parent": "CS009481"
    },
    {
        "id": "009482",
        "name": "Kucorgó tér",
        "lat": "47.469074",
        "lon": "19.295974",
        "parent": "CS008948"
    },
    {
        "id": "009483",
        "name": "Rákoscsaba vasútállomás",
        "lat": "47.491124",
        "lon": "19.281625",
        "parent": "CSF03442"
    },
    {
        "id": "009484",
        "name": "Tura utca",
        "lat": "47.489200",
        "lon": "19.276800",
        "parent": "CS009484"
    },
    {
        "id": "009485",
        "name": "Rákoscsaba-Újtelep vasútállomás",
        "lat": "47.488181",
        "lon": "19.273358",
        "parent": "CS009485"
    },
    {
        "id": "009486",
        "name": "II. utca",
        "lat": "47.486369",
        "lon": "19.265893",
        "parent": ""
    },
    {
        "id": "009487",
        "name": "Rákosliget vasútállomás",
        "lat": "47.486328",
        "lon": "19.259099",
        "parent": "CSF03459"
    },
    {
        "id": "009491",
        "name": "Füstifecske utca",
        "lat": "47.478927",
        "lon": "19.236991",
        "parent": "CS009491"
    },
    {
        "id": "009492",
        "name": "Füstifecske utca",
        "lat": "47.478783",
        "lon": "19.237269",
        "parent": "CS009491"
    },
    {
        "id": "009493",
        "name": "Uszoda",
        "lat": "47.479663",
        "lon": "19.232974",
        "parent": "CS009493"
    },
    {
        "id": "009494",
        "name": "Újlak utca, lakótelep",
        "lat": "47.482324",
        "lon": "19.233686",
        "parent": "CS009494"
    },
    {
        "id": "009495",
        "name": "Rákospatak utca",
        "lat": "47.531725",
        "lon": "19.100875",
        "parent": "CS009495"
    },
    {
        "id": "009498",
        "name": "Csertő utca",
        "lat": "47.511107",
        "lon": "19.146099",
        "parent": "CSF02777"
    },
    {
        "id": "009499",
        "name": "Csertő utca",
        "lat": "47.511591",
        "lon": "19.147375",
        "parent": "CSF02777"
    },
    {
        "id": "009500",
        "name": "Körvasút sor",
        "lat": "47.513666",
        "lon": "19.151030",
        "parent": "CS009501"
    },
    {
        "id": "009501",
        "name": "Körvasút sor",
        "lat": "47.514609",
        "lon": "19.152837",
        "parent": "CS009501"
    },
    {
        "id": "009503",
        "name": "Kovácsi Kálmán tér",
        "lat": "47.573171",
        "lon": "19.121120",
        "parent": "CSF03018"
    },
    {
        "id": "009504",
        "name": "Kovácsi Kálmán tér",
        "lat": "47.573431",
        "lon": "19.121200",
        "parent": "CSF03018"
    },
    {
        "id": "009508",
        "name": "Orló utca",
        "lat": "47.518283",
        "lon": "19.007506",
        "parent": "CS009508"
    },
    {
        "id": "009509",
        "name": "Orló utca",
        "lat": "47.518121",
        "lon": "19.007400",
        "parent": "CS009508"
    },
    {
        "id": "009510",
        "name": "Pasaréti út",
        "lat": "47.516231",
        "lon": "19.003989",
        "parent": "CSF00285"
    },
    {
        "id": "009511",
        "name": "Pasaréti út",
        "lat": "47.516393",
        "lon": "19.003896",
        "parent": "CSF00285"
    },
    {
        "id": "009512",
        "name": "Endrődi Sándor utca",
        "lat": "47.521361",
        "lon": "19.012550",
        "parent": "CS009512"
    },
    {
        "id": "009513",
        "name": "Bimbó út",
        "lat": "47.519354",
        "lon": "19.008979",
        "parent": ""
    },
    {
        "id": "009514",
        "name": "Bimbó út",
        "lat": "47.519966",
        "lon": "19.010572",
        "parent": ""
    },
    {
        "id": "009515",
        "name": "Rákospalota-Újpest vasútállomás",
        "lat": "47.566407",
        "lon": "19.111631",
        "parent": "CS009515"
    },
    {
        "id": "009516",
        "name": "Rákospalota-Újpest vasútállomás",
        "lat": "47.566227",
        "lon": "19.111710",
        "parent": "CS009515"
    },
    {
        "id": "009520",
        "name": "Csörsz utca",
        "lat": "47.490170",
        "lon": "19.023466",
        "parent": "CSF02417"
    },
    {
        "id": "009521",
        "name": "Csörsz utca",
        "lat": "47.490044",
        "lon": "19.023665",
        "parent": "CSF02417"
    },
    {
        "id": "009522",
        "name": "Sirály utca",
        "lat": "47.490555",
        "lon": "19.018489",
        "parent": "CS009522"
    },
    {
        "id": "009524",
        "name": "Albertfalva vasútállomás",
        "lat": "47.441923",
        "lon": "19.032186",
        "parent": "CS009524"
    },
    {
        "id": "009534",
        "name": "XIII. utca \/ Dózsa György út",
        "lat": "47.411121",
        "lon": "18.993728",
        "parent": "CSF04475"
    },
    {
        "id": "009536",
        "name": "Káposztásmegyer, Mogyoródi-patak",
        "lat": "47.598751",
        "lon": "19.121328",
        "parent": "CS009536"
    },
    {
        "id": "009537",
        "name": "Március 15. tér",
        "lat": "47.491791",
        "lon": "19.052171",
        "parent": "CS062518"
    },
    {
        "id": "009538",
        "name": "Irány utca",
        "lat": "47.540514",
        "lon": "19.109719",
        "parent": ""
    },
    {
        "id": "009539",
        "name": "Boglár utca",
        "lat": "47.594753",
        "lon": "19.060954",
        "parent": "CSF00653"
    },
    {
        "id": "009540",
        "name": "Szilágyi Erzsébet fasor",
        "lat": "47.515250",
        "lon": "19.002105",
        "parent": ""
    },
    {
        "id": "009541",
        "name": "Ady Endre út",
        "lat": "47.436400",
        "lon": "19.034932",
        "parent": "CS009541"
    },
    {
        "id": "009543",
        "name": "513. utca",
        "lat": "47.484389",
        "lon": "19.230204",
        "parent": ""
    },
    {
        "id": "009544",
        "name": "Robogó utca",
        "lat": "47.487305",
        "lon": "19.270329",
        "parent": ""
    },
    {
        "id": "009546",
        "name": "Memento Park",
        "lat": "47.425687",
        "lon": "19.001282",
        "parent": "CSF04394"
    },
    {
        "id": "009548",
        "name": "Tatárka utca",
        "lat": "47.433933",
        "lon": "19.021080",
        "parent": "CS009445"
    },
    {
        "id": "009549",
        "name": "Madárdomb köz",
        "lat": "47.478138",
        "lon": "19.241221",
        "parent": "CS009549"
    },
    {
        "id": "009550",
        "name": "Madárdomb köz",
        "lat": "47.478048",
        "lon": "19.241168",
        "parent": "CS009549"
    },
    {
        "id": "009551",
        "name": "Margó Tivadar utca",
        "lat": "47.433199",
        "lon": "19.176737",
        "parent": "CS009480"
    },
    {
        "id": "009554",
        "name": "Óbuda, Bogdáni út",
        "lat": "47.550032",
        "lon": "19.041214",
        "parent": "CS003118"
    },
    {
        "id": "009555",
        "name": "Szilágyi utca",
        "lat": "47.570553",
        "lon": "19.112593",
        "parent": "CS008289"
    },
    {
        "id": "009557",
        "name": "Vécsey Károly utca",
        "lat": "47.572023",
        "lon": "19.096037",
        "parent": "CS009557"
    },
    {
        "id": "009558",
        "name": "Szent János Kórház",
        "lat": "47.509973",
        "lon": "19.009982",
        "parent": "CSF00159"
    },
    {
        "id": "009563",
        "name": "Mészkő utca",
        "lat": "47.579237",
        "lon": "19.034843",
        "parent": "CS056162"
    },
    {
        "id": "009564",
        "name": "Mészkő utca",
        "lat": "47.579129",
        "lon": "19.034311",
        "parent": "CS056162"
    },
    {
        "id": "009568",
        "name": "Sósmocsár út",
        "lat": "47.414781",
        "lon": "19.134154",
        "parent": ""
    },
    {
        "id": "009569",
        "name": "Thököly út",
        "lat": "47.442019",
        "lon": "19.180948",
        "parent": "CSF03707"
    },
    {
        "id": "009570",
        "name": "Újbuda-központ M",
        "lat": "47.474129",
        "lon": "19.047135",
        "parent": "CSF01999"
    },
    {
        "id": "009572",
        "name": "Bagaria utca",
        "lat": "47.590242",
        "lon": "19.083130",
        "parent": "CS009573"
    },
    {
        "id": "009573",
        "name": "Bagaria utca",
        "lat": "47.590307",
        "lon": "19.083674",
        "parent": "CS009573"
    },
    {
        "id": "009574",
        "name": "Ungvári utca",
        "lat": "47.587511",
        "lon": "19.082244",
        "parent": "CS009574"
    },
    {
        "id": "009575",
        "name": "Ungvári utca",
        "lat": "47.587265",
        "lon": "19.082038",
        "parent": "CS009574"
    },
    {
        "id": "009576",
        "name": "Rév utca",
        "lat": "47.584810",
        "lon": "19.081824",
        "parent": ""
    },
    {
        "id": "009577",
        "name": "Savoya Park",
        "lat": "47.436554",
        "lon": "19.039692",
        "parent": "CS009578"
    },
    {
        "id": "009578",
        "name": "Savoya Park",
        "lat": "47.436634",
        "lon": "19.039254",
        "parent": "CS009578"
    },
    {
        "id": "009581",
        "name": "Gábor Áron utca",
        "lat": "47.515016",
        "lon": "19.002132",
        "parent": ""
    },
    {
        "id": "009582",
        "name": "János tér",
        "lat": "47.442019",
        "lon": "19.102563",
        "parent": "CS009582"
    },
    {
        "id": "009584",
        "name": "Békásmegyer H",
        "lat": "47.597461",
        "lon": "19.055516",
        "parent": "CS008940"
    },
    {
        "id": "009585",
        "name": "Nagytétény, Erdélyi utca",
        "lat": "47.388125",
        "lon": "18.970427",
        "parent": "CSF04504"
    },
    {
        "id": "009586",
        "name": "Baross utca",
        "lat": "47.436417",
        "lon": "19.098832",
        "parent": "CSF04126"
    },
    {
        "id": "009587",
        "name": "Gogol utca",
        "lat": "47.520520",
        "lon": "19.056740",
        "parent": "CS009587"
    },
    {
        "id": "009588",
        "name": "Kuruclesi út",
        "lat": "47.518021",
        "lon": "18.985213",
        "parent": "CSF00172"
    },
    {
        "id": "009589",
        "name": "Budaörs vasútállomás",
        "lat": "47.448226",
        "lon": "18.964849",
        "parent": "CS009589"
    },
    {
        "id": "009592",
        "name": "Kőbánya-Kispest P+R",
        "lat": "47.464163",
        "lon": "19.146225",
        "parent": "CS009592"
    },
    {
        "id": "009620",
        "name": "Angeli utca \/ Nagytétényi út",
        "lat": "47.390930",
        "lon": "18.981735",
        "parent": "CSF04499"
    },
    {
        "id": "009624",
        "name": "Maglód, Auchan áruház",
        "lat": "47.460690",
        "lon": "19.335221",
        "parent": ""
    },
    {
        "id": "009625",
        "name": "Szigetcsép utca",
        "lat": "47.464432",
        "lon": "19.312705",
        "parent": ""
    },
    {
        "id": "009630",
        "name": "Budakalász, Auchan áruház",
        "lat": "47.611518",
        "lon": "19.062395",
        "parent": "CS009630"
    },
    {
        "id": "009631",
        "name": "Gergely utca 80.",
        "lat": "47.474086",
        "lon": "19.144346",
        "parent": ""
    },
    {
        "id": "009632",
        "name": "Nagykőrösi út \/ Határ út",
        "lat": "47.456405",
        "lon": "19.114262",
        "parent": "CS008377"
    },
    {
        "id": "009633",
        "name": "Budakalász, Auchan áruház",
        "lat": "47.611513",
        "lon": "19.062334",
        "parent": "CS009630"
    },
    {
        "id": "009634",
        "name": "Cinkotai autóbuszgarázs (kapu)",
        "lat": "47.498634",
        "lon": "19.237646",
        "parent": "CSF03286"
    },
    {
        "id": "009636",
        "name": "Kelenföldi autóbuszgarázs (kapu)",
        "lat": "47.473264",
        "lon": "19.029397",
        "parent": "CSF02220"
    },
    {
        "id": "009637",
        "name": "Óbudai autóbuszgarázs (Pomázi kapu)",
        "lat": "47.568220",
        "lon": "19.027770",
        "parent": "CS008360"
    },
    {
        "id": "009638",
        "name": "Kőbányai garázs (Salgótarjáni kapu)",
        "lat": "47.491008",
        "lon": "19.114239",
        "parent": "CS074021"
    },
    {
        "id": "009639",
        "name": "Kelenföld kocsiszín (Csóka kapu)",
        "lat": "47.470139",
        "lon": "19.027137",
        "parent": "CS009639"
    },
    {
        "id": "009640",
        "name": "Szépilona kocsiszín (kapu)",
        "lat": "47.517648",
        "lon": "18.993977",
        "parent": "CSF00168"
    },
    {
        "id": "009642",
        "name": "Száva kocsiszín (1. kapu)",
        "lat": "47.466429",
        "lon": "19.122671",
        "parent": "CS044126"
    },
    {
        "id": "009644",
        "name": "Hungária kocsiszín (kapu)",
        "lat": "47.491400",
        "lon": "19.104843",
        "parent": ""
    },
    {
        "id": "009645",
        "name": "Zugló kocsiszín (kapu)",
        "lat": "47.518938",
        "lon": "19.112587",
        "parent": ""
    },
    {
        "id": "009646",
        "name": "Angyalföld kocsiszín (Pozsonyi kapu)",
        "lat": "47.551014",
        "lon": "19.091714",
        "parent": "CSF00693"
    },
    {
        "id": "009647",
        "name": "Baross kocsiszín (Magdolna kapu)",
        "lat": "47.491893",
        "lon": "19.087286",
        "parent": ""
    },
    {
        "id": "009652",
        "name": "Széchenyi út",
        "lat": "47.545688",
        "lon": "19.112314",
        "parent": "CSF03082"
    },
    {
        "id": "009657",
        "name": "Rákospalota, Kossuth utca",
        "lat": "47.568778",
        "lon": "19.126297",
        "parent": "CSF03026"
    },
    {
        "id": "009659",
        "name": "Mélyfúró utca",
        "lat": "47.577590",
        "lon": "19.129699",
        "parent": ""
    },
    {
        "id": "009667",
        "name": "Újbuda-központ M",
        "lat": "47.474036",
        "lon": "19.048229",
        "parent": "CSF01999"
    },
    {
        "id": "009675",
        "name": "Clark Ádám tér",
        "lat": "47.497692",
        "lon": "19.041553",
        "parent": "CS049785"
    },
    {
        "id": "009676",
        "name": "Clark Ádám tér",
        "lat": "47.497386",
        "lon": "19.041633",
        "parent": "CS049785"
    },
    {
        "id": "009684",
        "name": "Városközpont, Posta",
        "lat": "47.478975",
        "lon": "19.256190",
        "parent": ""
    },
    {
        "id": "009685",
        "name": "Akácvirág utca",
        "lat": "47.477439",
        "lon": "19.255335",
        "parent": ""
    },
    {
        "id": "009691",
        "name": "Flórián tér",
        "lat": "47.539949",
        "lon": "19.042052",
        "parent": "CSF00611"
    },
    {
        "id": "009692",
        "name": "Szentlélek tér H",
        "lat": "47.539949",
        "lon": "19.046781",
        "parent": "CSF00621"
    },
    {
        "id": "009693",
        "name": "Kolosy tér",
        "lat": "47.527710",
        "lon": "19.036894",
        "parent": "CSF00137"
    },
    {
        "id": "009698",
        "name": "Galántai utca",
        "lat": "47.498452",
        "lon": "19.014888",
        "parent": "CS009698"
    },
    {
        "id": "009699",
        "name": "Galántai utca",
        "lat": "47.498227",
        "lon": "19.015475",
        "parent": "CS009698"
    },
    {
        "id": "009702",
        "name": "Magdolna utca",
        "lat": "47.492972",
        "lon": "19.087181",
        "parent": "CS009702"
    },
    {
        "id": "009703",
        "name": "Közvágóhíd H",
        "lat": "47.467700",
        "lon": "19.076537",
        "parent": "CSF01527"
    },
    {
        "id": "009704",
        "name": "Jászivány utca",
        "lat": "47.495436",
        "lon": "19.275393",
        "parent": "CSF03581"
    },
    {
        "id": "009705",
        "name": "Diadal utca (Tura utca)",
        "lat": "47.494425",
        "lon": "19.272296",
        "parent": ""
    },
    {
        "id": "009706",
        "name": "XVII. utca",
        "lat": "47.491840",
        "lon": "19.260036",
        "parent": "CSF03469"
    },
    {
        "id": "009707",
        "name": "Aranykút utca",
        "lat": "47.493794",
        "lon": "19.278001",
        "parent": "CSF03443"
    },
    {
        "id": "009708",
        "name": "Rákoscsaba vasútállomás",
        "lat": "47.491582",
        "lon": "19.281932",
        "parent": "CSF03442"
    },
    {
        "id": "009709",
        "name": "Újbuda-központ M",
        "lat": "47.474413",
        "lon": "19.045456",
        "parent": "CSF01999"
    },
    {
        "id": "009715",
        "name": "Zodony utca",
        "lat": "47.430372",
        "lon": "19.099913",
        "parent": ""
    },
    {
        "id": "009716",
        "name": "Pesterzsébet vasútállomás",
        "lat": "47.433495",
        "lon": "19.095940",
        "parent": "CSF04121"
    },
    {
        "id": "009717",
        "name": "Zamárdi utca",
        "lat": "47.434221",
        "lon": "19.093288",
        "parent": ""
    },
    {
        "id": "009718",
        "name": "Vízisport utca",
        "lat": "47.434524",
        "lon": "19.091361",
        "parent": "CS009718"
    },
    {
        "id": "009719",
        "name": "Csepeli átjáró",
        "lat": "47.436365",
        "lon": "19.093238",
        "parent": "CS009719"
    },
    {
        "id": "009728",
        "name": "Zsigmond utca",
        "lat": "47.464014",
        "lon": "19.318341",
        "parent": "CS009729"
    },
    {
        "id": "009729",
        "name": "Zsigmond utca",
        "lat": "47.464016",
        "lon": "19.317704",
        "parent": "CS009729"
    },
    {
        "id": "009730",
        "name": "Széll Kálmán tér M",
        "lat": "47.506881",
        "lon": "19.023461",
        "parent": "CS073099"
    },
    {
        "id": "009743",
        "name": "Sirály utca",
        "lat": "47.490376",
        "lon": "19.019617",
        "parent": "CS009522"
    },
    {
        "id": "009747",
        "name": "Ezred utca, lakótelep",
        "lat": "47.609052",
        "lon": "19.101471",
        "parent": ""
    },
    {
        "id": "009748",
        "name": "Európa Center",
        "lat": "47.605210",
        "lon": "19.103768",
        "parent": ""
    },
    {
        "id": "009753",
        "name": "Blaha Lujza tér M (Népszínház utca)",
        "lat": "47.495999",
        "lon": "19.071283",
        "parent": "CSF01116"
    },
    {
        "id": "009763",
        "name": "Zsófialiget H",
        "lat": "47.548044",
        "lon": "19.263894",
        "parent": "CS009763"
    },
    {
        "id": "009764",
        "name": "Zsófialiget H",
        "lat": "47.547898",
        "lon": "19.263369",
        "parent": "CS009763"
    },
    {
        "id": "009774",
        "name": "Jászberényi út \/ Maglódi út",
        "lat": "47.489904",
        "lon": "19.148847",
        "parent": "CSF01615"
    },
    {
        "id": "011313",
        "name": "Szent László utca",
        "lat": "47.405915",
        "lon": "18.999166",
        "parent": "CSF04470"
    },
    {
        "id": "011316",
        "name": "Atlétikai stadion",
        "lat": "47.572374",
        "lon": "19.113875",
        "parent": "CS009154"
    },
    {
        "id": "011317",
        "name": "Atlétikai stadion",
        "lat": "47.572527",
        "lon": "19.114088",
        "parent": "CS009154"
    },
    {
        "id": "011319",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.477553",
        "lon": "19.048747",
        "parent": "CSF02198"
    },
    {
        "id": "011320",
        "name": "Búza utca",
        "lat": "47.553437",
        "lon": "19.040325",
        "parent": "CS011320"
    },
    {
        "id": "011321",
        "name": "Búza utca",
        "lat": "47.551890",
        "lon": "19.039647",
        "parent": "CS011320"
    },
    {
        "id": "011322",
        "name": "Óbuda, Bogdáni út",
        "lat": "47.549924",
        "lon": "19.041360",
        "parent": "CS003118"
    },
    {
        "id": "011327",
        "name": "Budaörsi Ipari és Technológiai Park",
        "lat": "47.463310",
        "lon": "18.894407",
        "parent": ""
    },
    {
        "id": "011439",
        "name": "Ferencváros kocsiszín (kapu)",
        "lat": "47.470692",
        "lon": "19.091421",
        "parent": ""
    },
    {
        "id": "011493",
        "name": "Baross kocsiszín (Baross kapu)",
        "lat": "47.489618",
        "lon": "19.090158",
        "parent": ""
    },
    {
        "id": "011495",
        "name": "Kék Golyó utca",
        "lat": "47.497904",
        "lon": "19.020038",
        "parent": "CSF02411"
    },
    {
        "id": "011572",
        "name": "Mester utca \/ Ferenc körút",
        "lat": "47.481341",
        "lon": "19.069187",
        "parent": "CSF01380"
    },
    {
        "id": "011576",
        "name": "Angyalföld kocsiszín (Erzsébet kapu)",
        "lat": "47.552482",
        "lon": "19.093914",
        "parent": "CSF00821"
    },
    {
        "id": "011715",
        "name": "509. utca",
        "lat": "47.484963",
        "lon": "19.225442",
        "parent": "CS011715"
    },
    {
        "id": "011722",
        "name": "Rákoskeresztúr, városközpont",
        "lat": "47.479742",
        "lon": "19.255012",
        "parent": "CS011726"
    },
    {
        "id": "011723",
        "name": "Rákoskeresztúr, városközpont",
        "lat": "47.479597",
        "lon": "19.255489",
        "parent": "CS011726"
    },
    {
        "id": "011724",
        "name": "Rákoskeresztúr, városközpont",
        "lat": "47.479416",
        "lon": "19.256086",
        "parent": "CS011726"
    },
    {
        "id": "011725",
        "name": "Rákoskeresztúr, városközpont",
        "lat": "47.479805",
        "lon": "19.255265",
        "parent": "CS011726"
    },
    {
        "id": "011726",
        "name": "Rákoskeresztúr, városközpont",
        "lat": "47.479898",
        "lon": "19.254714",
        "parent": "CS011726"
    },
    {
        "id": "011762",
        "name": "Újpest-Városkapu M",
        "lat": "47.559059",
        "lon": "19.078791",
        "parent": "CS011762"
    },
    {
        "id": "011765",
        "name": "Boráros tér H",
        "lat": "47.479187",
        "lon": "19.067812",
        "parent": "CSF01516"
    },
    {
        "id": "011768",
        "name": "Rákoscsaba-Újtelep, Tóalmás utca",
        "lat": "47.499281",
        "lon": "19.286785",
        "parent": "CSF03584"
    },
    {
        "id": "011773",
        "name": "Keresztúri út",
        "lat": "47.484645",
        "lon": "19.227750",
        "parent": ""
    },
    {
        "id": "016725",
        "name": "Rózsaliget",
        "lat": "47.466582",
        "lon": "19.158453",
        "parent": ""
    },
    {
        "id": "016727",
        "name": "Újbuda-központ M",
        "lat": "47.474692",
        "lon": "19.046770",
        "parent": "CSF01999"
    },
    {
        "id": "016729",
        "name": "Naphegy tér",
        "lat": "47.493526",
        "lon": "19.032755",
        "parent": "CS016729"
    },
    {
        "id": "016764",
        "name": "Kalotaszeg utca",
        "lat": "47.458825",
        "lon": "19.041134",
        "parent": "CS049186"
    },
    {
        "id": "019313",
        "name": "Rákoskert vasútállomás",
        "lat": "47.457347",
        "lon": "19.295124",
        "parent": ""
    },
    {
        "id": "019314",
        "name": "Rákoskert sugárút",
        "lat": "47.459829",
        "lon": "19.299340",
        "parent": ""
    },
    {
        "id": "019316",
        "name": "Rákoscsaba vasútállomás",
        "lat": "47.491068",
        "lon": "19.282567",
        "parent": "CSF03442"
    },
    {
        "id": "022005",
        "name": "Tölgy utca",
        "lat": "47.416370",
        "lon": "19.205427",
        "parent": ""
    },
    {
        "id": "022006",
        "name": "Szenes Iván tér",
        "lat": "47.479990",
        "lon": "19.095703",
        "parent": ""
    },
    {
        "id": "030328",
        "name": "Soroksár, Hősök tere H",
        "lat": "47.399367",
        "lon": "19.115423",
        "parent": "CSF04542"
    },
    {
        "id": "031884",
        "name": "Nagykovácsi, Tisza István tér",
        "lat": "47.575762",
        "lon": "18.879484",
        "parent": ""
    },
    {
        "id": "036236",
        "name": "Szigetszentmiklós H",
        "lat": "47.345461",
        "lon": "19.048256",
        "parent": ""
    },
    {
        "id": "036678",
        "name": "Széll Kálmán tér M",
        "lat": "47.506710",
        "lon": "19.025240",
        "parent": "CS073099"
    },
    {
        "id": "037379",
        "name": "Batthyány tér M+H",
        "lat": "47.506259",
        "lon": "19.038432",
        "parent": "CSF00065"
    },
    {
        "id": "037747",
        "name": "Lakihegy, Cseresznyés utca",
        "lat": "47.377314",
        "lon": "19.007284",
        "parent": "CS037747"
    },
    {
        "id": "037748",
        "name": "Lakihegy, Cseresznyés utca",
        "lat": "47.376792",
        "lon": "19.006384",
        "parent": "CS037747"
    },
    {
        "id": "038670",
        "name": "Kőbánya-Kispest M",
        "lat": "47.462398",
        "lon": "19.148450",
        "parent": "CS009592"
    },
    {
        "id": "038671",
        "name": "Kőbánya-Kispest M",
        "lat": "47.462344",
        "lon": "19.148344",
        "parent": "CS009592"
    },
    {
        "id": "038673",
        "name": "Kőbánya-Kispest M",
        "lat": "47.462694",
        "lon": "19.149021",
        "parent": "CS009592"
    },
    {
        "id": "038674",
        "name": "Kőbánya-Kispest M",
        "lat": "47.462974",
        "lon": "19.147562",
        "parent": "CS009592"
    },
    {
        "id": "038675",
        "name": "Kőbánya-Kispest M",
        "lat": "47.463191",
        "lon": "19.146979",
        "parent": "CS009592"
    },
    {
        "id": "038678",
        "name": "Kőbánya-Kispest M",
        "lat": "47.463037",
        "lon": "19.147748",
        "parent": "CS009592"
    },
    {
        "id": "038680",
        "name": "Kőbánya-Kispest M",
        "lat": "47.462929",
        "lon": "19.148252",
        "parent": "CS009592"
    },
    {
        "id": "038681",
        "name": "Kőbánya-Kispest M",
        "lat": "47.462820",
        "lon": "19.148796",
        "parent": "CS009592"
    },
    {
        "id": "038682",
        "name": "Kőbánya-Kispest M",
        "lat": "47.462922",
        "lon": "19.149121",
        "parent": "CS009592"
    },
    {
        "id": "038683",
        "name": "Kőbánya-Kispest M",
        "lat": "47.463090",
        "lon": "19.148478",
        "parent": "CS009592"
    },
    {
        "id": "038686",
        "name": "Kőbánya-Kispest M",
        "lat": "47.463460",
        "lon": "19.147245",
        "parent": "CS009592"
    },
    {
        "id": "038687",
        "name": "Kőbánya-Kispest M",
        "lat": "47.463307",
        "lon": "19.147921",
        "parent": "CS009592"
    },
    {
        "id": "038688",
        "name": "Kőbánya-Kispest M",
        "lat": "47.463226",
        "lon": "19.148266",
        "parent": "CS009592"
    },
    {
        "id": "038690",
        "name": "Kőbánya-Kispest M",
        "lat": "47.463081",
        "lon": "19.148942",
        "parent": "CS009592"
    },
    {
        "id": "038691",
        "name": "Kőbánya-Kispest M",
        "lat": "47.462955",
        "lon": "19.149525",
        "parent": "CS009592"
    },
    {
        "id": "038717",
        "name": "Deák Ferenc tér M",
        "lat": "47.499109",
        "lon": "19.053848",
        "parent": "CS038717"
    },
    {
        "id": "038791",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.483138",
        "lon": "19.128307",
        "parent": "CSF01800"
    },
    {
        "id": "040525",
        "name": "Hentes utca",
        "lat": "47.462328",
        "lon": "19.084545",
        "parent": "CS040526"
    },
    {
        "id": "040526",
        "name": "Hentes utca",
        "lat": "47.462517",
        "lon": "19.084479",
        "parent": "CS040526"
    },
    {
        "id": "040591",
        "name": "FESTO",
        "lat": "47.564944",
        "lon": "19.030939",
        "parent": ""
    },
    {
        "id": "040608",
        "name": "Zsivora park",
        "lat": "47.509180",
        "lon": "19.148817",
        "parent": ""
    },
    {
        "id": "040609",
        "name": "Szent Imre tér H",
        "lat": "47.431830",
        "lon": "19.067888",
        "parent": "CS041095"
    },
    {
        "id": "040612",
        "name": "Bányató utca",
        "lat": "47.466331",
        "lon": "19.165078",
        "parent": "CS040612"
    },
    {
        "id": "040789",
        "name": "Kerékgyártó utca",
        "lat": "47.521082",
        "lon": "19.106375",
        "parent": "CS009481"
    },
    {
        "id": "041092",
        "name": "Csepeli Kórház",
        "lat": "47.424622",
        "lon": "19.058674",
        "parent": ""
    },
    {
        "id": "041093",
        "name": "Duna utca",
        "lat": "47.428215",
        "lon": "19.059125",
        "parent": ""
    },
    {
        "id": "041094",
        "name": "Színesfém utca",
        "lat": "47.430535",
        "lon": "19.064600",
        "parent": ""
    },
    {
        "id": "041095",
        "name": "Szent Imre tér H",
        "lat": "47.432046",
        "lon": "19.067318",
        "parent": "CS041095"
    },
    {
        "id": "041139",
        "name": "Mázsa utca",
        "lat": "47.483123",
        "lon": "19.122708",
        "parent": "CSF01567"
    },
    {
        "id": "042797",
        "name": "Bányató utca",
        "lat": "47.465434",
        "lon": "19.162927",
        "parent": "CS040612"
    },
    {
        "id": "042933",
        "name": "Népliget M",
        "lat": "47.475823",
        "lon": "19.100289",
        "parent": "CS008287"
    },
    {
        "id": "042934",
        "name": "Soroksár, BILK",
        "lat": "47.378261",
        "lon": "19.121263",
        "parent": ""
    },
    {
        "id": "043154",
        "name": "Dél-pesti autóbuszgarázs (kapu)",
        "lat": "47.426902",
        "lon": "19.160697",
        "parent": "CS043154"
    },
    {
        "id": "043176",
        "name": "Kőbánya-Kispest M",
        "lat": "47.461923",
        "lon": "19.149332",
        "parent": "CS009592"
    },
    {
        "id": "043191",
        "name": "Bosnyák tér",
        "lat": "47.519323",
        "lon": "19.112730",
        "parent": "CSF02826"
    },
    {
        "id": "043192",
        "name": "Kisvárda utca",
        "lat": "47.471603",
        "lon": "19.282680",
        "parent": "CS043192"
    },
    {
        "id": "043193",
        "name": "Kisvárda utca",
        "lat": "47.471403",
        "lon": "19.283449",
        "parent": "CS043192"
    },
    {
        "id": "043333",
        "name": "Szent Orbán tér",
        "lat": "47.498557",
        "lon": "19.008132",
        "parent": "CSF02397"
    },
    {
        "id": "043341",
        "name": "György utca",
        "lat": "47.530988",
        "lon": "19.171569",
        "parent": ""
    },
    {
        "id": "043342",
        "name": "Régi Fóti út",
        "lat": "47.559192",
        "lon": "19.122482",
        "parent": ""
    },
    {
        "id": "043343",
        "name": "Csörsz utca",
        "lat": "47.490670",
        "lon": "19.024632",
        "parent": "CSF02417"
    },
    {
        "id": "043481",
        "name": "Káposztásmegyer, Aquaworld",
        "lat": "47.599656",
        "lon": "19.112712",
        "parent": ""
    },
    {
        "id": "043548",
        "name": "Csaba vezér tér",
        "lat": "47.487309",
        "lon": "19.286545",
        "parent": "CSF03485"
    },
    {
        "id": "043554",
        "name": "Enying utca",
        "lat": "47.475511",
        "lon": "19.297848",
        "parent": "CS043554"
    },
    {
        "id": "043555",
        "name": "Sport tér",
        "lat": "47.477071",
        "lon": "19.295866",
        "parent": "CS043555"
    },
    {
        "id": "043556",
        "name": "Rés utca",
        "lat": "47.480228",
        "lon": "19.291940",
        "parent": "CS043556"
    },
    {
        "id": "043571",
        "name": "Dukát utca",
        "lat": "47.408304",
        "lon": "18.991015",
        "parent": ""
    },
    {
        "id": "043746",
        "name": "Kőbányai garázs (Pongrácz kapu)",
        "lat": "47.492363",
        "lon": "19.119695",
        "parent": ""
    },
    {
        "id": "043955",
        "name": "Óbudai autóbuszgarázs (Törökkő kapu)",
        "lat": "47.566890",
        "lon": "19.031889",
        "parent": ""
    },
    {
        "id": "044029",
        "name": "Fenyőgyöngye",
        "lat": "47.540338",
        "lon": "19.006599",
        "parent": "CS064210"
    },
    {
        "id": "044032",
        "name": "Szigetszentmiklós, városháza",
        "lat": "47.347971",
        "lon": "19.044934",
        "parent": "CS009292"
    },
    {
        "id": "044033",
        "name": "József Attila utca",
        "lat": "47.338022",
        "lon": "19.039575",
        "parent": "CS044034"
    },
    {
        "id": "044034",
        "name": "József Attila utca",
        "lat": "47.338085",
        "lon": "19.038292",
        "parent": "CS044034"
    },
    {
        "id": "044076",
        "name": "Déli utca",
        "lat": "47.423173",
        "lon": "19.061198",
        "parent": ""
    },
    {
        "id": "044115",
        "name": "Pöttyös utca M",
        "lat": "47.468484",
        "lon": "19.116055",
        "parent": "CSF01465"
    },
    {
        "id": "044125",
        "name": "Cinkota H",
        "lat": "47.520032",
        "lon": "19.220580",
        "parent": "CSF03304"
    },
    {
        "id": "044126",
        "name": "Száva kocsiszín",
        "lat": "47.466789",
        "lon": "19.123016",
        "parent": "CS044126"
    },
    {
        "id": "044127",
        "name": "Száva kocsiszín",
        "lat": "47.466420",
        "lon": "19.123095",
        "parent": "CS044126"
    },
    {
        "id": "044128",
        "name": "Valéria tér",
        "lat": "47.465660",
        "lon": "19.115414",
        "parent": "CS044128"
    },
    {
        "id": "044129",
        "name": "Napfény utca",
        "lat": "47.458582",
        "lon": "19.114450",
        "parent": "CS044129"
    },
    {
        "id": "044130",
        "name": "Madzsar József utca \/ Pünkösdfürdő utca",
        "lat": "47.595572",
        "lon": "19.054226",
        "parent": "CS044130"
    },
    {
        "id": "044131",
        "name": "Madzsar József utca \/ Pünkösdfürdő utca",
        "lat": "47.595527",
        "lon": "19.054026",
        "parent": "CS044130"
    },
    {
        "id": "044135",
        "name": "Íves út",
        "lat": "47.593111",
        "lon": "19.106973",
        "parent": "CS044135"
    },
    {
        "id": "044178",
        "name": "Szent Gellért-templom",
        "lat": "47.469401",
        "lon": "19.025877",
        "parent": "CS044178"
    },
    {
        "id": "044180",
        "name": "Nyugati pályaudvar M",
        "lat": "47.511337",
        "lon": "19.056712",
        "parent": "CSF01023"
    },
    {
        "id": "044192",
        "name": "Békásmegyer H",
        "lat": "47.597856",
        "lon": "19.053867",
        "parent": "CS008940"
    },
    {
        "id": "044371",
        "name": "Budakeszi, Tesco-Parkcenter",
        "lat": "47.500252",
        "lon": "18.916838",
        "parent": ""
    },
    {
        "id": "044372",
        "name": "Solymár, Kerekhegy",
        "lat": "47.581449",
        "lon": "18.926420",
        "parent": ""
    },
    {
        "id": "044375",
        "name": "Budaliget, Géza fejedelem útja",
        "lat": "47.567607",
        "lon": "18.936286",
        "parent": "CSF00387"
    },
    {
        "id": "044380",
        "name": "Dózsa György tér",
        "lat": "47.507157",
        "lon": "18.922210",
        "parent": "CSF04790"
    },
    {
        "id": "044381",
        "name": "Dózsa György tér",
        "lat": "47.507044",
        "lon": "18.922323",
        "parent": "CSF04790"
    },
    {
        "id": "044382",
        "name": "Budakeszi, lakótelep",
        "lat": "47.503867",
        "lon": "18.921003",
        "parent": "CS044382"
    },
    {
        "id": "044383",
        "name": "Budakeszi, lakótelep",
        "lat": "47.503621",
        "lon": "18.921157",
        "parent": "CS044382"
    },
    {
        "id": "044388",
        "name": "Soroksár, Auchan áruház",
        "lat": "47.419683",
        "lon": "19.155606",
        "parent": ""
    },
    {
        "id": "044511",
        "name": "Solymár, PEMÜ",
        "lat": "47.597409",
        "lon": "18.928240",
        "parent": "CS044511"
    },
    {
        "id": "044513",
        "name": "Kelenföld kocsiszín (Thallóczy kapu)",
        "lat": "47.469509",
        "lon": "19.025572",
        "parent": "CS009639"
    },
    {
        "id": "044557",
        "name": "Újpest, Árpád út hajóállomás",
        "lat": "47.562378",
        "lon": "19.078142",
        "parent": "CS044557"
    },
    {
        "id": "044571",
        "name": "Solymár, községháza",
        "lat": "47.592190",
        "lon": "18.937112",
        "parent": "CSF04702"
    },
    {
        "id": "044572",
        "name": "Dózsa György utca",
        "lat": "47.592861",
        "lon": "18.931495",
        "parent": "CS044572"
    },
    {
        "id": "044573",
        "name": "Dózsa György utca",
        "lat": "47.592672",
        "lon": "18.932563",
        "parent": "CS044572"
    },
    {
        "id": "044575",
        "name": "Rómaifürdő",
        "lat": "47.573636",
        "lon": "19.065640",
        "parent": ""
    },
    {
        "id": "044576",
        "name": "Újpest, Árpád út",
        "lat": "47.561987",
        "lon": "19.077768",
        "parent": "CS044557"
    },
    {
        "id": "044581",
        "name": "Meder utca",
        "lat": "47.549883",
        "lon": "19.067360",
        "parent": ""
    },
    {
        "id": "044582",
        "name": "Óbudai-sziget",
        "lat": "47.550010",
        "lon": "19.058127",
        "parent": "CS049896"
    },
    {
        "id": "044583",
        "name": "Népfürdő utca (Árpád híd)",
        "lat": "47.537643",
        "lon": "19.058218",
        "parent": "CS044583"
    },
    {
        "id": "044588",
        "name": "Margitsziget, Centenáriumi emlékmű",
        "lat": "47.518711",
        "lon": "19.046225",
        "parent": ""
    },
    {
        "id": "044589",
        "name": "Jászai Mari tér (Margit híd)",
        "lat": "47.515104",
        "lon": "19.047168",
        "parent": ""
    },
    {
        "id": "044590",
        "name": "Batthyány tér M+H",
        "lat": "47.504671",
        "lon": "19.039868",
        "parent": "CSF00065"
    },
    {
        "id": "044591",
        "name": "Petőfi tér (Erzsébet híd)",
        "lat": "47.493662",
        "lon": "19.049252",
        "parent": "CS044591"
    },
    {
        "id": "044592",
        "name": "Szent Gellért tér M (Szabadság híd)",
        "lat": "47.484686",
        "lon": "19.053458",
        "parent": "CS044592"
    },
    {
        "id": "044593",
        "name": "Boráros tér H (Petőfi híd)",
        "lat": "47.480071",
        "lon": "19.065133",
        "parent": "CSF01516"
    },
    {
        "id": "044594",
        "name": "Egyetemváros - A38",
        "lat": "47.476519",
        "lon": "19.062438",
        "parent": ""
    },
    {
        "id": "044595",
        "name": "Haller utca",
        "lat": "47.474665",
        "lon": "19.068660",
        "parent": "CSF01386"
    },
    {
        "id": "044602",
        "name": "Solymár, temető",
        "lat": "47.594946",
        "lon": "18.940975",
        "parent": "CS044603"
    },
    {
        "id": "044603",
        "name": "Solymár, temető",
        "lat": "47.595027",
        "lon": "18.940164",
        "parent": "CS044603"
    },
    {
        "id": "044637",
        "name": "Görögkatolikus templom",
        "lat": "47.423175",
        "lon": "19.078064",
        "parent": "CS044638"
    },
    {
        "id": "044638",
        "name": "Görögkatolikus templom",
        "lat": "47.424083",
        "lon": "19.077958",
        "parent": "CS044638"
    },
    {
        "id": "045755",
        "name": "Maros utca",
        "lat": "47.418142",
        "lon": "19.137857",
        "parent": ""
    },
    {
        "id": "045883",
        "name": "Fót, Auchan áruház",
        "lat": "47.580948",
        "lon": "19.161548",
        "parent": ""
    },
    {
        "id": "047670",
        "name": "Budakeszi temető",
        "lat": "47.513591",
        "lon": "18.924624",
        "parent": ""
    },
    {
        "id": "047875",
        "name": "Orczy tér (Baross kocsiszín)",
        "lat": "47.489544",
        "lon": "19.090388",
        "parent": "CSF01217"
    },
    {
        "id": "047985",
        "name": "Szőlőskert utca",
        "lat": "47.502123",
        "lon": "18.916488",
        "parent": "CS061378"
    },
    {
        "id": "048009",
        "name": "Újpalota, Szentmihályi út",
        "lat": "47.542053",
        "lon": "19.151377",
        "parent": "CS048009"
    },
    {
        "id": "048277",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.483123",
        "lon": "19.127809",
        "parent": "CSF01800"
    },
    {
        "id": "048303",
        "name": "Diósdi út",
        "lat": "47.433919",
        "lon": "18.924953",
        "parent": ""
    },
    {
        "id": "048305",
        "name": "Liliom utca",
        "lat": "47.430955",
        "lon": "18.928300",
        "parent": ""
    },
    {
        "id": "048471",
        "name": "Pasaréti tér",
        "lat": "47.523620",
        "lon": "18.994064",
        "parent": "CSF00277"
    },
    {
        "id": "048474",
        "name": "Illatos út MARKER",
        "lat": "47.455716",
        "lon": "19.086199",
        "parent": "CS048474"
    },
    {
        "id": "048505",
        "name": "Szent István Bazilika",
        "lat": "47.500543",
        "lon": "19.054707",
        "parent": "CS048505"
    },
    {
        "id": "048506",
        "name": "Szent István Bazilika",
        "lat": "47.500336",
        "lon": "19.054879",
        "parent": "CS048505"
    },
    {
        "id": "048519",
        "name": "Rákospalota, Kossuth utca",
        "lat": "47.568509",
        "lon": "19.125605",
        "parent": "CSF03026"
    },
    {
        "id": "048536",
        "name": "Lehel tér M",
        "lat": "47.517759",
        "lon": "19.060445",
        "parent": "CSF02612"
    },
    {
        "id": "049170",
        "name": "Szent István utca H",
        "lat": "47.391218",
        "lon": "19.114446",
        "parent": "CS008962"
    },
    {
        "id": "049171",
        "name": "Zsellér dűlő",
        "lat": "47.390703",
        "lon": "19.119134",
        "parent": "CS049171"
    },
    {
        "id": "049172",
        "name": "Gyáli-patak",
        "lat": "47.394752",
        "lon": "19.116782",
        "parent": "CS049172"
    },
    {
        "id": "049174",
        "name": "Soroksár, Kertvárosi körút",
        "lat": "47.413026",
        "lon": "19.136152",
        "parent": ""
    },
    {
        "id": "049177",
        "name": "Kárpát utca",
        "lat": "47.527543",
        "lon": "19.058534",
        "parent": "CS049177"
    },
    {
        "id": "049178",
        "name": "Révész utca",
        "lat": "47.526807",
        "lon": "19.061695",
        "parent": ""
    },
    {
        "id": "049183",
        "name": "Úszódaru utca",
        "lat": "47.545902",
        "lon": "19.068780",
        "parent": ""
    },
    {
        "id": "049185",
        "name": "Szántóföld utca",
        "lat": "47.572636",
        "lon": "19.139461",
        "parent": "CS049185"
    },
    {
        "id": "049186",
        "name": "Kalotaszeg utca",
        "lat": "47.459266",
        "lon": "19.040935",
        "parent": "CS049186"
    },
    {
        "id": "049784",
        "name": "Clark Ádám tér",
        "lat": "47.499059",
        "lon": "19.040119",
        "parent": "CS049785"
    },
    {
        "id": "049785",
        "name": "Clark Ádám tér",
        "lat": "47.499248",
        "lon": "19.040199",
        "parent": "CS049785"
    },
    {
        "id": "049787",
        "name": "Nagytétény, Erdélyi utca",
        "lat": "47.387982",
        "lon": "18.970812",
        "parent": "CSF04504"
    },
    {
        "id": "049892",
        "name": "Május 9. park",
        "lat": "47.550437",
        "lon": "19.050992",
        "parent": "CS049892"
    },
    {
        "id": "049893",
        "name": "Sporttelep",
        "lat": "47.547649",
        "lon": "19.054420",
        "parent": "CS049897"
    },
    {
        "id": "049894",
        "name": "Óbudai-sziget hajóállomás",
        "lat": "47.550284",
        "lon": "19.056679",
        "parent": "CS049896"
    },
    {
        "id": "049895",
        "name": "Óbudai-sziget",
        "lat": "47.554622",
        "lon": "19.058094",
        "parent": ""
    },
    {
        "id": "049896",
        "name": "Óbudai-sziget hajóállomás",
        "lat": "47.550545",
        "lon": "19.056732",
        "parent": "CS049896"
    },
    {
        "id": "049897",
        "name": "Sporttelep",
        "lat": "47.547739",
        "lon": "19.054938",
        "parent": "CS049897"
    },
    {
        "id": "049898",
        "name": "Május 9. park",
        "lat": "47.550311",
        "lon": "19.051192",
        "parent": "CS049892"
    },
    {
        "id": "049900",
        "name": "Kaszásdűlő H",
        "lat": "47.555582",
        "lon": "19.044907",
        "parent": "CSF00508"
    },
    {
        "id": "049903",
        "name": "Mansfeld Péter park",
        "lat": "47.517075",
        "lon": "19.033226",
        "parent": ""
    },
    {
        "id": "049914",
        "name": "Sörgyár",
        "lat": "47.491859",
        "lon": "19.144405",
        "parent": "CSF01622"
    },
    {
        "id": "050003",
        "name": "Cinkota H",
        "lat": "47.520006",
        "lon": "19.220341",
        "parent": "CSF03304"
    },
    {
        "id": "050129",
        "name": "Csapó utca",
        "lat": "47.440861",
        "lon": "19.161363",
        "parent": "CSF03728"
    },
    {
        "id": "050173",
        "name": "Lincoln út",
        "lat": "47.416015",
        "lon": "19.243500",
        "parent": ""
    },
    {
        "id": "050174",
        "name": "Lőrinci utca",
        "lat": "47.416612",
        "lon": "19.241461",
        "parent": ""
    },
    {
        "id": "050175",
        "name": "Pestszentlőrinc, sorompó",
        "lat": "47.421906",
        "lon": "19.238604",
        "parent": "CS050176"
    },
    {
        "id": "050176",
        "name": "Pestszentlőrinc, sorompó",
        "lat": "47.422104",
        "lon": "19.238366",
        "parent": "CS050176"
    },
    {
        "id": "050177",
        "name": "Ganztelep, Mednyánszky utca",
        "lat": "47.423198",
        "lon": "19.234845",
        "parent": "CSF03795"
    },
    {
        "id": "050178",
        "name": "Pestszentlőrinc, Béke tér",
        "lat": "47.429490",
        "lon": "19.218430",
        "parent": "CS008951"
    },
    {
        "id": "050180",
        "name": "Duna utca",
        "lat": "47.433016",
        "lon": "19.220602",
        "parent": "CS050182"
    },
    {
        "id": "050181",
        "name": "Ferihegy vasútállomás",
        "lat": "47.436818",
        "lon": "19.222550",
        "parent": "CS007927"
    },
    {
        "id": "050182",
        "name": "Duna utca",
        "lat": "47.433475",
        "lon": "19.220630",
        "parent": "CS050182"
    },
    {
        "id": "050183",
        "name": "Pestszentlőrinc, Béke tér",
        "lat": "47.429673",
        "lon": "19.218245",
        "parent": "CS008951"
    },
    {
        "id": "050184",
        "name": "Lőrinci piac",
        "lat": "47.443130",
        "lon": "19.184332",
        "parent": ""
    },
    {
        "id": "050185",
        "name": "Vecsés, Market Central Ferihegy",
        "lat": "47.416726",
        "lon": "19.251851",
        "parent": "CS050186"
    },
    {
        "id": "050186",
        "name": "Vecsés, Market Central Ferihegy",
        "lat": "47.416753",
        "lon": "19.251865",
        "parent": "CS050186"
    },
    {
        "id": "050187",
        "name": "Vecsés, Fő út",
        "lat": "47.418379",
        "lon": "19.249419",
        "parent": ""
    },
    {
        "id": "050189",
        "name": "Ganztelep, Mednyánszky utca",
        "lat": "47.423855",
        "lon": "19.234688",
        "parent": "CSF03795"
    },
    {
        "id": "050223",
        "name": "Margit híd, budai hídfő H",
        "lat": "47.514647",
        "lon": "19.037993",
        "parent": "CSF00234"
    },
    {
        "id": "050274",
        "name": "Batthyány-örökmécses",
        "lat": "47.506345",
        "lon": "19.050990",
        "parent": ""
    },
    {
        "id": "050279",
        "name": "Lomnici utca",
        "lat": "47.436478",
        "lon": "19.019514",
        "parent": "CS050279"
    },
    {
        "id": "056123",
        "name": "Borsmenta utca",
        "lat": "47.572558",
        "lon": "19.010575",
        "parent": ""
    },
    {
        "id": "056124",
        "name": "Citronella utca",
        "lat": "47.572298",
        "lon": "19.004770",
        "parent": ""
    },
    {
        "id": "056161",
        "name": "Csillaghegy H [1]",
        "lat": "47.584652",
        "lon": "19.043137",
        "parent": "CS008404"
    },
    {
        "id": "056162",
        "name": "Mészkő utca [2]",
        "lat": "47.579552",
        "lon": "19.034245",
        "parent": "CS056162"
    },
    {
        "id": "056163",
        "name": "Mészkő utca [2]",
        "lat": "47.579444",
        "lon": "19.034258",
        "parent": "CS056162"
    },
    {
        "id": "056164",
        "name": "Csikóvár utca [3]",
        "lat": "47.583059",
        "lon": "19.031412",
        "parent": "CS056164"
    },
    {
        "id": "056165",
        "name": "Öregbükk utca [4]",
        "lat": "47.581359",
        "lon": "19.029605",
        "parent": "CS056165"
    },
    {
        "id": "056166",
        "name": "Öregbükk utca [4]",
        "lat": "47.581260",
        "lon": "19.029591",
        "parent": "CS056165"
    },
    {
        "id": "056167",
        "name": "Lepence utca [5]",
        "lat": "47.583661",
        "lon": "19.027517",
        "parent": "CS056167"
    },
    {
        "id": "056168",
        "name": "Cserszömörce utca [6]",
        "lat": "47.582501",
        "lon": "19.026135",
        "parent": "CS056168"
    },
    {
        "id": "056169",
        "name": "Cserszömörce utca [6]",
        "lat": "47.582492",
        "lon": "19.026068",
        "parent": "CS056168"
    },
    {
        "id": "056170",
        "name": "Muzsla utca [7]",
        "lat": "47.581043",
        "lon": "19.024075",
        "parent": "CS056171"
    },
    {
        "id": "056171",
        "name": "Muzsla utca [7]",
        "lat": "47.581061",
        "lon": "19.024247",
        "parent": "CS056171"
    },
    {
        "id": "056172",
        "name": "Óarany utca [8]",
        "lat": "47.579523",
        "lon": "19.023557",
        "parent": "CS056188"
    },
    {
        "id": "056173",
        "name": "Mácsonya utca [9]",
        "lat": "47.583777",
        "lon": "19.023595",
        "parent": "CS056173"
    },
    {
        "id": "056174",
        "name": "Mácsonya utca [9]",
        "lat": "47.583768",
        "lon": "19.023528",
        "parent": "CS056173"
    },
    {
        "id": "056175",
        "name": "Saroglya utca [10]",
        "lat": "47.584973",
        "lon": "19.021161",
        "parent": "CS056175"
    },
    {
        "id": "056176",
        "name": "Saroglya utca [10]",
        "lat": "47.584928",
        "lon": "19.021135",
        "parent": "CS056175"
    },
    {
        "id": "056177",
        "name": "Kőpor utca [11]",
        "lat": "47.582715",
        "lon": "19.019514",
        "parent": ""
    },
    {
        "id": "056178",
        "name": "Csillaghegy H [1]",
        "lat": "47.584661",
        "lon": "19.043150",
        "parent": "CS008404"
    },
    {
        "id": "056184",
        "name": "Csikóvár utca [3]",
        "lat": "47.583050",
        "lon": "19.031452",
        "parent": "CS056164"
    },
    {
        "id": "056185",
        "name": "Lepence utca [5]",
        "lat": "47.583643",
        "lon": "19.027570",
        "parent": "CS056167"
    },
    {
        "id": "056186",
        "name": "Muzsla utca [7]",
        "lat": "47.581061",
        "lon": "19.024021",
        "parent": "CS056171"
    },
    {
        "id": "056187",
        "name": "Muzsla utca [7]",
        "lat": "47.581034",
        "lon": "19.024287",
        "parent": "CS056171"
    },
    {
        "id": "056188",
        "name": "Óarany utca [8]",
        "lat": "47.579541",
        "lon": "19.023504",
        "parent": "CS056188"
    },
    {
        "id": "056189",
        "name": "Ipacsfa utca",
        "lat": "47.429484",
        "lon": "19.168656",
        "parent": "CSF03623"
    },
    {
        "id": "056215",
        "name": "Kelenföld vasútállomás",
        "lat": "47.464515",
        "lon": "19.019618",
        "parent": "CS056215"
    },
    {
        "id": "056216",
        "name": "Kelenföld vasútállomás",
        "lat": "47.464255",
        "lon": "19.020587",
        "parent": "CS056215"
    },
    {
        "id": "056217",
        "name": "Bikás park",
        "lat": "47.464881",
        "lon": "19.032345",
        "parent": "CSLM4BP1"
    },
    {
        "id": "056218",
        "name": "Bikás park",
        "lat": "47.465022",
        "lon": "19.033386",
        "parent": "CSLM4BP1"
    },
    {
        "id": "056219",
        "name": "Újbuda-központ",
        "lat": "47.472860",
        "lon": "19.045954",
        "parent": "CSLM4UK1"
    },
    {
        "id": "056220",
        "name": "Újbuda-központ",
        "lat": "47.473559",
        "lon": "19.046266",
        "parent": "CSLM4UK1"
    },
    {
        "id": "056221",
        "name": "Móricz Zsigmond körtér",
        "lat": "47.476629",
        "lon": "19.047227",
        "parent": "CSLM4MKF"
    },
    {
        "id": "056222",
        "name": "Móricz Zsigmond körtér",
        "lat": "47.477310",
        "lon": "19.047645",
        "parent": "CSLM4MKF"
    },
    {
        "id": "056223",
        "name": "Szent Gellért tér",
        "lat": "47.482635",
        "lon": "19.054014",
        "parent": "CSLM4SG1"
    },
    {
        "id": "056224",
        "name": "Szent Gellért tér",
        "lat": "47.483039",
        "lon": "19.055036",
        "parent": "CSLM4SG1"
    },
    {
        "id": "056225",
        "name": "Fővám tér",
        "lat": "47.485792",
        "lon": "19.057571",
        "parent": "CSLM4FT1"
    },
    {
        "id": "056226",
        "name": "Fővám tér",
        "lat": "47.486169",
        "lon": "19.058009",
        "parent": "CSLM4FT1"
    },
    {
        "id": "056227",
        "name": "Kálvin tér",
        "lat": "47.488903",
        "lon": "19.061022",
        "parent": "CSF01289"
    },
    {
        "id": "056228",
        "name": "Kálvin tér",
        "lat": "47.489245",
        "lon": "19.061938",
        "parent": "CSF01289"
    },
    {
        "id": "056229",
        "name": "Rákóczi tér",
        "lat": "47.492725",
        "lon": "19.071361",
        "parent": "CS056230"
    },
    {
        "id": "056230",
        "name": "Rákóczi tér",
        "lat": "47.492760",
        "lon": "19.072489",
        "parent": "CS056230"
    },
    {
        "id": "056231",
        "name": "II. János Pál pápa tér",
        "lat": "47.495593",
        "lon": "19.077229",
        "parent": "CS056232"
    },
    {
        "id": "056232",
        "name": "II. János Pál pápa tér",
        "lat": "47.496078",
        "lon": "19.077707",
        "parent": "CS056232"
    },
    {
        "id": "056233",
        "name": "Keleti pályaudvar",
        "lat": "47.500116",
        "lon": "19.080722",
        "parent": "CSLMXKPB"
    },
    {
        "id": "056234",
        "name": "Keleti pályaudvar",
        "lat": "47.500485",
        "lon": "19.081704",
        "parent": "CSLMXKPB"
    },
    {
        "id": "056379",
        "name": "Metró DBR járműtelep (kapu)",
        "lat": "47.461404",
        "lon": "19.025005",
        "parent": ""
    },
    {
        "id": "056426",
        "name": "Károly körút (Astoria M)",
        "lat": "47.495524",
        "lon": "19.060201",
        "parent": "CS056426"
    },
    {
        "id": "061136",
        "name": "Rákosszeg park",
        "lat": "47.534261",
        "lon": "19.103428",
        "parent": ""
    },
    {
        "id": "061188",
        "name": "Kelenföld vasútállomás M",
        "lat": "47.464050",
        "lon": "19.018746",
        "parent": "CS061278"
    },
    {
        "id": "061222",
        "name": "Kelenföld vasútállomás M",
        "lat": "47.464436",
        "lon": "19.018826",
        "parent": "CS061278"
    },
    {
        "id": "061223",
        "name": "Neszmélyi út",
        "lat": "47.460215",
        "lon": "19.015230",
        "parent": "CS061223"
    },
    {
        "id": "061224",
        "name": "Péterhegyi út \/ Neszmélyi út",
        "lat": "47.458534",
        "lon": "19.019025",
        "parent": "CS061224"
    },
    {
        "id": "061225",
        "name": "Hajtány sor",
        "lat": "47.455342",
        "lon": "19.024398",
        "parent": "CSF01948"
    },
    {
        "id": "061226",
        "name": "Péterhegyi út (Menyecske utca)",
        "lat": "47.461369",
        "lon": "19.019000",
        "parent": "CS061226"
    },
    {
        "id": "061227",
        "name": "Péterhegyi út (Menyecske utca)",
        "lat": "47.461090",
        "lon": "19.018947",
        "parent": "CS061226"
    },
    {
        "id": "061231",
        "name": "Pajkos utca",
        "lat": "47.456866",
        "lon": "19.030526",
        "parent": "CS061232"
    },
    {
        "id": "061232",
        "name": "Pajkos utca",
        "lat": "47.457144",
        "lon": "19.029107",
        "parent": "CS061232"
    },
    {
        "id": "061233",
        "name": "Antalháza",
        "lat": "47.436223",
        "lon": "19.007092",
        "parent": "CS061234"
    },
    {
        "id": "061234",
        "name": "Antalháza",
        "lat": "47.436726",
        "lon": "19.007132",
        "parent": "CS061234"
    },
    {
        "id": "061236",
        "name": "Bíbic utca",
        "lat": "47.412031",
        "lon": "19.005194",
        "parent": "CS061236"
    },
    {
        "id": "061237",
        "name": "Bíbic utca",
        "lat": "47.411968",
        "lon": "19.005075",
        "parent": "CS061236"
    },
    {
        "id": "061238",
        "name": "Nyéki Imre Uszoda",
        "lat": "47.450954",
        "lon": "19.036666",
        "parent": "CS078064"
    },
    {
        "id": "061239",
        "name": "Nyéki Imre Uszoda",
        "lat": "47.450415",
        "lon": "19.038098",
        "parent": "CS078064"
    },
    {
        "id": "061240",
        "name": "Szatmárhegy utca",
        "lat": "47.451368",
        "lon": "19.033563",
        "parent": ""
    },
    {
        "id": "061271",
        "name": "Igmándi utca",
        "lat": "47.457248",
        "lon": "19.019994",
        "parent": "CS061271"
    },
    {
        "id": "061272",
        "name": "Bolygó utca",
        "lat": "47.451139",
        "lon": "19.016244",
        "parent": "CS061272"
    },
    {
        "id": "061273",
        "name": "Bolygó utca",
        "lat": "47.450752",
        "lon": "19.016218",
        "parent": "CS061272"
    },
    {
        "id": "061274",
        "name": "Kelenföld vasútállomás M",
        "lat": "47.464128",
        "lon": "19.018557",
        "parent": "CS061278"
    },
    {
        "id": "061275",
        "name": "Kelenföld vasútállomás M",
        "lat": "47.464103",
        "lon": "19.018494",
        "parent": "CS061278"
    },
    {
        "id": "061277",
        "name": "Kelenföld vasútállomás M",
        "lat": "47.464670",
        "lon": "19.018534",
        "parent": "CS061278"
    },
    {
        "id": "061278",
        "name": "Kelenföld vasútállomás M",
        "lat": "47.464742",
        "lon": "19.017778",
        "parent": "CS061278"
    },
    {
        "id": "061280",
        "name": "Kelenföld vasútállomás M",
        "lat": "47.464454",
        "lon": "19.018269",
        "parent": "CS061278"
    },
    {
        "id": "061286",
        "name": "Szabina út",
        "lat": "47.437241",
        "lon": "19.013747",
        "parent": "CS061286"
    },
    {
        "id": "061287",
        "name": "Várkert Bazár",
        "lat": "47.494256",
        "lon": "19.043904",
        "parent": "CS061287"
    },
    {
        "id": "061349",
        "name": "Keleti pályaudvar M",
        "lat": "47.499647",
        "lon": "19.083521",
        "parent": "CSF01131"
    },
    {
        "id": "061350",
        "name": "Keleti pályaudvar M",
        "lat": "47.499795",
        "lon": "19.083170",
        "parent": "CSF01131"
    },
    {
        "id": "061351",
        "name": "Keleti pályaudvar M",
        "lat": "47.499785",
        "lon": "19.083741",
        "parent": "CSF01131"
    },
    {
        "id": "061352",
        "name": "Keleti pályaudvar M",
        "lat": "47.499818",
        "lon": "19.084067",
        "parent": "CSF01131"
    },
    {
        "id": "061367",
        "name": "Puskás Ferenc Stadion M",
        "lat": "47.499880",
        "lon": "19.107530",
        "parent": "CS008132"
    },
    {
        "id": "061368",
        "name": "Munkás utca",
        "lat": "47.500099",
        "lon": "19.078903",
        "parent": "CSF01172"
    },
    {
        "id": "061378",
        "name": "Szőlőskert utca",
        "lat": "47.502285",
        "lon": "18.916726",
        "parent": "CS061378"
    },
    {
        "id": "061379",
        "name": "Maglód, Auchan áruház",
        "lat": "47.459205",
        "lon": "19.332057",
        "parent": ""
    },
    {
        "id": "062511",
        "name": "Than Károly utca",
        "lat": "47.461081",
        "lon": "19.025231",
        "parent": "CS062511"
    },
    {
        "id": "062512",
        "name": "Borszéki utca",
        "lat": "47.458535",
        "lon": "19.023574",
        "parent": "CS062512"
    },
    {
        "id": "062513",
        "name": "Jégmadár utca",
        "lat": "47.430762",
        "lon": "19.005851",
        "parent": "CS062513"
    },
    {
        "id": "062514",
        "name": "Jégmadár utca",
        "lat": "47.430753",
        "lon": "19.005665",
        "parent": "CS062513"
    },
    {
        "id": "062515",
        "name": "Török utca",
        "lat": "47.412738",
        "lon": "18.989274",
        "parent": "CS062516"
    },
    {
        "id": "062516",
        "name": "Török utca",
        "lat": "47.412918",
        "lon": "18.988757",
        "parent": "CS062516"
    },
    {
        "id": "062517",
        "name": "Rózsák tere",
        "lat": "47.501871",
        "lon": "19.075626",
        "parent": ""
    },
    {
        "id": "062518",
        "name": "Március 15. tér",
        "lat": "47.491872",
        "lon": "19.051760",
        "parent": "CS062518"
    },
    {
        "id": "062519",
        "name": "Gazdagréti út",
        "lat": "47.462811",
        "lon": "19.005122",
        "parent": "CS062519"
    },
    {
        "id": "062522",
        "name": "XIII. utca \/ Dózsa György út",
        "lat": "47.411130",
        "lon": "18.993901",
        "parent": "CSF04475"
    },
    {
        "id": "062566",
        "name": "Boráros tér H",
        "lat": "47.479452",
        "lon": "19.067442",
        "parent": "CSF01516"
    },
    {
        "id": "062604",
        "name": "Nyár utca",
        "lat": "47.435738",
        "lon": "18.918427",
        "parent": "CS062604"
    },
    {
        "id": "062607",
        "name": "Neumann János utca",
        "lat": "47.469872",
        "lon": "19.062941",
        "parent": ""
    },
    {
        "id": "062608",
        "name": "Magyar tudósok körútja",
        "lat": "47.471498",
        "lon": "19.063724",
        "parent": "CS062622"
    },
    {
        "id": "062620",
        "name": "Egyetemváros - A38 hajóállomás",
        "lat": "47.473576",
        "lon": "19.063446",
        "parent": "CS062621"
    },
    {
        "id": "062621",
        "name": "Egyetemváros - A38 hajóállomás",
        "lat": "47.473675",
        "lon": "19.063592",
        "parent": "CS062621"
    },
    {
        "id": "062622",
        "name": "Magyar tudósok körútja",
        "lat": "47.471741",
        "lon": "19.063989",
        "parent": "CS062622"
    },
    {
        "id": "062726",
        "name": "Régi vám",
        "lat": "47.445631",
        "lon": "19.005613",
        "parent": "CS009431"
    },
    {
        "id": "062747",
        "name": "Keleti pályaudvar M",
        "lat": "47.501356",
        "lon": "19.084357",
        "parent": "CSF01131"
    },
    {
        "id": "062756",
        "name": "Dagály fürdő",
        "lat": "47.537691",
        "lon": "19.062840",
        "parent": "CS062861"
    },
    {
        "id": "062757",
        "name": "Karikás Frigyes utca",
        "lat": "47.536767",
        "lon": "19.067269",
        "parent": "CSF02571"
    },
    {
        "id": "062815",
        "name": "Szent László utca",
        "lat": "47.404869",
        "lon": "18.997873",
        "parent": "CSF04470"
    },
    {
        "id": "062861",
        "name": "Dagály fürdő",
        "lat": "47.537898",
        "lon": "19.062441",
        "parent": "CS062861"
    },
    {
        "id": "062942",
        "name": "Péterfy Sándor utca",
        "lat": "47.501682",
        "lon": "19.077816",
        "parent": ""
    },
    {
        "id": "063399",
        "name": "Hulladékhasznosító Mű",
        "lat": "47.584164",
        "lon": "19.131198",
        "parent": "CS063399"
    },
    {
        "id": "063452",
        "name": "Teve utca (Árpád híd M)",
        "lat": "47.531385",
        "lon": "19.069001",
        "parent": "CS008080"
    },
    {
        "id": "064067",
        "name": "Massányi úti lakópark",
        "lat": "47.359933",
        "lon": "19.028822",
        "parent": "CS064074"
    },
    {
        "id": "064074",
        "name": "Massányi úti lakópark",
        "lat": "47.360751",
        "lon": "19.027856",
        "parent": "CS064074"
    },
    {
        "id": "064075",
        "name": "Szigetszentmiklós, Szabadság utca",
        "lat": "47.358296",
        "lon": "19.031921",
        "parent": ""
    },
    {
        "id": "064085",
        "name": "Kölcsey Ferenc utca",
        "lat": "47.355247",
        "lon": "19.034874",
        "parent": "CS064085"
    },
    {
        "id": "064087",
        "name": "Lehel utca",
        "lat": "47.352882",
        "lon": "19.038541",
        "parent": "CS064087"
    },
    {
        "id": "064088",
        "name": "Városi Könyvtár",
        "lat": "47.344795",
        "lon": "19.042274",
        "parent": ""
    },
    {
        "id": "064089",
        "name": "Miklós Pláza",
        "lat": "47.341638",
        "lon": "19.040925",
        "parent": ""
    },
    {
        "id": "064090",
        "name": "Nap utca (óvoda)",
        "lat": "47.349561",
        "lon": "19.025742",
        "parent": "CS064106"
    },
    {
        "id": "064091",
        "name": "Váci Mihály utca (József Attila-telep H)",
        "lat": "47.338471",
        "lon": "19.035910",
        "parent": "CS064185"
    },
    {
        "id": "064092",
        "name": "Jókai utca",
        "lat": "47.341260",
        "lon": "19.036028",
        "parent": "CS064092"
    },
    {
        "id": "064093",
        "name": "Akácfa körút",
        "lat": "47.344228",
        "lon": "19.033301",
        "parent": "CS064093"
    },
    {
        "id": "064103",
        "name": "Tamási Áron utca",
        "lat": "47.345045",
        "lon": "19.028206",
        "parent": "CS064103"
    },
    {
        "id": "064104",
        "name": "Miklós tér",
        "lat": "47.346933",
        "lon": "19.023282",
        "parent": "CS064181"
    },
    {
        "id": "064105",
        "name": "Szebeni utca",
        "lat": "47.350638",
        "lon": "19.016265",
        "parent": ""
    },
    {
        "id": "064106",
        "name": "Nap utca (óvoda)",
        "lat": "47.349750",
        "lon": "19.026100",
        "parent": "CS064106"
    },
    {
        "id": "064107",
        "name": "Ősz utca",
        "lat": "47.352907",
        "lon": "19.024828",
        "parent": "CS064107"
    },
    {
        "id": "064108",
        "name": "Ady Endre utca",
        "lat": "47.355057",
        "lon": "19.025886",
        "parent": "CS064170"
    },
    {
        "id": "064170",
        "name": "Ady Endre utca",
        "lat": "47.355848",
        "lon": "19.027090",
        "parent": "CS064170"
    },
    {
        "id": "064175",
        "name": "Ősz utca",
        "lat": "47.352394",
        "lon": "19.025291",
        "parent": "CS064107"
    },
    {
        "id": "064181",
        "name": "Miklós tér",
        "lat": "47.347356",
        "lon": "19.023163",
        "parent": "CS064181"
    },
    {
        "id": "064182",
        "name": "Tamási Áron utca",
        "lat": "47.345010",
        "lon": "19.028841",
        "parent": "CS064103"
    },
    {
        "id": "064183",
        "name": "Akácfa körút",
        "lat": "47.343832",
        "lon": "19.034294",
        "parent": "CS064093"
    },
    {
        "id": "064184",
        "name": "Jókai utca",
        "lat": "47.341080",
        "lon": "19.035843",
        "parent": "CS064092"
    },
    {
        "id": "064185",
        "name": "Váci Mihály utca (József Attila-telep H)",
        "lat": "47.338561",
        "lon": "19.035764",
        "parent": "CS064185"
    },
    {
        "id": "064186",
        "name": "Kisfaludy utca",
        "lat": "47.342349",
        "lon": "19.045001",
        "parent": ""
    },
    {
        "id": "064187",
        "name": "Lehel utca",
        "lat": "47.352873",
        "lon": "19.038739",
        "parent": "CS064087"
    },
    {
        "id": "064188",
        "name": "Kölcsey Ferenc utca",
        "lat": "47.354959",
        "lon": "19.035403",
        "parent": "CS064085"
    },
    {
        "id": "064208",
        "name": "Szépvölgyi köz",
        "lat": "47.541136",
        "lon": "19.002003",
        "parent": "CS064208"
    },
    {
        "id": "064209",
        "name": "Szépvölgyi köz",
        "lat": "47.541109",
        "lon": "19.001644",
        "parent": "CS064208"
    },
    {
        "id": "064210",
        "name": "Fenyőgyöngye",
        "lat": "47.540427",
        "lon": "19.005563",
        "parent": "CS064210"
    },
    {
        "id": "064212",
        "name": "Selyemakác utca",
        "lat": "47.543149",
        "lon": "18.996382",
        "parent": "CS064212"
    },
    {
        "id": "064214",
        "name": "Selyemakác utca",
        "lat": "47.543050",
        "lon": "18.996382",
        "parent": "CS064212"
    },
    {
        "id": "064215",
        "name": "Szépvölgyi dűlő",
        "lat": "47.545881",
        "lon": "18.992141",
        "parent": ""
    },
    {
        "id": "064239",
        "name": "Leshegy utca",
        "lat": "47.376961",
        "lon": "19.032246",
        "parent": "CS064240"
    },
    {
        "id": "064240",
        "name": "Leshegy utca",
        "lat": "47.377069",
        "lon": "19.031955",
        "parent": "CS064240"
    },
    {
        "id": "064241",
        "name": "Leshegy Ipari Park",
        "lat": "47.376044",
        "lon": "19.042085",
        "parent": "CS064241"
    },
    {
        "id": "064242",
        "name": "Leshegy Ipari Park",
        "lat": "47.375594",
        "lon": "19.041993",
        "parent": "CS064241"
    },
    {
        "id": "064243",
        "name": "Temető utca",
        "lat": "47.356210",
        "lon": "19.046946",
        "parent": "CS064243"
    },
    {
        "id": "064244",
        "name": "Wesselényi utca",
        "lat": "47.351110",
        "lon": "19.045357",
        "parent": "CS064319"
    },
    {
        "id": "064245",
        "name": "Bánki Donát utca",
        "lat": "47.360366",
        "lon": "19.047581",
        "parent": ""
    },
    {
        "id": "064246",
        "name": "Bányató út",
        "lat": "47.367670",
        "lon": "19.048415",
        "parent": "CS064246"
    },
    {
        "id": "064316",
        "name": "Bányató út",
        "lat": "47.366761",
        "lon": "19.048071",
        "parent": "CS064246"
    },
    {
        "id": "064318",
        "name": "Temető utca",
        "lat": "47.355383",
        "lon": "19.045900",
        "parent": "CS064243"
    },
    {
        "id": "064319",
        "name": "Wesselényi utca",
        "lat": "47.352063",
        "lon": "19.045357",
        "parent": "CS064319"
    },
    {
        "id": "066375",
        "name": "Népliget tároló",
        "lat": "47.473683",
        "lon": "19.099279",
        "parent": "CS008287"
    },
    {
        "id": "066451",
        "name": "Infopark",
        "lat": "47.469171",
        "lon": "19.059717",
        "parent": "CS066451"
    },
    {
        "id": "066452",
        "name": "Infopark",
        "lat": "47.469072",
        "lon": "19.060500",
        "parent": "CS066451"
    },
    {
        "id": "066453",
        "name": "Budafoki út \/ Dombóvári út",
        "lat": "47.469808",
        "lon": "19.053655",
        "parent": "CS066453"
    },
    {
        "id": "066454",
        "name": "Budafoki út \/ Dombóvári út",
        "lat": "47.469646",
        "lon": "19.054384",
        "parent": "CS066453"
    },
    {
        "id": "066455",
        "name": "Hauszmann Alajos utca \/ Szerémi út",
        "lat": "47.466536",
        "lon": "19.049570",
        "parent": "CS066456"
    },
    {
        "id": "066456",
        "name": "Hauszmann Alajos utca \/ Szerémi út",
        "lat": "47.467013",
        "lon": "19.049756",
        "parent": "CS066456"
    },
    {
        "id": "066457",
        "name": "Hengermalom út \/ Szerémi út",
        "lat": "47.462066",
        "lon": "19.048336",
        "parent": "CS066458"
    },
    {
        "id": "066458",
        "name": "Hengermalom út \/ Szerémi út",
        "lat": "47.462551",
        "lon": "19.048509",
        "parent": "CS066458"
    },
    {
        "id": "066459",
        "name": "Etele út \/ Fehérvári út",
        "lat": "47.462400",
        "lon": "19.042632",
        "parent": "CSF02009"
    },
    {
        "id": "066460",
        "name": "Etele út \/ Fehérvári út",
        "lat": "47.462353",
        "lon": "19.042594",
        "parent": "CSF02009"
    },
    {
        "id": "066477",
        "name": "Hunyadi János út tároló",
        "lat": "47.431139",
        "lon": "19.042741",
        "parent": ""
    },
    {
        "id": "066697",
        "name": "Rés utca",
        "lat": "47.480138",
        "lon": "19.291886",
        "parent": "CS043556"
    },
    {
        "id": "066698",
        "name": "Sport tér",
        "lat": "47.476891",
        "lon": "19.295905",
        "parent": "CS043555"
    },
    {
        "id": "066699",
        "name": "Enying utca",
        "lat": "47.475006",
        "lon": "19.298297",
        "parent": "CS043554"
    },
    {
        "id": "066700",
        "name": "Szárazhegy köz",
        "lat": "47.473184",
        "lon": "19.300716",
        "parent": ""
    },
    {
        "id": "066711",
        "name": "Rákoscsaba-Újtelep vasútállomás",
        "lat": "47.486513",
        "lon": "19.270724",
        "parent": ""
    },
    {
        "id": "066712",
        "name": "Szabadság sugárút \/ Péceli út",
        "lat": "47.483054",
        "lon": "19.273283",
        "parent": "CS066712"
    },
    {
        "id": "066713",
        "name": "Szabadság sugárút \/ Péceli út",
        "lat": "47.482666",
        "lon": "19.274051",
        "parent": "CS066712"
    },
    {
        "id": "066714",
        "name": "Nyitány utca",
        "lat": "47.480827",
        "lon": "19.275941",
        "parent": "CS066715"
    },
    {
        "id": "066715",
        "name": "Nyitány utca",
        "lat": "47.481115",
        "lon": "19.275770",
        "parent": "CS066715"
    },
    {
        "id": "066716",
        "name": "Öntöző utca",
        "lat": "47.478754",
        "lon": "19.278174",
        "parent": "CS066717"
    },
    {
        "id": "066717",
        "name": "Öntöző utca",
        "lat": "47.478826",
        "lon": "19.278267",
        "parent": "CS066717"
    },
    {
        "id": "066718",
        "name": "Pestvidéki utca",
        "lat": "47.476960",
        "lon": "19.280223",
        "parent": "CS066719"
    },
    {
        "id": "066719",
        "name": "Pestvidéki utca",
        "lat": "47.477059",
        "lon": "19.280276",
        "parent": "CS066719"
    },
    {
        "id": "066720",
        "name": "Derkovits tér",
        "lat": "47.474921",
        "lon": "19.283000",
        "parent": ""
    },
    {
        "id": "066722",
        "name": "Nyeremény utca",
        "lat": "47.474416",
        "lon": "19.283966",
        "parent": ""
    },
    {
        "id": "066755",
        "name": "Hunyadi János utca MOL kút",
        "lat": "47.448868",
        "lon": "19.049211",
        "parent": ""
    },
    {
        "id": "066756",
        "name": "Budaörs Repülőtéri út MOL kút",
        "lat": "47.447541",
        "lon": "18.976254",
        "parent": ""
    },
    {
        "id": "066826",
        "name": "Napfény utca",
        "lat": "47.458509",
        "lon": "19.114530",
        "parent": "CS044129"
    },
    {
        "id": "066828",
        "name": "Árpád híd M",
        "lat": "47.532965",
        "lon": "19.065654",
        "parent": "CS008080"
    },
    {
        "id": "066856",
        "name": "Pagony utca",
        "lat": "47.495120",
        "lon": "19.002813",
        "parent": "CS066856"
    },
    {
        "id": "066969",
        "name": "Zimonyi utca",
        "lat": "47.471997",
        "lon": "19.300299",
        "parent": ""
    },
    {
        "id": "067001",
        "name": "Borszéki utca MOL kút",
        "lat": "47.456592",
        "lon": "19.024172",
        "parent": ""
    },
    {
        "id": "067002",
        "name": "Kelenföldi VB pályaudvar",
        "lat": "47.463329",
        "lon": "19.022895",
        "parent": ""
    },
    {
        "id": "067266",
        "name": "Kossuth Lajos tér M",
        "lat": "47.505723",
        "lon": "19.044672",
        "parent": "CSF00970"
    },
    {
        "id": "067333",
        "name": "Golgota tér MOL kút",
        "lat": "47.486170",
        "lon": "19.093320",
        "parent": "CSF01227"
    },
    {
        "id": "067334",
        "name": "Hős u. MOL kút",
        "lat": "47.496093",
        "lon": "19.108578",
        "parent": ""
    },
    {
        "id": "067335",
        "name": "Pesti út MOL kút",
        "lat": "47.484366",
        "lon": "19.227629",
        "parent": ""
    },
    {
        "id": "067368",
        "name": "Nagykőrösi út MOL kút",
        "lat": "47.442630",
        "lon": "19.132926",
        "parent": ""
    },
    {
        "id": "067563",
        "name": "Csepel, Szent István út MOL kút",
        "lat": "47.419083",
        "lon": "19.074285",
        "parent": ""
    },
    {
        "id": "067589",
        "name": "Bem József tér",
        "lat": "47.512154",
        "lon": "19.039334",
        "parent": "CS069092"
    },
    {
        "id": "067592",
        "name": "Batthyány tér M+H",
        "lat": "47.506568",
        "lon": "19.038422",
        "parent": "CSF00065"
    },
    {
        "id": "067622",
        "name": "Csepel, Csillagtelep",
        "lat": "47.409955",
        "lon": "19.060354",
        "parent": "CSF04277"
    },
    {
        "id": "069089",
        "name": "Margit híd, budai hídfő H",
        "lat": "47.515131",
        "lon": "19.037556",
        "parent": "CSF00234"
    },
    {
        "id": "069090",
        "name": "Margit híd, budai hídfő H",
        "lat": "47.515104",
        "lon": "19.037145",
        "parent": "CSF00234"
    },
    {
        "id": "069091",
        "name": "Margit híd, budai hídfő H",
        "lat": "47.514780",
        "lon": "19.035950",
        "parent": "CSF00234"
    },
    {
        "id": "069092",
        "name": "Bem József tér",
        "lat": "47.512155",
        "lon": "19.039454",
        "parent": "CS069092"
    },
    {
        "id": "069093",
        "name": "Bem József tér",
        "lat": "47.511867",
        "lon": "19.039321",
        "parent": "CS069092"
    },
    {
        "id": "069195",
        "name": "Leshegy Ipari Park",
        "lat": "47.375244",
        "lon": "19.043158",
        "parent": "CS064241"
    },
    {
        "id": "069403",
        "name": "Jahn Ferenc Kórház",
        "lat": "47.423214",
        "lon": "19.132014",
        "parent": "CSF04082"
    },
    {
        "id": "069661",
        "name": "Újpest-Központ M",
        "lat": "47.560386",
        "lon": "19.090552",
        "parent": "CSF00910"
    },
    {
        "id": "070997",
        "name": "Széll Kálmán tér M",
        "lat": "47.507743",
        "lon": "19.023301",
        "parent": "CS073099"
    },
    {
        "id": "071135",
        "name": "Budaörs Metro MOL kút",
        "lat": "47.460514",
        "lon": "18.893215",
        "parent": ""
    },
    {
        "id": "071154",
        "name": "Békásmegyer H",
        "lat": "47.597865",
        "lon": "19.054120",
        "parent": "CS008940"
    },
    {
        "id": "071216",
        "name": "Ady Endre út (Kossuth Lajos utca)",
        "lat": "47.435085",
        "lon": "19.071681",
        "parent": "CS071216"
    },
    {
        "id": "071262",
        "name": "Infopark",
        "lat": "47.468515",
        "lon": "19.058556",
        "parent": "CS066451"
    },
    {
        "id": "071659",
        "name": "Nyugati pályaudvar M",
        "lat": "47.510490",
        "lon": "19.055013",
        "parent": "CSF01023"
    },
    {
        "id": "072046",
        "name": "Muflon utca",
        "lat": "47.570868",
        "lon": "18.931415",
        "parent": "CS072046"
    },
    {
        "id": "072047",
        "name": "Muflon utca",
        "lat": "47.570670",
        "lon": "18.931469",
        "parent": "CS072046"
    },
    {
        "id": "072754",
        "name": "Templom tér",
        "lat": "47.591224",
        "lon": "18.929967",
        "parent": "CSF04707"
    },
    {
        "id": "072763",
        "name": "Bajcsy-Zsilinszky utca",
        "lat": "47.589935",
        "lon": "18.936059",
        "parent": "CSF04798"
    },
    {
        "id": "072787",
        "name": "Templom tér",
        "lat": "47.591224",
        "lon": "18.929954",
        "parent": "CSF04707"
    },
    {
        "id": "072865",
        "name": "Zenélőkút",
        "lat": "47.535659",
        "lon": "19.052971",
        "parent": "CSF02501"
    },
    {
        "id": "072934",
        "name": "Rudas Gyógyfürdő",
        "lat": "47.490125",
        "lon": "19.047173",
        "parent": "CS072934"
    },
    {
        "id": "072935",
        "name": "Rudas Gyógyfürdő",
        "lat": "47.489824",
        "lon": "19.047383",
        "parent": "CS072934"
    },
    {
        "id": "072938",
        "name": "CS\/ Kossuth Lajos utca MOL",
        "lat": "47.438084",
        "lon": "19.071291",
        "parent": ""
    },
    {
        "id": "073099",
        "name": "Széll Kálmán tér M",
        "lat": "47.507795",
        "lon": "19.022886",
        "parent": "CS073099"
    },
    {
        "id": "073152",
        "name": "Maros utca",
        "lat": "47.505533",
        "lon": "19.021637",
        "parent": "CSF02335"
    },
    {
        "id": "073308",
        "name": "Solymár vasútállomás",
        "lat": "47.595972",
        "lon": "18.950089",
        "parent": "CS073309"
    },
    {
        "id": "073309",
        "name": "Solymár vasútállomás",
        "lat": "47.595999",
        "lon": "18.950103",
        "parent": "CS073309"
    },
    {
        "id": "073426",
        "name": "Művelődési Ház",
        "lat": "47.428553",
        "lon": "18.913151",
        "parent": "CS073427"
    },
    {
        "id": "073427",
        "name": "Művelődési Ház",
        "lat": "47.428553",
        "lon": "18.913005",
        "parent": "CS073427"
    },
    {
        "id": "073471",
        "name": "Nyár utca",
        "lat": "47.435378",
        "lon": "18.918467",
        "parent": "CS062604"
    },
    {
        "id": "073472",
        "name": "Harangláb",
        "lat": "47.432107",
        "lon": "18.913911",
        "parent": "CSF04757"
    },
    {
        "id": "073473",
        "name": "Munkácsy Mihály utca (hősi emlékmű)",
        "lat": "47.431390",
        "lon": "18.916591",
        "parent": "CS073473"
    },
    {
        "id": "074021",
        "name": "Kőbányai garázs",
        "lat": "47.491018",
        "lon": "19.114222",
        "parent": "CS074021"
    },
    {
        "id": "074495",
        "name": "Törökbálint Sportközpont",
        "lat": "47.440514",
        "lon": "18.897223",
        "parent": "CS074495"
    },
    {
        "id": "074909",
        "name": "Auchan Liget",
        "lat": "47.541514",
        "lon": "19.246517",
        "parent": "CS074909"
    },
    {
        "id": "074935",
        "name": "Nagy Lajos király útja \/ Czobor utca",
        "lat": "47.522797",
        "lon": "19.101948",
        "parent": "CSF02868"
    },
    {
        "id": "075119",
        "name": "Nyár utca",
        "lat": "47.435468",
        "lon": "18.918639",
        "parent": "CS062604"
    },
    {
        "id": "075220",
        "name": "Óbudai autóbuszgarázs",
        "lat": "47.567996",
        "lon": "19.027538",
        "parent": "CS008360"
    },
    {
        "id": "075654",
        "name": "Köves út \/ Szentlőrinci út",
        "lat": "47.416082",
        "lon": "19.143211",
        "parent": "CS075655"
    },
    {
        "id": "075655",
        "name": "Köves út \/ Szentlőrinci út",
        "lat": "47.416265",
        "lon": "19.143244",
        "parent": "CS075655"
    },
    {
        "id": "075744",
        "name": "Sasadi út",
        "lat": "47.465540",
        "lon": "19.015876",
        "parent": "CSF01926"
    },
    {
        "id": "076394",
        "name": "Aranyvölgy vasútállomás",
        "lat": "47.574337",
        "lon": "19.016474",
        "parent": "CS076394"
    },
    {
        "id": "076395",
        "name": "Aranyvölgy vasútállomás",
        "lat": "47.573789",
        "lon": "19.017660",
        "parent": "CS076394"
    },
    {
        "id": "076396",
        "name": "Óbuda vasútállomás (Aranyhegyi út)",
        "lat": "47.570439",
        "lon": "19.028424",
        "parent": "CS076397"
    },
    {
        "id": "076397",
        "name": "Óbuda vasútállomás (Aranyhegyi út)",
        "lat": "47.570755",
        "lon": "19.027745",
        "parent": "CS076397"
    },
    {
        "id": "076398",
        "name": "Aranyvölgy utca 14.",
        "lat": "47.571859",
        "lon": "19.022431",
        "parent": "CS076399"
    },
    {
        "id": "076399",
        "name": "Aranyvölgy utca 14.",
        "lat": "47.572096",
        "lon": "19.021853",
        "parent": "CS076399"
    },
    {
        "id": "078064",
        "name": "Nyéki Imre Uszoda",
        "lat": "47.451074",
        "lon": "19.037384",
        "parent": "CS078064"
    },
    {
        "id": "081565",
        "name": "Széll Kálmán tér M",
        "lat": "47.507691",
        "lon": "19.024350",
        "parent": "CS073099"
    },
    {
        "id": "081950",
        "name": "Városház tér",
        "lat": "47.426290",
        "lon": "19.040020",
        "parent": "CSF04405"
    },
    {
        "id": "081954",
        "name": "Kacsa utca",
        "lat": "47.510409",
        "lon": "19.039243",
        "parent": ""
    },
    {
        "id": "082040",
        "name": "Főgáz telephely",
        "lat": "47.490143",
        "lon": "19.114886",
        "parent": ""
    },
    {
        "id": "082200",
        "name": "Bécsi út \/ Vörösvári út",
        "lat": "47.546746",
        "lon": "19.029202",
        "parent": "CSF00571"
    },
    {
        "id": "082617",
        "name": "Sasadi út",
        "lat": "47.466639",
        "lon": "19.016264",
        "parent": "CSF01926"
    },
    {
        "id": "082623",
        "name": "Budatétényi sorompó",
        "lat": "47.403245",
        "lon": "19.009361",
        "parent": "CSF04458"
    },
    {
        "id": "083287",
        "name": "Dráva utca",
        "lat": "47.525235",
        "lon": "19.058679",
        "parent": "CS087346"
    },
    {
        "id": "083329",
        "name": "Bartók Béla út 208.",
        "lat": "47.417518",
        "lon": "18.985378",
        "parent": "CS083329"
    },
    {
        "id": "083330",
        "name": "Bartók Béla út 208.",
        "lat": "47.416969",
        "lon": "18.985684",
        "parent": "CS083329"
    },
    {
        "id": "083331",
        "name": "Savoyai Jenő tér (Plébánia utca)",
        "lat": "47.428921",
        "lon": "19.035811",
        "parent": "CS007930"
    },
    {
        "id": "083468",
        "name": "Albert Flórián út",
        "lat": "47.472498",
        "lon": "19.095441",
        "parent": "CSF01500"
    },
    {
        "id": "083601",
        "name": "Rudas Gyógyfürdő",
        "lat": "47.490065",
        "lon": "19.047301",
        "parent": "CS072934"
    },
    {
        "id": "083777",
        "name": "Budafoki Szomszédok Piaca",
        "lat": "47.427599",
        "lon": "19.039509",
        "parent": ""
    },
    {
        "id": "083948",
        "name": "Árpád fejedelem útja, MOL-töltőállomás",
        "lat": "47.536055",
        "lon": "19.046334",
        "parent": ""
    },
    {
        "id": "085576",
        "name": "Forgách utca M",
        "lat": "47.539611",
        "lon": "19.070066",
        "parent": "CSF02679"
    },
    {
        "id": "086006",
        "name": "Reitter Ferenc utca",
        "lat": "47.546008",
        "lon": "19.094152",
        "parent": "CS086012"
    },
    {
        "id": "086012",
        "name": "Reitter Ferenc utca",
        "lat": "47.546332",
        "lon": "19.094019",
        "parent": "CS086012"
    },
    {
        "id": "086128",
        "name": "Kárpát utca",
        "lat": "47.527282",
        "lon": "19.059955",
        "parent": "CS049177"
    },
    {
        "id": "086671",
        "name": "Budaörs M1-M7 MOL kút",
        "lat": "47.451598",
        "lon": "18.958601",
        "parent": ""
    },
    {
        "id": "087228",
        "name": "Árpád híd M",
        "lat": "47.533120",
        "lon": "19.067251",
        "parent": "CS008080"
    },
    {
        "id": "087346",
        "name": "Dráva utca",
        "lat": "47.526774",
        "lon": "19.057511",
        "parent": "CS087346"
    },
    {
        "id": "087353",
        "name": "Solymár, községháza",
        "lat": "47.591635",
        "lon": "18.937254",
        "parent": "CSF04702"
    },
    {
        "id": "CS003106",
        "name": "Örs vezér tere",
        "lat": "47.502965",
        "lon": "19.136373",
        "parent": ""
    },
    {
        "id": "CS003118",
        "name": "Óbuda, Bogdáni út",
        "lat": "47.550445",
        "lon": "19.042050",
        "parent": ""
    },
    {
        "id": "CS007877",
        "name": "Bíróság",
        "lat": "47.519510",
        "lon": "18.978054",
        "parent": ""
    },
    {
        "id": "CS007914",
        "name": "526. sor",
        "lat": "47.479290",
        "lon": "19.211400",
        "parent": ""
    },
    {
        "id": "CS007924",
        "name": "Ültetvény utca",
        "lat": "47.396852",
        "lon": "19.175304",
        "parent": ""
    },
    {
        "id": "CS007927",
        "name": "Ferihegy vasútállomás",
        "lat": "47.437431",
        "lon": "19.222815",
        "parent": ""
    },
    {
        "id": "CS007930",
        "name": "Savoyai Jenő tér",
        "lat": "47.429589",
        "lon": "19.037109",
        "parent": ""
    },
    {
        "id": "CS007967",
        "name": "Kelenföld vasútállomás",
        "lat": "47.464978",
        "lon": "19.022650",
        "parent": ""
    },
    {
        "id": "CS007976",
        "name": "Hűvösvölgy",
        "lat": "47.542987",
        "lon": "18.964360",
        "parent": ""
    },
    {
        "id": "CS007995",
        "name": "Jókai Mór utca",
        "lat": "47.410306",
        "lon": "19.020527",
        "parent": ""
    },
    {
        "id": "CS007997",
        "name": "Budatétény vasútállomás (Campona)",
        "lat": "47.405747",
        "lon": "19.014016",
        "parent": ""
    },
    {
        "id": "CS008041",
        "name": "Tas vezér utca",
        "lat": "47.478784",
        "lon": "19.040597",
        "parent": ""
    },
    {
        "id": "CS008050",
        "name": "Liptó utca",
        "lat": "47.486103",
        "lon": "19.007086",
        "parent": ""
    },
    {
        "id": "CS008080",
        "name": "Árpád híd",
        "lat": "47.532877",
        "lon": "19.067335",
        "parent": ""
    },
    {
        "id": "CS008087",
        "name": "Fény utcai piac",
        "lat": "47.508398",
        "lon": "19.023716",
        "parent": ""
    },
    {
        "id": "CS008095",
        "name": "Nagykőrösi út",
        "lat": "47.425255",
        "lon": "19.157300",
        "parent": ""
    },
    {
        "id": "CS008102",
        "name": "Rózsavölgy felső",
        "lat": "47.441094",
        "lon": "19.022730",
        "parent": ""
    },
    {
        "id": "CS008109",
        "name": "Damjanich utca",
        "lat": "47.402419",
        "lon": "18.990920",
        "parent": ""
    },
    {
        "id": "CS008110",
        "name": "Barosstelep vasútállomás",
        "lat": "47.399602",
        "lon": "18.990872",
        "parent": ""
    },
    {
        "id": "CS008111",
        "name": "Barackos út \/ Angeli utca",
        "lat": "47.401595",
        "lon": "18.973421",
        "parent": ""
    },
    {
        "id": "CS008113",
        "name": "Szilvafa utca",
        "lat": "47.405192",
        "lon": "18.982619",
        "parent": ""
    },
    {
        "id": "CS008115",
        "name": "Szebeni utca",
        "lat": "47.430280",
        "lon": "19.016475",
        "parent": ""
    },
    {
        "id": "CS008125",
        "name": "Zöldike utca",
        "lat": "47.430971",
        "lon": "19.012591",
        "parent": ""
    },
    {
        "id": "CS008127",
        "name": "Hír utca",
        "lat": "47.432905",
        "lon": "19.011463",
        "parent": ""
    },
    {
        "id": "CS008132",
        "name": "Puskás Ferenc Stadion",
        "lat": "47.500345",
        "lon": "19.106544",
        "parent": ""
    },
    {
        "id": "CS008240",
        "name": "Millenniumi Kulturális Központ",
        "lat": "47.471060",
        "lon": "19.073318",
        "parent": ""
    },
    {
        "id": "CS008260",
        "name": "Nagybányai út",
        "lat": "47.528397",
        "lon": "18.996243",
        "parent": ""
    },
    {
        "id": "CS008264",
        "name": "Közvágóhíd",
        "lat": "47.469554",
        "lon": "19.070097",
        "parent": ""
    },
    {
        "id": "CS008269",
        "name": "Delej utca",
        "lat": "47.484581",
        "lon": "19.096390",
        "parent": ""
    },
    {
        "id": "CS008284",
        "name": "Óceán-árok utca",
        "lat": "47.590204",
        "lon": "19.101106",
        "parent": ""
    },
    {
        "id": "CS008287",
        "name": "Népliget",
        "lat": "47.475641",
        "lon": "19.099688",
        "parent": ""
    },
    {
        "id": "CS008289",
        "name": "Szilágyi utca",
        "lat": "47.570627",
        "lon": "19.112164",
        "parent": ""
    },
    {
        "id": "CS008317",
        "name": "Bartók Béla utca",
        "lat": "47.433050",
        "lon": "18.919211",
        "parent": ""
    },
    {
        "id": "CS008319",
        "name": "Raktárváros",
        "lat": "47.441557",
        "lon": "18.938442",
        "parent": ""
    },
    {
        "id": "CS008324",
        "name": "Tükörhegy",
        "lat": "47.436296",
        "lon": "18.927038",
        "parent": ""
    },
    {
        "id": "CS008326",
        "name": "Ady Endre utca",
        "lat": "47.434987",
        "lon": "18.906573",
        "parent": ""
    },
    {
        "id": "CS008330",
        "name": "Határ utca",
        "lat": "47.445104",
        "lon": "18.894168",
        "parent": ""
    },
    {
        "id": "CS008337",
        "name": "Növény utca",
        "lat": "47.402098",
        "lon": "19.015532",
        "parent": ""
    },
    {
        "id": "CS008341",
        "name": "Templom tér",
        "lat": "47.542083",
        "lon": "19.130063",
        "parent": ""
    },
    {
        "id": "CS008360",
        "name": "Óbudai autóbuszgarázs",
        "lat": "47.568088",
        "lon": "19.026773",
        "parent": ""
    },
    {
        "id": "CS008377",
        "name": "Nagykőrösi út \/ Határ út",
        "lat": "47.455497",
        "lon": "19.114132",
        "parent": ""
    },
    {
        "id": "CS008403",
        "name": "Kert sor",
        "lat": "47.591251",
        "lon": "19.045363",
        "parent": ""
    },
    {
        "id": "CS008404",
        "name": "Csillaghegy[1]",
        "lat": "47.584754",
        "lon": "19.042546",
        "parent": ""
    },
    {
        "id": "CS008407",
        "name": "Forrásliget lakópark",
        "lat": "47.581288",
        "lon": "19.037707",
        "parent": ""
    },
    {
        "id": "CS008409",
        "name": "Ürömhegyi lejtő",
        "lat": "47.577654",
        "lon": "19.032132",
        "parent": ""
    },
    {
        "id": "CS008410",
        "name": "Aranyhegyi lejtő",
        "lat": "47.572553",
        "lon": "19.030214",
        "parent": ""
    },
    {
        "id": "CS008428",
        "name": "Budakalász, Budai út",
        "lat": "47.616896",
        "lon": "19.051651",
        "parent": ""
    },
    {
        "id": "CS008431",
        "name": "Budakalász, Lenfonó",
        "lat": "47.621052",
        "lon": "19.046018",
        "parent": ""
    },
    {
        "id": "CS008432",
        "name": "Szentistvántelep",
        "lat": "47.627749",
        "lon": "19.043623",
        "parent": ""
    },
    {
        "id": "CS008434",
        "name": "Pomáz",
        "lat": "47.643245",
        "lon": "19.030908",
        "parent": ""
    },
    {
        "id": "CS008436",
        "name": "Szentendre, Papírgyár",
        "lat": "47.648364",
        "lon": "19.069255",
        "parent": ""
    },
    {
        "id": "CS008438",
        "name": "Egyetem",
        "lat": "47.652186",
        "lon": "19.071534",
        "parent": ""
    },
    {
        "id": "CS008458",
        "name": "Tisza István tér",
        "lat": "47.516768",
        "lon": "19.107741",
        "parent": ""
    },
    {
        "id": "CS008459",
        "name": "Uzsoki Utcai Kórház",
        "lat": "47.519756",
        "lon": "19.103593",
        "parent": ""
    },
    {
        "id": "CS008559",
        "name": "Korompai utca",
        "lat": "47.484856",
        "lon": "19.012687",
        "parent": ""
    },
    {
        "id": "CS008587",
        "name": "Gyáli út",
        "lat": "47.456421",
        "lon": "19.110694",
        "parent": ""
    },
    {
        "id": "CS008589",
        "name": "Gyáli út",
        "lat": "47.465410",
        "lon": "19.103688",
        "parent": ""
    },
    {
        "id": "CS008598",
        "name": "Baross utca",
        "lat": "47.459694",
        "lon": "18.958597",
        "parent": ""
    },
    {
        "id": "CS008643",
        "name": "Székesdűlő",
        "lat": "47.611142",
        "lon": "19.104166",
        "parent": ""
    },
    {
        "id": "CS008645",
        "name": "Vízművek",
        "lat": "47.599926",
        "lon": "19.093050",
        "parent": ""
    },
    {
        "id": "CS008647",
        "name": "Áruházi bekötőút",
        "lat": "47.386516",
        "lon": "19.022859",
        "parent": ""
    },
    {
        "id": "CS008649",
        "name": "Székesdűlő, ipartelep",
        "lat": "47.614957",
        "lon": "19.109026",
        "parent": ""
    },
    {
        "id": "CS008651",
        "name": "Auchan Sziget áruház",
        "lat": "47.384278",
        "lon": "19.025886",
        "parent": ""
    },
    {
        "id": "CS008685",
        "name": "Albertfalva kitérő",
        "lat": "47.452583",
        "lon": "19.038670",
        "parent": ""
    },
    {
        "id": "CS008692",
        "name": "Felsőcsatári köz",
        "lat": "47.457338",
        "lon": "19.176947",
        "parent": ""
    },
    {
        "id": "CS008702",
        "name": "Ferencvárosi rendelőintézet",
        "lat": "47.477032",
        "lon": "19.075640",
        "parent": ""
    },
    {
        "id": "CS008708",
        "name": "Vízművek lakótelep",
        "lat": "47.597772",
        "lon": "19.091533",
        "parent": ""
    },
    {
        "id": "CS008737",
        "name": "Dániel út",
        "lat": "47.512872",
        "lon": "18.994858",
        "parent": ""
    },
    {
        "id": "CS008846",
        "name": "Méhecske utca",
        "lat": "47.448006",
        "lon": "18.947883",
        "parent": ""
    },
    {
        "id": "CS008850",
        "name": "Mikszáth Kálmán utca",
        "lat": "47.450982",
        "lon": "19.177059",
        "parent": ""
    },
    {
        "id": "CS008904",
        "name": "Kétújfalu utca",
        "lat": "47.419271",
        "lon": "19.208835",
        "parent": ""
    },
    {
        "id": "CS008911",
        "name": "Homoktövis iskola",
        "lat": "47.597036",
        "lon": "19.116565",
        "parent": ""
    },
    {
        "id": "CS008919",
        "name": "Pongrátz Gergely tér",
        "lat": "47.509383",
        "lon": "19.128861",
        "parent": ""
    },
    {
        "id": "CS008923",
        "name": "Kabai utca",
        "lat": "47.495677",
        "lon": "19.160425",
        "parent": ""
    },
    {
        "id": "CS008940",
        "name": "Békásmegyer",
        "lat": "47.597916",
        "lon": "19.054761",
        "parent": ""
    },
    {
        "id": "CS008948",
        "name": "Kucorgó tér",
        "lat": "47.469148",
        "lon": "19.294970",
        "parent": ""
    },
    {
        "id": "CS008951",
        "name": "Pestszentlőrinc, Béke tér",
        "lat": "47.429375",
        "lon": "19.218082",
        "parent": ""
    },
    {
        "id": "CS008954",
        "name": "Csillag utca",
        "lat": "47.409389",
        "lon": "19.119027",
        "parent": ""
    },
    {
        "id": "CS008955",
        "name": "Gombosszeg köz",
        "lat": "47.412872",
        "lon": "19.118436",
        "parent": ""
    },
    {
        "id": "CS008958",
        "name": "Alsó határút",
        "lat": "47.416268",
        "lon": "19.116293",
        "parent": ""
    },
    {
        "id": "CS008962",
        "name": "Szent István utca",
        "lat": "47.391533",
        "lon": "19.114605",
        "parent": ""
    },
    {
        "id": "CS008965",
        "name": "Szent László utca",
        "lat": "47.420960",
        "lon": "19.126438",
        "parent": ""
    },
    {
        "id": "CS008966",
        "name": "Szentlőrinci úti lakótelep",
        "lat": "47.416924",
        "lon": "19.130967",
        "parent": ""
    },
    {
        "id": "CS008971",
        "name": "Gyula vezér út",
        "lat": "47.409578",
        "lon": "19.003907",
        "parent": ""
    },
    {
        "id": "CS009001",
        "name": "Kistarcsa",
        "lat": "47.545543",
        "lon": "19.259766",
        "parent": ""
    },
    {
        "id": "CS009002",
        "name": "Kerepes",
        "lat": "47.551893",
        "lon": "19.269730",
        "parent": ""
    },
    {
        "id": "CS009006",
        "name": "Szilasligeti elágazás",
        "lat": "47.560483",
        "lon": "19.283406",
        "parent": ""
    },
    {
        "id": "CS009008",
        "name": "Szilasliget, Posta",
        "lat": "47.569716",
        "lon": "19.272303",
        "parent": ""
    },
    {
        "id": "CS009009",
        "name": "Szilasliget, Wesselényi utca",
        "lat": "47.573036",
        "lon": "19.269233",
        "parent": ""
    },
    {
        "id": "CS009012",
        "name": "Szilasliget, Szondi utca",
        "lat": "47.575328",
        "lon": "19.265873",
        "parent": ""
    },
    {
        "id": "CS009014",
        "name": "EGIS-telep (Szentjakab H)",
        "lat": "47.592703",
        "lon": "19.285178",
        "parent": ""
    },
    {
        "id": "CS009019",
        "name": "Gödöllő, Palotakert",
        "lat": "47.598706",
        "lon": "19.355897",
        "parent": ""
    },
    {
        "id": "CS009026",
        "name": "Zichy Jenő utca",
        "lat": "47.505224",
        "lon": "19.057773",
        "parent": ""
    },
    {
        "id": "CS009047",
        "name": "Homoktövis utca",
        "lat": "47.594290",
        "lon": "19.113496",
        "parent": ""
    },
    {
        "id": "CS009065",
        "name": "Solymár, Szarvas",
        "lat": "47.596249",
        "lon": "18.974023",
        "parent": ""
    },
    {
        "id": "CS009094",
        "name": "Petőfi Sándor utca",
        "lat": "47.402441",
        "lon": "18.937344",
        "parent": ""
    },
    {
        "id": "CS009096",
        "name": "Pacsirta utca",
        "lat": "47.404623",
        "lon": "18.933841",
        "parent": ""
    },
    {
        "id": "CS009097",
        "name": "Nóra utca",
        "lat": "47.407323",
        "lon": "18.930756",
        "parent": ""
    },
    {
        "id": "CS009099",
        "name": "Katinka utca",
        "lat": "47.410234",
        "lon": "18.927085",
        "parent": ""
    },
    {
        "id": "CS009101",
        "name": "Tátika utca",
        "lat": "47.412868",
        "lon": "18.930160",
        "parent": ""
    },
    {
        "id": "CS009104",
        "name": "Valéria utca",
        "lat": "47.414075",
        "lon": "18.932635",
        "parent": ""
    },
    {
        "id": "CS009146",
        "name": "Vágóhíd utca",
        "lat": "47.473435",
        "lon": "19.079949",
        "parent": ""
    },
    {
        "id": "CS009154",
        "name": "Atlétikai stadion",
        "lat": "47.572437",
        "lon": "19.114137",
        "parent": ""
    },
    {
        "id": "CS009170",
        "name": "Pomáz, Dózsa György utca",
        "lat": "47.645562",
        "lon": "19.027113",
        "parent": ""
    },
    {
        "id": "CS009193",
        "name": "Kacsóh Pongrác utca",
        "lat": "47.396679",
        "lon": "19.208740",
        "parent": ""
    },
    {
        "id": "CS009195",
        "name": "Gyál, Ady Endre utca",
        "lat": "47.390042",
        "lon": "19.217840",
        "parent": ""
    },
    {
        "id": "CS009200",
        "name": "Mátyás király utca",
        "lat": "47.394788",
        "lon": "19.210457",
        "parent": ""
    },
    {
        "id": "CS009202",
        "name": "Tulipán utca",
        "lat": "47.392305",
        "lon": "19.214344",
        "parent": ""
    },
    {
        "id": "CS009225",
        "name": "Noszlopy utca",
        "lat": "47.471905",
        "lon": "19.148362",
        "parent": ""
    },
    {
        "id": "CS009240",
        "name": "Sasvár utca, korlátozott forg.mh.",
        "lat": "47.518250",
        "lon": "19.180874",
        "parent": ""
    },
    {
        "id": "CS009273",
        "name": "Szentendre",
        "lat": "47.661031",
        "lon": "19.075577",
        "parent": ""
    },
    {
        "id": "CS009289",
        "name": "Sibrik Miklós út",
        "lat": "47.467936",
        "lon": "19.154133",
        "parent": ""
    },
    {
        "id": "CS009292",
        "name": "Szigetszentmiklós, városháza",
        "lat": "47.348281",
        "lon": "19.044822",
        "parent": ""
    },
    {
        "id": "CS009295",
        "name": "Serfőző utca",
        "lat": "47.538711",
        "lon": "19.046164",
        "parent": ""
    },
    {
        "id": "CS009312",
        "name": "MNB",
        "lat": "47.376766",
        "lon": "19.124353",
        "parent": ""
    },
    {
        "id": "CS009338",
        "name": "Orbánhegyi dűlő",
        "lat": "47.386358",
        "lon": "19.110354",
        "parent": ""
    },
    {
        "id": "CS009351",
        "name": "Kőérberek",
        "lat": "47.445786",
        "lon": "18.999222",
        "parent": ""
    },
    {
        "id": "CS009353",
        "name": "Tippan utca",
        "lat": "47.447878",
        "lon": "19.000612",
        "parent": ""
    },
    {
        "id": "CS009369",
        "name": "Csepel, Horgásztanya",
        "lat": "47.388224",
        "lon": "19.103502",
        "parent": ""
    },
    {
        "id": "CS009382",
        "name": "Jávorfa utca",
        "lat": "47.525581",
        "lon": "19.176994",
        "parent": ""
    },
    {
        "id": "CS009383",
        "name": "János utca",
        "lat": "47.523374",
        "lon": "19.172059",
        "parent": ""
    },
    {
        "id": "CS009392",
        "name": "Csillaghegy",
        "lat": "47.586122",
        "lon": "19.045991",
        "parent": ""
    },
    {
        "id": "CS009412",
        "name": "Karolina út",
        "lat": "47.472801",
        "lon": "19.033869",
        "parent": ""
    },
    {
        "id": "CS009415",
        "name": "Sárfű utca",
        "lat": "47.549984",
        "lon": "19.138094",
        "parent": ""
    },
    {
        "id": "CS009420",
        "name": "Honvédkórház",
        "lat": "47.530491",
        "lon": "19.070556",
        "parent": ""
    },
    {
        "id": "CS009422",
        "name": "Ezred utca",
        "lat": "47.606426",
        "lon": "19.097911",
        "parent": ""
    },
    {
        "id": "CS009425",
        "name": "Csonka János tér",
        "lat": "47.470182",
        "lon": "19.044990",
        "parent": ""
    },
    {
        "id": "CS009426",
        "name": "Zugló vasútállomás",
        "lat": "47.511309",
        "lon": "19.098787",
        "parent": ""
    },
    {
        "id": "CS009429",
        "name": "Keserűvíztelep (Bobpálya)",
        "lat": "47.454343",
        "lon": "19.007529",
        "parent": ""
    },
    {
        "id": "CS009431",
        "name": "Régi vám (Kánai út)",
        "lat": "47.446276",
        "lon": "19.004930",
        "parent": ""
    },
    {
        "id": "CS009440",
        "name": "Zichy Péter utca",
        "lat": "47.515868",
        "lon": "18.922459",
        "parent": ""
    },
    {
        "id": "CS009442",
        "name": "Gimnázium",
        "lat": "47.512061",
        "lon": "18.928093",
        "parent": ""
    },
    {
        "id": "CS009445",
        "name": "Tatárka utca",
        "lat": "47.433987",
        "lon": "19.021127",
        "parent": ""
    },
    {
        "id": "CS009447",
        "name": "Mátyás király utca",
        "lat": "47.404349",
        "lon": "18.991002",
        "parent": ""
    },
    {
        "id": "CS009456",
        "name": "Római utca",
        "lat": "47.417552",
        "lon": "19.017954",
        "parent": ""
    },
    {
        "id": "CS009458",
        "name": "Hűség utca",
        "lat": "47.420866",
        "lon": "19.013771",
        "parent": ""
    },
    {
        "id": "CS009460",
        "name": "Komáromi út",
        "lat": "47.424274",
        "lon": "19.010998",
        "parent": ""
    },
    {
        "id": "CS009462",
        "name": "Tanító utca",
        "lat": "47.435302",
        "lon": "19.009254",
        "parent": ""
    },
    {
        "id": "CS009465",
        "name": "Plébánia utca",
        "lat": "47.429708",
        "lon": "19.032270",
        "parent": ""
    },
    {
        "id": "CS009467",
        "name": "Galamb utca",
        "lat": "47.432738",
        "lon": "19.028477",
        "parent": ""
    },
    {
        "id": "CS009469",
        "name": "Alkotmány utca",
        "lat": "47.433408",
        "lon": "19.025925",
        "parent": ""
    },
    {
        "id": "CS009473",
        "name": "Széchenyi utca",
        "lat": "47.418324",
        "lon": "19.032618",
        "parent": ""
    },
    {
        "id": "CS009480",
        "name": "Margó Tivadar utca",
        "lat": "47.433234",
        "lon": "19.177148",
        "parent": ""
    },
    {
        "id": "CS009481",
        "name": "Kerékgyártó utca",
        "lat": "47.521280",
        "lon": "19.106043",
        "parent": ""
    },
    {
        "id": "CS009484",
        "name": "Tura utca",
        "lat": "47.489190",
        "lon": "19.276912",
        "parent": ""
    },
    {
        "id": "CS009485",
        "name": "Rákoscsaba-Újtelep vasútállomás",
        "lat": "47.488159",
        "lon": "19.273451",
        "parent": ""
    },
    {
        "id": "CS009491",
        "name": "Füstifecske utca",
        "lat": "47.478855",
        "lon": "19.237130",
        "parent": ""
    },
    {
        "id": "CS009493",
        "name": "Uszoda",
        "lat": "47.479504",
        "lon": "19.233431",
        "parent": ""
    },
    {
        "id": "CS009494",
        "name": "Újlak utca, lakótelep",
        "lat": "47.482198",
        "lon": "19.233547",
        "parent": ""
    },
    {
        "id": "CS009495",
        "name": "Rákospatak utca",
        "lat": "47.531446",
        "lon": "19.101041",
        "parent": ""
    },
    {
        "id": "CS009501",
        "name": "Körvasút sor",
        "lat": "47.514137",
        "lon": "19.151934",
        "parent": ""
    },
    {
        "id": "CS009508",
        "name": "Orló utca",
        "lat": "47.518202",
        "lon": "19.007453",
        "parent": ""
    },
    {
        "id": "CS009512",
        "name": "Endrődi Sándor utca",
        "lat": "47.521240",
        "lon": "19.012390",
        "parent": ""
    },
    {
        "id": "CS009515",
        "name": "Rákospalota-Újpest vasútállomás",
        "lat": "47.565518",
        "lon": "19.111290",
        "parent": ""
    },
    {
        "id": "CS009522",
        "name": "Sirály utca",
        "lat": "47.490002",
        "lon": "19.018632",
        "parent": ""
    },
    {
        "id": "CS009524",
        "name": "Albertfalva vasútállomás",
        "lat": "47.441822",
        "lon": "19.033260",
        "parent": ""
    },
    {
        "id": "CS009536",
        "name": "Káposztásmegyer, Mogyoródi-patak",
        "lat": "47.598580",
        "lon": "19.121431",
        "parent": ""
    },
    {
        "id": "CS009541",
        "name": "Ady Endre út",
        "lat": "47.436153",
        "lon": "19.035741",
        "parent": ""
    },
    {
        "id": "CS009549",
        "name": "Madárdomb köz",
        "lat": "47.478093",
        "lon": "19.241194",
        "parent": ""
    },
    {
        "id": "CS009557",
        "name": "Vécsey Károly utca",
        "lat": "47.571999",
        "lon": "19.095942",
        "parent": ""
    },
    {
        "id": "CS009573",
        "name": "Bagaria utca",
        "lat": "47.590274",
        "lon": "19.083402",
        "parent": ""
    },
    {
        "id": "CS009574",
        "name": "Ungvári utca",
        "lat": "47.587388",
        "lon": "19.082141",
        "parent": ""
    },
    {
        "id": "CS009578",
        "name": "Savoya Park",
        "lat": "47.436311",
        "lon": "19.040607",
        "parent": ""
    },
    {
        "id": "CS009582",
        "name": "János tér",
        "lat": "47.441761",
        "lon": "19.102713",
        "parent": ""
    },
    {
        "id": "CS009587",
        "name": "Gogol utca",
        "lat": "47.520336",
        "lon": "19.057158",
        "parent": ""
    },
    {
        "id": "CS009589",
        "name": "Budaörs vasútállomás",
        "lat": "47.448208",
        "lon": "18.964856",
        "parent": ""
    },
    {
        "id": "CS009592",
        "name": "Kőbánya-Kispest",
        "lat": "47.462873",
        "lon": "19.148412",
        "parent": ""
    },
    {
        "id": "CS009630",
        "name": "Budakalász, Auchan áruház",
        "lat": "47.611515",
        "lon": "19.062365",
        "parent": ""
    },
    {
        "id": "CS009639",
        "name": "Kelenföld kocsiszín (Csóka kapu)",
        "lat": "47.469824",
        "lon": "19.026355",
        "parent": ""
    },
    {
        "id": "CS009698",
        "name": "Galántai utca",
        "lat": "47.497791",
        "lon": "19.014445",
        "parent": ""
    },
    {
        "id": "CS009702",
        "name": "Magdolna utca",
        "lat": "47.492459",
        "lon": "19.087809",
        "parent": ""
    },
    {
        "id": "CS009718",
        "name": "Vízisport utca",
        "lat": "47.434261",
        "lon": "19.091312",
        "parent": ""
    },
    {
        "id": "CS009719",
        "name": "Csepeli átjáró",
        "lat": "47.436352",
        "lon": "19.092748",
        "parent": ""
    },
    {
        "id": "CS009729",
        "name": "Zsigmond utca",
        "lat": "47.464015",
        "lon": "19.318023",
        "parent": ""
    },
    {
        "id": "CS009763",
        "name": "Zsófialiget",
        "lat": "47.547971",
        "lon": "19.263631",
        "parent": ""
    },
    {
        "id": "CS011320",
        "name": "Búza utca",
        "lat": "47.552664",
        "lon": "19.039986",
        "parent": ""
    },
    {
        "id": "CS011715",
        "name": "509. utca",
        "lat": "47.484887",
        "lon": "19.225621",
        "parent": ""
    },
    {
        "id": "CS011726",
        "name": "Rákoskeresztúr, városközpont",
        "lat": "47.479692",
        "lon": "19.255313",
        "parent": ""
    },
    {
        "id": "CS011762",
        "name": "Újpest-Városkapu",
        "lat": "47.558088",
        "lon": "19.077618",
        "parent": ""
    },
    {
        "id": "CS016729",
        "name": "Naphegy tér",
        "lat": "47.493521",
        "lon": "19.032629",
        "parent": ""
    },
    {
        "id": "CS037747",
        "name": "Lakihegy, Cseresznyés utca",
        "lat": "47.377017",
        "lon": "19.006909",
        "parent": ""
    },
    {
        "id": "CS038717",
        "name": "Deák Ferenc tér",
        "lat": "47.497489",
        "lon": "19.054928",
        "parent": ""
    },
    {
        "id": "CS040526",
        "name": "Hentes utca",
        "lat": "47.462423",
        "lon": "19.084512",
        "parent": ""
    },
    {
        "id": "CS040612",
        "name": "Bányató utca",
        "lat": "47.465882",
        "lon": "19.164002",
        "parent": ""
    },
    {
        "id": "CS041095",
        "name": "Szent Imre tér",
        "lat": "47.431002",
        "lon": "19.069724",
        "parent": ""
    },
    {
        "id": "CS043154",
        "name": "Dél-pesti autóbuszgarázs",
        "lat": "47.426598",
        "lon": "19.161098",
        "parent": ""
    },
    {
        "id": "CS043192",
        "name": "Kisvárda utca",
        "lat": "47.471503",
        "lon": "19.283065",
        "parent": ""
    },
    {
        "id": "CS043554",
        "name": "Enying utca",
        "lat": "47.475259",
        "lon": "19.298072",
        "parent": ""
    },
    {
        "id": "CS043555",
        "name": "Sport tér",
        "lat": "47.476981",
        "lon": "19.295886",
        "parent": ""
    },
    {
        "id": "CS043556",
        "name": "Rés utca",
        "lat": "47.480183",
        "lon": "19.291913",
        "parent": ""
    },
    {
        "id": "CS044034",
        "name": "József Attila utca",
        "lat": "47.338054",
        "lon": "19.038933",
        "parent": ""
    },
    {
        "id": "CS044126",
        "name": "Száva kocsiszín",
        "lat": "47.466546",
        "lon": "19.122927",
        "parent": ""
    },
    {
        "id": "CS044128",
        "name": "Valéria tér",
        "lat": "47.465351",
        "lon": "19.115263",
        "parent": ""
    },
    {
        "id": "CS044129",
        "name": "Napfény utca",
        "lat": "47.458545",
        "lon": "19.114490",
        "parent": ""
    },
    {
        "id": "CS044130",
        "name": "Madzsar József utca \/ Pünkösdfürdő utca",
        "lat": "47.595129",
        "lon": "19.053415",
        "parent": ""
    },
    {
        "id": "CS044135",
        "name": "Íves út",
        "lat": "47.592838",
        "lon": "19.107132",
        "parent": ""
    },
    {
        "id": "CS044178",
        "name": "Szent Gellért-templom",
        "lat": "47.468955",
        "lon": "19.024660",
        "parent": ""
    },
    {
        "id": "CS044382",
        "name": "Budakeszi, lakótelep",
        "lat": "47.503744",
        "lon": "18.921080",
        "parent": ""
    },
    {
        "id": "CS044511",
        "name": "Solymár, PEMÜ",
        "lat": "47.597313",
        "lon": "18.927996",
        "parent": ""
    },
    {
        "id": "CS044557",
        "name": "Újpest, Árpád út hajóállomás",
        "lat": "47.562158",
        "lon": "19.078119",
        "parent": ""
    },
    {
        "id": "CS044572",
        "name": "Dózsa György utca",
        "lat": "47.592767",
        "lon": "18.932032",
        "parent": ""
    },
    {
        "id": "CS044583",
        "name": "Népfürdő utca \/ Árpád híd",
        "lat": "47.536586",
        "lon": "19.059594",
        "parent": ""
    },
    {
        "id": "CS044591",
        "name": "Petőfi tér",
        "lat": "47.493442",
        "lon": "19.049909",
        "parent": ""
    },
    {
        "id": "CS044592",
        "name": "Szent Gellért tér",
        "lat": "47.483199",
        "lon": "19.053335",
        "parent": ""
    },
    {
        "id": "CS044603",
        "name": "Solymár, temető",
        "lat": "47.594986",
        "lon": "18.940570",
        "parent": ""
    },
    {
        "id": "CS044638",
        "name": "Görögkatolikus templom",
        "lat": "47.423629",
        "lon": "19.078011",
        "parent": ""
    },
    {
        "id": "CS048009",
        "name": "Újpalota, Szentmihályi út",
        "lat": "47.541666",
        "lon": "19.151480",
        "parent": ""
    },
    {
        "id": "CS048474",
        "name": "Kén utca(Illatos út)",
        "lat": "47.454892",
        "lon": "19.087650",
        "parent": ""
    },
    {
        "id": "CS048505",
        "name": "Szent István Bazilika",
        "lat": "47.500439",
        "lon": "19.054793",
        "parent": ""
    },
    {
        "id": "CS049171",
        "name": "Zsellér dűlő",
        "lat": "47.389936",
        "lon": "19.119736",
        "parent": ""
    },
    {
        "id": "CS049172",
        "name": "Gyáli-patak",
        "lat": "47.394725",
        "lon": "19.116676",
        "parent": ""
    },
    {
        "id": "CS049177",
        "name": "Kárpát utca",
        "lat": "47.527412",
        "lon": "19.059244",
        "parent": ""
    },
    {
        "id": "CS049185",
        "name": "Szántóföld utca",
        "lat": "47.572457",
        "lon": "19.139162",
        "parent": ""
    },
    {
        "id": "CS049186",
        "name": "Kalotaszeg utca",
        "lat": "47.459024",
        "lon": "19.041012",
        "parent": ""
    },
    {
        "id": "CS049785",
        "name": "Clark Ádám tér",
        "lat": "47.498179",
        "lon": "19.040599",
        "parent": ""
    },
    {
        "id": "CS049892",
        "name": "Május 9. park",
        "lat": "47.550374",
        "lon": "19.051092",
        "parent": ""
    },
    {
        "id": "CS049896",
        "name": "Óbudai-sziget hajóállomás",
        "lat": "47.550280",
        "lon": "19.057179",
        "parent": ""
    },
    {
        "id": "CS049897",
        "name": "Sporttelep",
        "lat": "47.547694",
        "lon": "19.054679",
        "parent": ""
    },
    {
        "id": "CS050176",
        "name": "Pestszentlőrinc, sorompó",
        "lat": "47.422005",
        "lon": "19.238485",
        "parent": ""
    },
    {
        "id": "CS050182",
        "name": "Duna utca",
        "lat": "47.433245",
        "lon": "19.220619",
        "parent": ""
    },
    {
        "id": "CS050186",
        "name": "Vecsés, Market Central Ferihegy",
        "lat": "47.416739",
        "lon": "19.251858",
        "parent": ""
    },
    {
        "id": "CS050279",
        "name": "Lomnici utca",
        "lat": "47.436456",
        "lon": "19.019819",
        "parent": ""
    },
    {
        "id": "CS056162",
        "name": "Mészkő utca",
        "lat": "47.579341",
        "lon": "19.034414",
        "parent": ""
    },
    {
        "id": "CS056164",
        "name": "Csikóvár utca [3]",
        "lat": "47.583055",
        "lon": "19.031432",
        "parent": ""
    },
    {
        "id": "CS056165",
        "name": "Öregbükk utca [4]",
        "lat": "47.581310",
        "lon": "19.029598",
        "parent": ""
    },
    {
        "id": "CS056167",
        "name": "Lepence utca [5]",
        "lat": "47.583652",
        "lon": "19.027543",
        "parent": ""
    },
    {
        "id": "CS056168",
        "name": "Cserszömörce utca [6]",
        "lat": "47.582497",
        "lon": "19.026101",
        "parent": ""
    },
    {
        "id": "CS056171",
        "name": "Muzsla utca [7]",
        "lat": "47.581050",
        "lon": "19.024157",
        "parent": ""
    },
    {
        "id": "CS056173",
        "name": "Mácsonya utca [9]",
        "lat": "47.583773",
        "lon": "19.023562",
        "parent": ""
    },
    {
        "id": "CS056175",
        "name": "Saroglya utca [10]",
        "lat": "47.584950",
        "lon": "19.021148",
        "parent": ""
    },
    {
        "id": "CS056188",
        "name": "Óarany utca [8]",
        "lat": "47.579532",
        "lon": "19.023530",
        "parent": ""
    },
    {
        "id": "CS056215",
        "name": "Kelenföld vasútállomás",
        "lat": "47.464234",
        "lon": "19.019777",
        "parent": ""
    },
    {
        "id": "CS056230",
        "name": "Rákóczi tér",
        "lat": "47.492722",
        "lon": "19.071817",
        "parent": ""
    },
    {
        "id": "CS056232",
        "name": "II. János Pál pápa tér",
        "lat": "47.495300",
        "lon": "19.077244",
        "parent": ""
    },
    {
        "id": "CS056426",
        "name": "Astoria",
        "lat": "47.494633",
        "lon": "19.060297",
        "parent": ""
    },
    {
        "id": "CS061223",
        "name": "Neszmélyi út",
        "lat": "47.460171",
        "lon": "19.015159",
        "parent": ""
    },
    {
        "id": "CS061224",
        "name": "Péterhegyi út \/ Neszmélyi út",
        "lat": "47.458417",
        "lon": "19.019171",
        "parent": ""
    },
    {
        "id": "CS061226",
        "name": "Péterhegyi út (Menyecske utca)",
        "lat": "47.460619",
        "lon": "19.018150",
        "parent": ""
    },
    {
        "id": "CS061232",
        "name": "Pajkos utca",
        "lat": "47.457005",
        "lon": "19.029816",
        "parent": ""
    },
    {
        "id": "CS061234",
        "name": "Antalháza",
        "lat": "47.436474",
        "lon": "19.007112",
        "parent": ""
    },
    {
        "id": "CS061236",
        "name": "Bíbic utca",
        "lat": "47.411999",
        "lon": "19.005135",
        "parent": ""
    },
    {
        "id": "CS061271",
        "name": "Igmándi utca",
        "lat": "47.456966",
        "lon": "19.020024",
        "parent": ""
    },
    {
        "id": "CS061272",
        "name": "Bolygó utca",
        "lat": "47.450938",
        "lon": "19.016311",
        "parent": ""
    },
    {
        "id": "CS061278",
        "name": "Kelenföld vasútállomás",
        "lat": "47.464369",
        "lon": "19.018458",
        "parent": ""
    },
    {
        "id": "CS061286",
        "name": "Szabina út",
        "lat": "47.436871",
        "lon": "19.013813",
        "parent": ""
    },
    {
        "id": "CS061287",
        "name": "Várkert Bazár",
        "lat": "47.493592",
        "lon": "19.043794",
        "parent": ""
    },
    {
        "id": "CS061378",
        "name": "Szőlőskert utca",
        "lat": "47.502204",
        "lon": "18.916607",
        "parent": ""
    },
    {
        "id": "CS062511",
        "name": "Than Károly utca",
        "lat": "47.460995",
        "lon": "19.025250",
        "parent": ""
    },
    {
        "id": "CS062512",
        "name": "Borszéki utca",
        "lat": "47.458531",
        "lon": "19.023654",
        "parent": ""
    },
    {
        "id": "CS062513",
        "name": "Jégmadár utca",
        "lat": "47.430714",
        "lon": "19.005670",
        "parent": ""
    },
    {
        "id": "CS062516",
        "name": "Török utca",
        "lat": "47.412423",
        "lon": "18.989310",
        "parent": ""
    },
    {
        "id": "CS062518",
        "name": "Március 15. tér",
        "lat": "47.491226",
        "lon": "19.051768",
        "parent": ""
    },
    {
        "id": "CS062519",
        "name": "Gazdagréti út",
        "lat": "47.462574",
        "lon": "19.005303",
        "parent": ""
    },
    {
        "id": "CS062604",
        "name": "Nyár utca",
        "lat": "47.435528",
        "lon": "18.918511",
        "parent": ""
    },
    {
        "id": "CS062621",
        "name": "Egyetemváros - A38 hajóállomás",
        "lat": "47.473625",
        "lon": "19.063519",
        "parent": ""
    },
    {
        "id": "CS062622",
        "name": "Magyar tudósok körútja",
        "lat": "47.471619",
        "lon": "19.063856",
        "parent": ""
    },
    {
        "id": "CS062861",
        "name": "Dagály fürdő",
        "lat": "47.537794",
        "lon": "19.062641",
        "parent": ""
    },
    {
        "id": "CS063399",
        "name": "Hulladékhasznosító Mű",
        "lat": "47.583948",
        "lon": "19.130879",
        "parent": ""
    },
    {
        "id": "CS064074",
        "name": "Massányi úti lakópark",
        "lat": "47.360342",
        "lon": "19.028339",
        "parent": ""
    },
    {
        "id": "CS064085",
        "name": "Kölcsey Ferenc utca",
        "lat": "47.355103",
        "lon": "19.035138",
        "parent": ""
    },
    {
        "id": "CS064087",
        "name": "Lehel utca",
        "lat": "47.352877",
        "lon": "19.038640",
        "parent": ""
    },
    {
        "id": "CS064092",
        "name": "Jókai utca",
        "lat": "47.341170",
        "lon": "19.035936",
        "parent": ""
    },
    {
        "id": "CS064093",
        "name": "Akácfa körút",
        "lat": "47.344030",
        "lon": "19.033797",
        "parent": ""
    },
    {
        "id": "CS064103",
        "name": "Tamási Áron utca",
        "lat": "47.345028",
        "lon": "19.028523",
        "parent": ""
    },
    {
        "id": "CS064106",
        "name": "Nap utca (óvoda)",
        "lat": "47.349655",
        "lon": "19.025921",
        "parent": ""
    },
    {
        "id": "CS064107",
        "name": "Ősz utca",
        "lat": "47.352650",
        "lon": "19.025059",
        "parent": ""
    },
    {
        "id": "CS064170",
        "name": "Ady Endre utca",
        "lat": "47.355452",
        "lon": "19.026488",
        "parent": ""
    },
    {
        "id": "CS064181",
        "name": "Miklós tér",
        "lat": "47.347144",
        "lon": "19.023222",
        "parent": ""
    },
    {
        "id": "CS064185",
        "name": "Váci Mihály utca (József Attila-telep H)",
        "lat": "47.338516",
        "lon": "19.035837",
        "parent": ""
    },
    {
        "id": "CS064208",
        "name": "Szépvölgyi köz",
        "lat": "47.541122",
        "lon": "19.001823",
        "parent": ""
    },
    {
        "id": "CS064210",
        "name": "Fenyőgyöngye",
        "lat": "47.540379",
        "lon": "19.006108",
        "parent": ""
    },
    {
        "id": "CS064212",
        "name": "Selyemakác utca",
        "lat": "47.543099",
        "lon": "18.996382",
        "parent": ""
    },
    {
        "id": "CS064240",
        "name": "Leshegy utca",
        "lat": "47.377015",
        "lon": "19.032100",
        "parent": ""
    },
    {
        "id": "CS064241",
        "name": "Leshegy Ipari Park",
        "lat": "47.375627",
        "lon": "19.042412",
        "parent": ""
    },
    {
        "id": "CS064243",
        "name": "Temető utca",
        "lat": "47.355796",
        "lon": "19.046423",
        "parent": ""
    },
    {
        "id": "CS064246",
        "name": "Bányató út",
        "lat": "47.367215",
        "lon": "19.048243",
        "parent": ""
    },
    {
        "id": "CS064319",
        "name": "Wesselényi utca",
        "lat": "47.351586",
        "lon": "19.045357",
        "parent": ""
    },
    {
        "id": "CS066451",
        "name": "Infopark",
        "lat": "47.468919",
        "lon": "19.059591",
        "parent": ""
    },
    {
        "id": "CS066453",
        "name": "Budafoki út \/ Dombóvári út",
        "lat": "47.469496",
        "lon": "19.053585",
        "parent": ""
    },
    {
        "id": "CS066456",
        "name": "Hauszmann Alajos utca \/ Szerémi út",
        "lat": "47.466775",
        "lon": "19.049663",
        "parent": ""
    },
    {
        "id": "CS066458",
        "name": "Hengermalom út \/ Szerémi út",
        "lat": "47.462083",
        "lon": "19.047590",
        "parent": ""
    },
    {
        "id": "CS066712",
        "name": "Szabadság sugárút",
        "lat": "47.482833",
        "lon": "19.273697",
        "parent": ""
    },
    {
        "id": "CS066715",
        "name": "Nyitány utca",
        "lat": "47.480971",
        "lon": "19.275856",
        "parent": ""
    },
    {
        "id": "CS066717",
        "name": "Öntöző utca",
        "lat": "47.478790",
        "lon": "19.278221",
        "parent": ""
    },
    {
        "id": "CS066719",
        "name": "Pestvidéki utca",
        "lat": "47.477010",
        "lon": "19.280250",
        "parent": ""
    },
    {
        "id": "CS066856",
        "name": "Pagony utca",
        "lat": "47.495030",
        "lon": "19.002965",
        "parent": ""
    },
    {
        "id": "CS069092",
        "name": "Bem József tér",
        "lat": "47.511924",
        "lon": "19.039133",
        "parent": ""
    },
    {
        "id": "CS071216",
        "name": "Ady Endre út (Kossuth Lajos utca)",
        "lat": "47.434690",
        "lon": "19.071013",
        "parent": ""
    },
    {
        "id": "CS072046",
        "name": "Muflon utca",
        "lat": "47.570769",
        "lon": "18.931442",
        "parent": ""
    },
    {
        "id": "CS072934",
        "name": "Rudas Gyógyfürdő",
        "lat": "47.489628",
        "lon": "19.047295",
        "parent": ""
    },
    {
        "id": "CS073099",
        "name": "Széll Kálmán tér",
        "lat": "47.507089",
        "lon": "19.024316",
        "parent": ""
    },
    {
        "id": "CS073309",
        "name": "Solymár vasútállomás",
        "lat": "47.595986",
        "lon": "18.950096",
        "parent": ""
    },
    {
        "id": "CS073427",
        "name": "Művelődési Ház",
        "lat": "47.428553",
        "lon": "18.913078",
        "parent": ""
    },
    {
        "id": "CS073473",
        "name": "Munkácsy Mihály utca (hősi emlékmű)",
        "lat": "47.431369",
        "lon": "18.916646",
        "parent": ""
    },
    {
        "id": "CS074021",
        "name": "Kőbányai garázs",
        "lat": "47.490782",
        "lon": "19.114165",
        "parent": ""
    },
    {
        "id": "CS074495",
        "name": "Törökbálint Sportközpont",
        "lat": "47.440283",
        "lon": "18.896045",
        "parent": ""
    },
    {
        "id": "CS074909",
        "name": "Auchan Liget",
        "lat": "47.541341",
        "lon": "19.246780",
        "parent": ""
    },
    {
        "id": "CS075655",
        "name": "Köves út \/ Szentlőrinci út",
        "lat": "47.416173",
        "lon": "19.143227",
        "parent": ""
    },
    {
        "id": "CS076394",
        "name": "Aranyvölgy vasútállomás",
        "lat": "47.574063",
        "lon": "19.017067",
        "parent": ""
    },
    {
        "id": "CS076397",
        "name": "Óbuda vasútállomás (Aranyhegyi út)",
        "lat": "47.570597",
        "lon": "19.028084",
        "parent": ""
    },
    {
        "id": "CS076399",
        "name": "Aranyvölgy utca 14.",
        "lat": "47.571978",
        "lon": "19.022142",
        "parent": ""
    },
    {
        "id": "CS078064",
        "name": "Nyéki Imre Uszoda",
        "lat": "47.450814",
        "lon": "19.037383",
        "parent": ""
    },
    {
        "id": "CS083329",
        "name": "Bartók Béla út 208.",
        "lat": "47.417243",
        "lon": "18.985531",
        "parent": ""
    },
    {
        "id": "CS086012",
        "name": "Reitter Ferenc utca",
        "lat": "47.545825",
        "lon": "19.094634",
        "parent": ""
    },
    {
        "id": "CS087346",
        "name": "Dráva utca",
        "lat": "47.525908",
        "lon": "19.057963",
        "parent": ""
    },
    {
        "id": "CSF00003",
        "name": "Zsolt utca",
        "lat": "47.490544",
        "lon": "19.030400",
        "parent": ""
    },
    {
        "id": "CSF00005",
        "name": "Mészáros utca",
        "lat": "47.488475",
        "lon": "19.031323",
        "parent": ""
    },
    {
        "id": "CSF00006",
        "name": "Sánc utca",
        "lat": "47.489702",
        "lon": "19.035774",
        "parent": ""
    },
    {
        "id": "CSF00011",
        "name": "Szirtes út",
        "lat": "47.487959",
        "lon": "19.036737",
        "parent": ""
    },
    {
        "id": "CSF00012",
        "name": "Búsuló Juhász (Citadella)",
        "lat": "47.485410",
        "lon": "19.040042",
        "parent": ""
    },
    {
        "id": "CSF00017",
        "name": "Királyhágó utca",
        "lat": "47.495245",
        "lon": "19.023487",
        "parent": ""
    },
    {
        "id": "CSF00020",
        "name": "Nagyenyed utca",
        "lat": "47.498182",
        "lon": "19.023935",
        "parent": ""
    },
    {
        "id": "CSF00027",
        "name": "Déli pályaudvar",
        "lat": "47.500461",
        "lon": "19.024243",
        "parent": ""
    },
    {
        "id": "CSF00028",
        "name": "Körmöci utca",
        "lat": "47.504306",
        "lon": "19.024940",
        "parent": ""
    },
    {
        "id": "CSF00030",
        "name": "Mátray utca",
        "lat": "47.505961",
        "lon": "19.028310",
        "parent": ""
    },
    {
        "id": "CSF00034",
        "name": "Fazekas utca",
        "lat": "47.507984",
        "lon": "19.033972",
        "parent": ""
    },
    {
        "id": "CSF00053",
        "name": "Halász utca",
        "lat": "47.502110",
        "lon": "19.039641",
        "parent": ""
    },
    {
        "id": "CSF00062",
        "name": "Batthyány tér",
        "lat": "47.506422",
        "lon": "19.038927",
        "parent": ""
    },
    {
        "id": "CSF00065",
        "name": "Batthyány tér",
        "lat": "47.506143",
        "lon": "19.038927",
        "parent": ""
    },
    {
        "id": "CSF00070",
        "name": "Bécsi kapu tér",
        "lat": "47.504680",
        "lon": "19.030448",
        "parent": ""
    },
    {
        "id": "CSF00072",
        "name": "Szentháromság tér",
        "lat": "47.501361",
        "lon": "19.033801",
        "parent": ""
    },
    {
        "id": "CSF00073",
        "name": "Dísz tér",
        "lat": "47.499171",
        "lon": "19.036071",
        "parent": ""
    },
    {
        "id": "CSF00077",
        "name": "Dózsa György tér",
        "lat": "47.494117",
        "lon": "19.037936",
        "parent": ""
    },
    {
        "id": "CSF00083",
        "name": "Krisztina tér",
        "lat": "47.496843",
        "lon": "19.032781",
        "parent": ""
    },
    {
        "id": "CSF00088",
        "name": "Mikó utca",
        "lat": "47.498683",
        "lon": "19.029528",
        "parent": ""
    },
    {
        "id": "CSF00091",
        "name": "Korlát utca",
        "lat": "47.501824",
        "lon": "19.027370",
        "parent": ""
    },
    {
        "id": "CSF00094",
        "name": "Déli pályaudvar",
        "lat": "47.500375",
        "lon": "19.024802",
        "parent": ""
    },
    {
        "id": "CSF00095",
        "name": "Győri út",
        "lat": "47.495230",
        "lon": "19.025541",
        "parent": ""
    },
    {
        "id": "CSF00097",
        "name": "Ág utca",
        "lat": "47.495564",
        "lon": "19.029429",
        "parent": ""
    },
    {
        "id": "CSF00105",
        "name": "Döbrentei tér",
        "lat": "47.490964",
        "lon": "19.044432",
        "parent": ""
    },
    {
        "id": "CSF00115",
        "name": "Szanatórium utca (Vadaspark)",
        "lat": "47.520397",
        "lon": "18.938830",
        "parent": ""
    },
    {
        "id": "CSF00117",
        "name": "Kökörcsin utca",
        "lat": "47.576561",
        "lon": "18.938603",
        "parent": ""
    },
    {
        "id": "CSF00121",
        "name": "Nyereg út",
        "lat": "47.537457",
        "lon": "19.013841",
        "parent": ""
    },
    {
        "id": "CSF00122",
        "name": "Pál-völgyi cseppkőbarlang",
        "lat": "47.533055",
        "lon": "19.016619",
        "parent": ""
    },
    {
        "id": "CSF00124",
        "name": "Csalit utca",
        "lat": "47.529421",
        "lon": "19.016681",
        "parent": ""
    },
    {
        "id": "CSF00128",
        "name": "Folyondár utca (Szépvölgyi út)",
        "lat": "47.529379",
        "lon": "19.030274",
        "parent": ""
    },
    {
        "id": "CSF00130",
        "name": "Ürömi utca",
        "lat": "47.528111",
        "lon": "19.033375",
        "parent": ""
    },
    {
        "id": "CSF00137",
        "name": "Kolosy tér",
        "lat": "47.527771",
        "lon": "19.037450",
        "parent": ""
    },
    {
        "id": "CSF00140",
        "name": "Szépvölgyi út",
        "lat": "47.527302",
        "lon": "19.040168",
        "parent": ""
    },
    {
        "id": "CSF00143",
        "name": "Margitsziget \/ Margit híd",
        "lat": "47.515118",
        "lon": "19.043619",
        "parent": ""
    },
    {
        "id": "CSF00148",
        "name": "Labanc út",
        "lat": "47.519022",
        "lon": "18.981375",
        "parent": ""
    },
    {
        "id": "CSF00149",
        "name": "Dénes utca",
        "lat": "47.521639",
        "lon": "18.968239",
        "parent": ""
    },
    {
        "id": "CSF00151",
        "name": "Baba utca",
        "lat": "47.524248",
        "lon": "19.013165",
        "parent": ""
    },
    {
        "id": "CSF00153",
        "name": "Garas utca",
        "lat": "47.511415",
        "lon": "19.019519",
        "parent": ""
    },
    {
        "id": "CSF00156",
        "name": "Városmajor",
        "lat": "47.509555",
        "lon": "19.013352",
        "parent": ""
    },
    {
        "id": "CSF00159",
        "name": "Szent János Kórház",
        "lat": "47.509298",
        "lon": "19.009228",
        "parent": ""
    },
    {
        "id": "CSF00162",
        "name": "Nagyajtai utca",
        "lat": "47.513631",
        "lon": "19.002790",
        "parent": ""
    },
    {
        "id": "CSF00166",
        "name": "Budagyöngye",
        "lat": "47.516183",
        "lon": "18.998987",
        "parent": ""
    },
    {
        "id": "CSF00168",
        "name": "Szépilona",
        "lat": "47.517583",
        "lon": "18.994332",
        "parent": ""
    },
    {
        "id": "CSF00172",
        "name": "Kuruclesi út",
        "lat": "47.518321",
        "lon": "18.985045",
        "parent": ""
    },
    {
        "id": "CSF00173",
        "name": "Vízművek",
        "lat": "47.520114",
        "lon": "18.973367",
        "parent": ""
    },
    {
        "id": "CSF00176",
        "name": "Bölcsőde",
        "lat": "47.523677",
        "lon": "18.961835",
        "parent": ""
    },
    {
        "id": "CSF00177",
        "name": "Irén utca",
        "lat": "47.524561",
        "lon": "18.958747",
        "parent": ""
    },
    {
        "id": "CSF00179",
        "name": "Szépjuhászné, Gyermekvasút",
        "lat": "47.527255",
        "lon": "18.954074",
        "parent": ""
    },
    {
        "id": "CSF00182",
        "name": "Laktanya",
        "lat": "47.526738",
        "lon": "18.948311",
        "parent": ""
    },
    {
        "id": "CSF00183",
        "name": "Országos Korányi Intézet",
        "lat": "47.522526",
        "lon": "18.941361",
        "parent": ""
    },
    {
        "id": "CSF00185",
        "name": "Margit híd, budai hídfő",
        "lat": "47.515375",
        "lon": "19.039380",
        "parent": ""
    },
    {
        "id": "CSF00193",
        "name": "Horvát utca",
        "lat": "47.510904",
        "lon": "19.034443",
        "parent": ""
    },
    {
        "id": "CSF00195",
        "name": "Mechwart liget",
        "lat": "47.510897",
        "lon": "19.031623",
        "parent": ""
    },
    {
        "id": "CSF00202",
        "name": "Füge utca",
        "lat": "47.513956",
        "lon": "19.027088",
        "parent": ""
    },
    {
        "id": "CSF00204",
        "name": "Rét utca",
        "lat": "47.514704",
        "lon": "19.024059",
        "parent": ""
    },
    {
        "id": "CSF00206",
        "name": "Ady Endre utca",
        "lat": "47.516430",
        "lon": "19.024423",
        "parent": ""
    },
    {
        "id": "CSF00207",
        "name": "Tapolcsányi utca",
        "lat": "47.517432",
        "lon": "19.021018",
        "parent": ""
    },
    {
        "id": "CSF00209",
        "name": "Eszter utca",
        "lat": "47.520082",
        "lon": "19.021878",
        "parent": ""
    },
    {
        "id": "CSF00213",
        "name": "Pusztaszeri körönd",
        "lat": "47.522963",
        "lon": "19.017568",
        "parent": ""
    },
    {
        "id": "CSF00217",
        "name": "Vend utca",
        "lat": "47.522551",
        "lon": "19.020595",
        "parent": ""
    },
    {
        "id": "CSF00221",
        "name": "Vérhalom tér",
        "lat": "47.520761",
        "lon": "19.024939",
        "parent": ""
    },
    {
        "id": "CSF00231",
        "name": "Zivatar utca",
        "lat": "47.515662",
        "lon": "19.031420",
        "parent": ""
    },
    {
        "id": "CSF00234",
        "name": "Margit híd, budai hídfő",
        "lat": "47.514998",
        "lon": "19.037912",
        "parent": ""
    },
    {
        "id": "CSF00239",
        "name": "Szent Lukács Gyógyfürdő",
        "lat": "47.517035",
        "lon": "19.036452",
        "parent": ""
    },
    {
        "id": "CSF00241",
        "name": "Komjádi Béla utca",
        "lat": "47.520473",
        "lon": "19.036683",
        "parent": ""
    },
    {
        "id": "CSF00245",
        "name": "Zsigmond tér",
        "lat": "47.524321",
        "lon": "19.037320",
        "parent": ""
    },
    {
        "id": "CSF00247",
        "name": "Császár-Komjádi uszoda",
        "lat": "47.520553",
        "lon": "19.038145",
        "parent": ""
    },
    {
        "id": "CSF00250",
        "name": "Felhévízi utca",
        "lat": "47.526855",
        "lon": "19.030887",
        "parent": ""
    },
    {
        "id": "CSF00251",
        "name": "Pusztaszeri út 25.",
        "lat": "47.527675",
        "lon": "19.028449",
        "parent": ""
    },
    {
        "id": "CSF00253",
        "name": "Alsó Zöldmáli út",
        "lat": "47.528290",
        "lon": "19.027240",
        "parent": ""
    },
    {
        "id": "CSF00255",
        "name": "Szemlő-hegyi-barlang",
        "lat": "47.528766",
        "lon": "19.024417",
        "parent": ""
    },
    {
        "id": "CSF00257",
        "name": "Zöldmáli lejtő",
        "lat": "47.528627",
        "lon": "19.021814",
        "parent": ""
    },
    {
        "id": "CSF00259",
        "name": "Zöldkert út",
        "lat": "47.529501",
        "lon": "19.011084",
        "parent": ""
    },
    {
        "id": "CSF00261",
        "name": "Pitypang utca",
        "lat": "47.529922",
        "lon": "19.008925",
        "parent": ""
    },
    {
        "id": "CSF00265",
        "name": "Verecke lépcső",
        "lat": "47.529081",
        "lon": "19.003562",
        "parent": ""
    },
    {
        "id": "CSF00267",
        "name": "Tömörkény utca",
        "lat": "47.527332",
        "lon": "19.007658",
        "parent": ""
    },
    {
        "id": "CSF00270",
        "name": "Móricz Zsigmond Gimnázium",
        "lat": "47.525498",
        "lon": "19.009619",
        "parent": ""
    },
    {
        "id": "CSF00271",
        "name": "Vöröstorony lépcső",
        "lat": "47.531096",
        "lon": "18.997722",
        "parent": ""
    },
    {
        "id": "CSF00277",
        "name": "Pasaréti tér",
        "lat": "47.523609",
        "lon": "18.993483",
        "parent": ""
    },
    {
        "id": "CSF00280",
        "name": "Harangvirág utca",
        "lat": "47.521612",
        "lon": "18.997625",
        "parent": ""
    },
    {
        "id": "CSF00283",
        "name": "Virág árok",
        "lat": "47.519378",
        "lon": "19.000687",
        "parent": ""
    },
    {
        "id": "CSF00285",
        "name": "Pasaréti út",
        "lat": "47.516381",
        "lon": "19.004079",
        "parent": ""
    },
    {
        "id": "CSF00287",
        "name": "Júlia utca",
        "lat": "47.514487",
        "lon": "19.006839",
        "parent": ""
    },
    {
        "id": "CSF00288",
        "name": "Vasas sportpálya",
        "lat": "47.511807",
        "lon": "19.008533",
        "parent": ""
    },
    {
        "id": "CSF00290",
        "name": "Fenyves utca",
        "lat": "47.523291",
        "lon": "19.002363",
        "parent": ""
    },
    {
        "id": "CSF00304",
        "name": "Ezredes utca",
        "lat": "47.510255",
        "lon": "19.021419",
        "parent": ""
    },
    {
        "id": "CSF00308",
        "name": "Széna tér",
        "lat": "47.508229",
        "lon": "19.027642",
        "parent": ""
    },
    {
        "id": "CSF00310",
        "name": "Kelemen László utca",
        "lat": "47.522041",
        "lon": "18.990316",
        "parent": ""
    },
    {
        "id": "CSF00315",
        "name": "Zuhatag sor",
        "lat": "47.526112",
        "lon": "18.985908",
        "parent": ""
    },
    {
        "id": "CSF00316",
        "name": "Nagyhíd",
        "lat": "47.528400",
        "lon": "18.983774",
        "parent": ""
    },
    {
        "id": "CSF00319",
        "name": "Vadaskerti utca",
        "lat": "47.531828",
        "lon": "18.980890",
        "parent": ""
    },
    {
        "id": "CSF00324",
        "name": "Bölöni György utca",
        "lat": "47.525806",
        "lon": "18.984314",
        "parent": ""
    },
    {
        "id": "CSF00326",
        "name": "Szerb Antal utca",
        "lat": "47.528218",
        "lon": "18.981197",
        "parent": ""
    },
    {
        "id": "CSF00328",
        "name": "Lipótmezei út",
        "lat": "47.530691",
        "lon": "18.978511",
        "parent": ""
    },
    {
        "id": "CSF00329",
        "name": "Nyéki út",
        "lat": "47.534672",
        "lon": "18.973957",
        "parent": ""
    },
    {
        "id": "CSF00331",
        "name": "Csibor utca",
        "lat": "47.536428",
        "lon": "18.969863",
        "parent": ""
    },
    {
        "id": "CSF00339",
        "name": "Bátori László utca",
        "lat": "47.544620",
        "lon": "18.963485",
        "parent": ""
    },
    {
        "id": "CSF00345",
        "name": "Heinrich István utca",
        "lat": "47.539321",
        "lon": "18.970835",
        "parent": ""
    },
    {
        "id": "CSF00347",
        "name": "Völgy utca",
        "lat": "47.536603",
        "lon": "18.975502",
        "parent": ""
    },
    {
        "id": "CSF00351",
        "name": "Adyliget",
        "lat": "47.547111",
        "lon": "18.938515",
        "parent": ""
    },
    {
        "id": "CSF00354",
        "name": "Villám utca",
        "lat": "47.545136",
        "lon": "18.952601",
        "parent": ""
    },
    {
        "id": "CSF00357",
        "name": "Bükkfa utca",
        "lat": "47.546491",
        "lon": "18.960231",
        "parent": ""
    },
    {
        "id": "CSF00358",
        "name": "Hunyadi János utca",
        "lat": "47.548329",
        "lon": "18.964671",
        "parent": ""
    },
    {
        "id": "CSF00360",
        "name": "Kossuth Lajos utca",
        "lat": "47.552111",
        "lon": "18.964194",
        "parent": ""
    },
    {
        "id": "CSF00363",
        "name": "Kerényi Frigyes utca",
        "lat": "47.553072",
        "lon": "18.949262",
        "parent": ""
    },
    {
        "id": "CSF00365",
        "name": "Ábránd utca",
        "lat": "47.551454",
        "lon": "18.947122",
        "parent": ""
    },
    {
        "id": "CSF00368",
        "name": "Széchenyi utca",
        "lat": "47.547624",
        "lon": "18.954569",
        "parent": ""
    },
    {
        "id": "CSF00371",
        "name": "Turul utca",
        "lat": "47.548653",
        "lon": "18.950568",
        "parent": ""
    },
    {
        "id": "CSF00372",
        "name": "Gondozási Központ",
        "lat": "47.514210",
        "lon": "19.015643",
        "parent": ""
    },
    {
        "id": "CSF00375",
        "name": "Arany János utca",
        "lat": "47.554795",
        "lon": "18.945993",
        "parent": ""
    },
    {
        "id": "CSF00376",
        "name": "Szirom utca",
        "lat": "47.557821",
        "lon": "18.940520",
        "parent": ""
    },
    {
        "id": "CSF00379",
        "name": "Kerekhegyi utca",
        "lat": "47.560116",
        "lon": "18.941963",
        "parent": ""
    },
    {
        "id": "CSF00380",
        "name": "Máriaremetei kegytemplom",
        "lat": "47.562494",
        "lon": "18.946739",
        "parent": ""
    },
    {
        "id": "CSF00383",
        "name": "Köztársaság utca",
        "lat": "47.566265",
        "lon": "18.942642",
        "parent": ""
    },
    {
        "id": "CSF00385",
        "name": "Honfoglalás utca",
        "lat": "47.568812",
        "lon": "18.940271",
        "parent": ""
    },
    {
        "id": "CSF00387",
        "name": "Budaliget, Géza fejedelem útja",
        "lat": "47.567656",
        "lon": "18.936273",
        "parent": ""
    },
    {
        "id": "CSF00389",
        "name": "Csatlós utca",
        "lat": "47.558534",
        "lon": "18.948709",
        "parent": ""
    },
    {
        "id": "CSF00393",
        "name": "Bölény utca",
        "lat": "47.565160",
        "lon": "18.950192",
        "parent": ""
    },
    {
        "id": "CSF00395",
        "name": "Solymári elágazás",
        "lat": "47.566819",
        "lon": "18.955106",
        "parent": ""
    },
    {
        "id": "CSF00396",
        "name": "Szarvashegy utca",
        "lat": "47.569288",
        "lon": "18.948623",
        "parent": ""
    },
    {
        "id": "CSF00398",
        "name": "Örökzöld utca",
        "lat": "47.572117",
        "lon": "18.944564",
        "parent": ""
    },
    {
        "id": "CSF00401",
        "name": "Templom utca (Kultúrkúria)",
        "lat": "47.564606",
        "lon": "18.959908",
        "parent": ""
    },
    {
        "id": "CSF00403",
        "name": "Községház utca",
        "lat": "47.562711",
        "lon": "18.963000",
        "parent": ""
    },
    {
        "id": "CSF00405",
        "name": "Mikszáth Kálmán utca",
        "lat": "47.559478",
        "lon": "18.965384",
        "parent": ""
    },
    {
        "id": "CSF00407",
        "name": "Kölcsey utca",
        "lat": "47.555504",
        "lon": "18.965916",
        "parent": ""
    },
    {
        "id": "CSF00423",
        "name": "Vöröstorony utca",
        "lat": "47.528520",
        "lon": "18.999928",
        "parent": ""
    },
    {
        "id": "CSF00427",
        "name": "Nyúl utca",
        "lat": "47.508799",
        "lon": "19.017958",
        "parent": ""
    },
    {
        "id": "CSF00429",
        "name": "Akadémia",
        "lat": "47.519289",
        "lon": "18.993883",
        "parent": ""
    },
    {
        "id": "CSF00433",
        "name": "Tücsök utca",
        "lat": "47.585473",
        "lon": "18.997510",
        "parent": ""
    },
    {
        "id": "CSF00438",
        "name": "Gulácsy Lajos utca",
        "lat": "47.602588",
        "lon": "19.048122",
        "parent": ""
    },
    {
        "id": "CSF00441",
        "name": "Szőlőkert utca",
        "lat": "47.555110",
        "lon": "19.040842",
        "parent": ""
    },
    {
        "id": "CSF00444",
        "name": "Bojtár utca 49.",
        "lat": "47.559485",
        "lon": "19.039047",
        "parent": ""
    },
    {
        "id": "CSF00445",
        "name": "Templom utca",
        "lat": "47.600218",
        "lon": "19.046487",
        "parent": ""
    },
    {
        "id": "CSF00447",
        "name": "Hősök tere",
        "lat": "47.597913",
        "lon": "19.044967",
        "parent": ""
    },
    {
        "id": "CSF00449",
        "name": "Tamás utca",
        "lat": "47.599493",
        "lon": "19.041301",
        "parent": ""
    },
    {
        "id": "CSF00454",
        "name": "Zemplén Győző utca",
        "lat": "47.595770",
        "lon": "19.045423",
        "parent": ""
    },
    {
        "id": "CSF00457",
        "name": "Nád utca",
        "lat": "47.594052",
        "lon": "19.048781",
        "parent": ""
    },
    {
        "id": "CSF00462",
        "name": "Szolgáltatóház",
        "lat": "47.601235",
        "lon": "19.058020",
        "parent": ""
    },
    {
        "id": "CSF00464",
        "name": "Hímző utca",
        "lat": "47.597124",
        "lon": "19.059120",
        "parent": ""
    },
    {
        "id": "CSF00467",
        "name": "Medgyessy Ferenc utca",
        "lat": "47.595015",
        "lon": "19.057484",
        "parent": ""
    },
    {
        "id": "CSF00471",
        "name": "Békásmegyer",
        "lat": "47.598090",
        "lon": "19.054599",
        "parent": ""
    },
    {
        "id": "CSF00481",
        "name": "Csillaghegy",
        "lat": "47.586110",
        "lon": "19.045005",
        "parent": ""
    },
    {
        "id": "CSF00483",
        "name": "Aquincum",
        "lat": "47.567254",
        "lon": "19.048727",
        "parent": ""
    },
    {
        "id": "CSF00487",
        "name": "Rómaifürdő",
        "lat": "47.575685",
        "lon": "19.048568",
        "parent": ""
    },
    {
        "id": "CSF00492",
        "name": "Czetz János köz",
        "lat": "47.578804",
        "lon": "19.049873",
        "parent": ""
    },
    {
        "id": "CSF00494",
        "name": "Attila utca",
        "lat": "47.579512",
        "lon": "19.052829",
        "parent": ""
    },
    {
        "id": "CSF00496",
        "name": "Huba utca",
        "lat": "47.581499",
        "lon": "19.054510",
        "parent": ""
    },
    {
        "id": "CSF00497",
        "name": "Hunyadi utca",
        "lat": "47.584877",
        "lon": "19.056000",
        "parent": ""
    },
    {
        "id": "CSF00500",
        "name": "Dósa utca",
        "lat": "47.575730",
        "lon": "19.057141",
        "parent": ""
    },
    {
        "id": "CSF00506",
        "name": "Záhony utca",
        "lat": "47.561537",
        "lon": "19.047835",
        "parent": ""
    },
    {
        "id": "CSF00508",
        "name": "Kaszásdűlő",
        "lat": "47.556436",
        "lon": "19.045536",
        "parent": ""
    },
    {
        "id": "CSF00511",
        "name": "Kaszásdűlő",
        "lat": "47.556773",
        "lon": "19.045253",
        "parent": ""
    },
    {
        "id": "CSF00513",
        "name": "Kaszásdűlő utca",
        "lat": "47.557965",
        "lon": "19.041871",
        "parent": ""
    },
    {
        "id": "CSF00516",
        "name": "Kunigunda útja",
        "lat": "47.560141",
        "lon": "19.034693",
        "parent": ""
    },
    {
        "id": "CSF00519",
        "name": "Orbán Balázs út",
        "lat": "47.556137",
        "lon": "19.026618",
        "parent": ""
    },
    {
        "id": "CSF00520",
        "name": "Bojtár utca (Bécsi út)",
        "lat": "47.559946",
        "lon": "19.025317",
        "parent": ""
    },
    {
        "id": "CSF00522",
        "name": "Óbudai temető",
        "lat": "47.565541",
        "lon": "19.022680",
        "parent": ""
    },
    {
        "id": "CSF00531",
        "name": "Ürömhegyi út",
        "lat": "47.577653",
        "lon": "19.010325",
        "parent": ""
    },
    {
        "id": "CSF00533",
        "name": "Üröm vasúti megállóhely",
        "lat": "47.581603",
        "lon": "19.002020",
        "parent": ""
    },
    {
        "id": "CSF00536",
        "name": "Királyhelmec utca",
        "lat": "47.553263",
        "lon": "19.022154",
        "parent": ""
    },
    {
        "id": "CSF00537",
        "name": "Judit utca",
        "lat": "47.556181",
        "lon": "19.018120",
        "parent": ""
    },
    {
        "id": "CSF00539",
        "name": "Laborc utca",
        "lat": "47.557799",
        "lon": "19.015468",
        "parent": ""
    },
    {
        "id": "CSF00542",
        "name": "Jablonka út 58.",
        "lat": "47.559030",
        "lon": "19.013023",
        "parent": ""
    },
    {
        "id": "CSF00543",
        "name": "Jablonka út 74.",
        "lat": "47.560550",
        "lon": "19.010916",
        "parent": ""
    },
    {
        "id": "CSF00547",
        "name": "Áldomás utca",
        "lat": "47.562093",
        "lon": "19.035585",
        "parent": ""
    },
    {
        "id": "CSF00549",
        "name": "Kubik utca",
        "lat": "47.561988",
        "lon": "19.023764",
        "parent": ""
    },
    {
        "id": "CSF00552",
        "name": "Hedvig utca",
        "lat": "47.556089",
        "lon": "19.011187",
        "parent": ""
    },
    {
        "id": "CSF00555",
        "name": "Viharhegyi út",
        "lat": "47.552884",
        "lon": "19.014395",
        "parent": ""
    },
    {
        "id": "CSF00556",
        "name": "Körtvélyes utca",
        "lat": "47.553278",
        "lon": "19.017359",
        "parent": ""
    },
    {
        "id": "CSF00559",
        "name": "Iskola",
        "lat": "47.550284",
        "lon": "19.016186",
        "parent": ""
    },
    {
        "id": "CSF00561",
        "name": "Királylaki út",
        "lat": "47.548934",
        "lon": "19.014983",
        "parent": ""
    },
    {
        "id": "CSF00564",
        "name": "Táborhegyi út",
        "lat": "47.549909",
        "lon": "19.026175",
        "parent": ""
    },
    {
        "id": "CSF00571",
        "name": "Bécsi út \/ Vörösvári út",
        "lat": "47.548568",
        "lon": "19.029061",
        "parent": ""
    },
    {
        "id": "CSF00579",
        "name": "Filatorigát",
        "lat": "47.551903",
        "lon": "19.046243",
        "parent": ""
    },
    {
        "id": "CSF00580",
        "name": "Raktár utca",
        "lat": "47.545012",
        "lon": "19.042525",
        "parent": ""
    },
    {
        "id": "CSF00584",
        "name": "Óbudai rendelőintézet",
        "lat": "47.545689",
        "lon": "19.033656",
        "parent": ""
    },
    {
        "id": "CSF00591",
        "name": "Váradi utca",
        "lat": "47.543473",
        "lon": "19.030295",
        "parent": ""
    },
    {
        "id": "CSF00594",
        "name": "Szent Margit Kórház",
        "lat": "47.540336",
        "lon": "19.030972",
        "parent": ""
    },
    {
        "id": "CSF00598",
        "name": "Katinyi mártírok parkja",
        "lat": "47.532475",
        "lon": "19.036602",
        "parent": ""
    },
    {
        "id": "CSF00604",
        "name": "Tímár utca",
        "lat": "47.534756",
        "lon": "19.039825",
        "parent": ""
    },
    {
        "id": "CSF00607",
        "name": "Kiscelli utca",
        "lat": "47.539007",
        "lon": "19.040442",
        "parent": ""
    },
    {
        "id": "CSF00611",
        "name": "Flórián tér",
        "lat": "47.541569",
        "lon": "19.040754",
        "parent": ""
    },
    {
        "id": "CSF00617",
        "name": "ATI",
        "lat": "47.570037",
        "lon": "19.018657",
        "parent": ""
    },
    {
        "id": "CSF00621",
        "name": "Szentlélek tér",
        "lat": "47.539767",
        "lon": "19.046119",
        "parent": ""
    },
    {
        "id": "CSF00625",
        "name": "Szentlélek tér",
        "lat": "47.539636",
        "lon": "19.047161",
        "parent": ""
    },
    {
        "id": "CSF00630",
        "name": "Bóbita utca",
        "lat": "47.572406",
        "lon": "19.016629",
        "parent": ""
    },
    {
        "id": "CSF00632",
        "name": "Tímár utca",
        "lat": "47.533963",
        "lon": "19.044643",
        "parent": ""
    },
    {
        "id": "CSF00635",
        "name": "Szélvész utca",
        "lat": "47.531396",
        "lon": "19.020574",
        "parent": ""
    },
    {
        "id": "CSF00637",
        "name": "Madzsar József utca \/ Hadrianus utca",
        "lat": "47.603558",
        "lon": "19.059693",
        "parent": ""
    },
    {
        "id": "CSF00638",
        "name": "Hadrianus utca",
        "lat": "47.603995",
        "lon": "19.063157",
        "parent": ""
    },
    {
        "id": "CSF00641",
        "name": "Békásmegyer, Újmegyeri tér",
        "lat": "47.602818",
        "lon": "19.066204",
        "parent": ""
    },
    {
        "id": "CSF00646",
        "name": "Bálint György utca",
        "lat": "47.599660",
        "lon": "19.065058",
        "parent": ""
    },
    {
        "id": "CSF00649",
        "name": "Hatvany Lajos utca \/ Juhász Gyula utca",
        "lat": "47.597015",
        "lon": "19.062922",
        "parent": ""
    },
    {
        "id": "CSF00653",
        "name": "Boglár utca",
        "lat": "47.594816",
        "lon": "19.060761",
        "parent": ""
    },
    {
        "id": "CSF00654",
        "name": "Pünkösdfürdő",
        "lat": "47.594410",
        "lon": "19.066099",
        "parent": ""
    },
    {
        "id": "CSF00657",
        "name": "Sinkovits Imre utca",
        "lat": "47.589791",
        "lon": "19.065560",
        "parent": ""
    },
    {
        "id": "CSF00659",
        "name": "Mátyás király út",
        "lat": "47.584966",
        "lon": "19.064986",
        "parent": ""
    },
    {
        "id": "CSF00660",
        "name": "Szent János utca",
        "lat": "47.579403",
        "lon": "19.063941",
        "parent": ""
    },
    {
        "id": "CSF00662",
        "name": "Nimród utca",
        "lat": "47.575621",
        "lon": "19.062843",
        "parent": ""
    },
    {
        "id": "CSF00667",
        "name": "Aquincum",
        "lat": "47.567127",
        "lon": "19.049319",
        "parent": ""
    },
    {
        "id": "CSF00671",
        "name": "Csillaghegyi út \/ Bojtár utca",
        "lat": "47.560730",
        "lon": "19.030502",
        "parent": ""
    },
    {
        "id": "CSF00672",
        "name": "Zúzmara utca",
        "lat": "47.552004",
        "lon": "19.023902",
        "parent": ""
    },
    {
        "id": "CSF00676",
        "name": "Szamos utca",
        "lat": "47.582493",
        "lon": "19.064680",
        "parent": ""
    },
    {
        "id": "CSF00682",
        "name": "Bercsényi utca",
        "lat": "47.585471",
        "lon": "19.051706",
        "parent": ""
    },
    {
        "id": "CSF00686",
        "name": "Selmeci utca",
        "lat": "47.535918",
        "lon": "19.033523",
        "parent": ""
    },
    {
        "id": "CSF00692",
        "name": "Madridi utca",
        "lat": "47.546578",
        "lon": "19.097533",
        "parent": ""
    },
    {
        "id": "CSF00693",
        "name": "Angyalföld kocsiszín (Pozsonyi kapu)",
        "lat": "47.551086",
        "lon": "19.091721",
        "parent": ""
    },
    {
        "id": "CSF00698",
        "name": "Fóti út",
        "lat": "47.582901",
        "lon": "19.081960",
        "parent": ""
    },
    {
        "id": "CSF00701",
        "name": "Tímár utca",
        "lat": "47.572352",
        "lon": "19.080879",
        "parent": ""
    },
    {
        "id": "CSF00703",
        "name": "Zsilip utca",
        "lat": "47.568370",
        "lon": "19.080244",
        "parent": ""
    },
    {
        "id": "CSF00704",
        "name": "Károlyi István utca",
        "lat": "47.565271",
        "lon": "19.079224",
        "parent": ""
    },
    {
        "id": "CSF00709",
        "name": "Megyeri út \/ Fóti út",
        "lat": "47.580517",
        "lon": "19.089079",
        "parent": ""
    },
    {
        "id": "CSF00718",
        "name": "Megyer, Szondi utca",
        "lat": "47.585933",
        "lon": "19.094627",
        "parent": ""
    },
    {
        "id": "CSF00725",
        "name": "Káposztásmegyer, Megyeri út",
        "lat": "47.593271",
        "lon": "19.120274",
        "parent": ""
    },
    {
        "id": "CSF00726",
        "name": "Szíjgyártó utca",
        "lat": "47.589041",
        "lon": "19.114514",
        "parent": ""
    },
    {
        "id": "CSF00729",
        "name": "Homoktövis utca",
        "lat": "47.589732",
        "lon": "19.117832",
        "parent": ""
    },
    {
        "id": "CSF00730",
        "name": "Gimnázium",
        "lat": "47.582713",
        "lon": "19.106057",
        "parent": ""
    },
    {
        "id": "CSF00732",
        "name": "Művelődési Központ",
        "lat": "47.579749",
        "lon": "19.109165",
        "parent": ""
    },
    {
        "id": "CSF00734",
        "name": "Járműtelep utca",
        "lat": "47.582383",
        "lon": "19.116835",
        "parent": ""
    },
    {
        "id": "CSF00739",
        "name": "Hajló utca",
        "lat": "47.578711",
        "lon": "19.112500",
        "parent": ""
    },
    {
        "id": "CSF00745",
        "name": "Óceán-árok utca",
        "lat": "47.578056",
        "lon": "19.115925",
        "parent": ""
    },
    {
        "id": "CSF00748",
        "name": "Erdősor út",
        "lat": "47.577893",
        "lon": "19.106348",
        "parent": ""
    },
    {
        "id": "CSF00751",
        "name": "Iglói utca",
        "lat": "47.573176",
        "lon": "19.103060",
        "parent": ""
    },
    {
        "id": "CSF00753",
        "name": "Irányi Dániel utca \/ Baross utca",
        "lat": "47.576456",
        "lon": "19.092149",
        "parent": ""
    },
    {
        "id": "CSF00758",
        "name": "Nádor utca",
        "lat": "47.574770",
        "lon": "19.098195",
        "parent": ""
    },
    {
        "id": "CSF00767",
        "name": "Szusza Ferenc Stadion",
        "lat": "47.575914",
        "lon": "19.083806",
        "parent": ""
    },
    {
        "id": "CSF00774",
        "name": "Vécsey Károly utca",
        "lat": "47.569769",
        "lon": "19.099447",
        "parent": ""
    },
    {
        "id": "CSF00778",
        "name": "Türr István utca \/ Nádor utca",
        "lat": "47.569545",
        "lon": "19.093142",
        "parent": ""
    },
    {
        "id": "CSF00780",
        "name": "Szent László tér",
        "lat": "47.567619",
        "lon": "19.097499",
        "parent": ""
    },
    {
        "id": "CSF00783",
        "name": "Illek Vince utca",
        "lat": "47.565694",
        "lon": "19.088390",
        "parent": ""
    },
    {
        "id": "CSF00784",
        "name": "Csokonai utca",
        "lat": "47.564985",
        "lon": "19.090654",
        "parent": ""
    },
    {
        "id": "CSF00786",
        "name": "Kiss Ernő utca",
        "lat": "47.564931",
        "lon": "19.093738",
        "parent": ""
    },
    {
        "id": "CSF00789",
        "name": "Újpesti rendelőintézet",
        "lat": "47.565384",
        "lon": "19.100109",
        "parent": ""
    },
    {
        "id": "CSF00796",
        "name": "Szent István tér (Újpesti piac)",
        "lat": "47.563022",
        "lon": "19.089912",
        "parent": ""
    },
    {
        "id": "CSF00810",
        "name": "Újpest-Városkapu",
        "lat": "47.560311",
        "lon": "19.082898",
        "parent": ""
    },
    {
        "id": "CSF00821",
        "name": "Angyalföld kocsiszín",
        "lat": "47.552962",
        "lon": "19.092296",
        "parent": ""
    },
    {
        "id": "CSF00826",
        "name": "Bőröndös utca",
        "lat": "47.585367",
        "lon": "19.117204",
        "parent": ""
    },
    {
        "id": "CSF00828",
        "name": "Újpesti Erőmű",
        "lat": "47.555110",
        "lon": "19.100320",
        "parent": ""
    },
    {
        "id": "CSF00833",
        "name": "Árpád üzletház",
        "lat": "47.560688",
        "lon": "19.098934",
        "parent": ""
    },
    {
        "id": "CSF00837",
        "name": "Víztorony",
        "lat": "47.562205",
        "lon": "19.106746",
        "parent": ""
    },
    {
        "id": "CSF00848",
        "name": "Mildenberger utca",
        "lat": "47.572195",
        "lon": "19.088102",
        "parent": ""
    },
    {
        "id": "CSF00851",
        "name": "Attila utca",
        "lat": "47.564032",
        "lon": "19.082310",
        "parent": ""
    },
    {
        "id": "CSF00855",
        "name": "Erzsébet utca",
        "lat": "47.559843",
        "lon": "19.094530",
        "parent": ""
    },
    {
        "id": "CSF00859",
        "name": "Káposztásmegyer, Szilas-patak",
        "lat": "47.577557",
        "lon": "19.114815",
        "parent": ""
    },
    {
        "id": "CSF00861",
        "name": "Tél utca \/ Pozsonyi utca",
        "lat": "47.555999",
        "lon": "19.089407",
        "parent": ""
    },
    {
        "id": "CSF00863",
        "name": "Brüsszeli utca",
        "lat": "47.549147",
        "lon": "19.098553",
        "parent": ""
    },
    {
        "id": "CSF00867",
        "name": "Béla utca",
        "lat": "47.580546",
        "lon": "19.081548",
        "parent": ""
    },
    {
        "id": "CSF00869",
        "name": "Tungsram",
        "lat": "47.576414",
        "lon": "19.081234",
        "parent": ""
    },
    {
        "id": "CSF00871",
        "name": "Dunakeszi utca",
        "lat": "47.585118",
        "lon": "19.108473",
        "parent": ""
    },
    {
        "id": "CSF00873",
        "name": "Zombori utca",
        "lat": "47.571956",
        "lon": "19.106166",
        "parent": ""
    },
    {
        "id": "CSF00876",
        "name": "Deák Ferenc utca \/ Rózsa utca",
        "lat": "47.563735",
        "lon": "19.099856",
        "parent": ""
    },
    {
        "id": "CSF00878",
        "name": "Nap utca",
        "lat": "47.555284",
        "lon": "19.094980",
        "parent": ""
    },
    {
        "id": "CSF00881",
        "name": "Szülőotthon",
        "lat": "47.565286",
        "lon": "19.106187",
        "parent": ""
    },
    {
        "id": "CSF00885",
        "name": "Árpád Kórház",
        "lat": "47.561233",
        "lon": "19.103340",
        "parent": ""
    },
    {
        "id": "CSF00887",
        "name": "Ősz utca",
        "lat": "47.557542",
        "lon": "19.105798",
        "parent": ""
    },
    {
        "id": "CSF00892",
        "name": "Ősz utca",
        "lat": "47.557432",
        "lon": "19.100466",
        "parent": ""
    },
    {
        "id": "CSF00893",
        "name": "Langlet Waldemár utca",
        "lat": "47.567054",
        "lon": "19.082583",
        "parent": ""
    },
    {
        "id": "CSF00897",
        "name": "Újpest-Városkapu",
        "lat": "47.558926",
        "lon": "19.079229",
        "parent": ""
    },
    {
        "id": "CSF00900",
        "name": "Kordován tér",
        "lat": "47.587559",
        "lon": "19.112112",
        "parent": ""
    },
    {
        "id": "CSF00903",
        "name": "Bőrfestő utca",
        "lat": "47.587519",
        "lon": "19.118065",
        "parent": ""
    },
    {
        "id": "CSF00906",
        "name": "Székpatak utca",
        "lat": "47.596040",
        "lon": "19.121151",
        "parent": ""
    },
    {
        "id": "CSF00908",
        "name": "Sárpatak utca",
        "lat": "47.593128",
        "lon": "19.117966",
        "parent": ""
    },
    {
        "id": "CSF00910",
        "name": "Újpest-Központ",
        "lat": "47.560353",
        "lon": "19.089990",
        "parent": ""
    },
    {
        "id": "CSF00913",
        "name": "Újpest-Központ",
        "lat": "47.560429",
        "lon": "19.089916",
        "parent": ""
    },
    {
        "id": "CSF00922",
        "name": "Fővám tér",
        "lat": "47.486936",
        "lon": "19.057218",
        "parent": ""
    },
    {
        "id": "CSF00932",
        "name": "Szent István körút",
        "lat": "47.512014",
        "lon": "19.051425",
        "parent": ""
    },
    {
        "id": "CSF00940",
        "name": "Báthory utca \/ Bajcsy-Zsilinszky út",
        "lat": "47.506763",
        "lon": "19.055215",
        "parent": ""
    },
    {
        "id": "CSF00942",
        "name": "Arany János utca",
        "lat": "47.503112",
        "lon": "19.054478",
        "parent": ""
    },
    {
        "id": "CSF00945",
        "name": "Bajcsy-Zsilinszky út",
        "lat": "47.500156",
        "lon": "19.055748",
        "parent": ""
    },
    {
        "id": "CSF00956",
        "name": "Arany János utca",
        "lat": "47.503063",
        "lon": "19.054531",
        "parent": ""
    },
    {
        "id": "CSF00960",
        "name": "Deák Ferenc tér",
        "lat": "47.497567",
        "lon": "19.054433",
        "parent": ""
    },
    {
        "id": "CSF00968",
        "name": "Országház, látogatóközpont",
        "lat": "47.509062",
        "lon": "19.046683",
        "parent": ""
    },
    {
        "id": "CSF00970",
        "name": "Kossuth Lajos tér",
        "lat": "47.505809",
        "lon": "19.047557",
        "parent": ""
    },
    {
        "id": "CSF00974",
        "name": "Széchenyi István tér",
        "lat": "47.500253",
        "lon": "19.046484",
        "parent": ""
    },
    {
        "id": "CSF00976",
        "name": "Eötvös tér",
        "lat": "47.497926",
        "lon": "19.047102",
        "parent": ""
    },
    {
        "id": "CSF00977",
        "name": "Vigadó tér",
        "lat": "47.496118",
        "lon": "19.048331",
        "parent": ""
    },
    {
        "id": "CSF00990",
        "name": "Markó utca",
        "lat": "47.509115",
        "lon": "19.050373",
        "parent": ""
    },
    {
        "id": "CSF00997",
        "name": "Bajcsy-Zsilinszky út",
        "lat": "47.499875",
        "lon": "19.055326",
        "parent": ""
    },
    {
        "id": "CSF01004",
        "name": "Ferenciek tere",
        "lat": "47.492975",
        "lon": "19.054945",
        "parent": ""
    },
    {
        "id": "CSF01010",
        "name": "Kálvin tér",
        "lat": "47.489439",
        "lon": "19.061926",
        "parent": ""
    },
    {
        "id": "CSF01019",
        "name": "Astoria",
        "lat": "47.494364",
        "lon": "19.060024",
        "parent": ""
    },
    {
        "id": "CSF01023",
        "name": "Nyugati pályaudvar",
        "lat": "47.510468",
        "lon": "19.056730",
        "parent": ""
    },
    {
        "id": "CSF01033",
        "name": "Akácfa utca",
        "lat": "47.502108",
        "lon": "19.062983",
        "parent": ""
    },
    {
        "id": "CSF01034",
        "name": "Király utca \/ Erzsébet körút",
        "lat": "47.503142",
        "lon": "19.065893",
        "parent": ""
    },
    {
        "id": "CSF01042",
        "name": "Izabella utca \/ Király utca",
        "lat": "47.505615",
        "lon": "19.069445",
        "parent": ""
    },
    {
        "id": "CSF01045",
        "name": "Lövölde tér",
        "lat": "47.507147",
        "lon": "19.071964",
        "parent": ""
    },
    {
        "id": "CSF01046",
        "name": "Reformáció park",
        "lat": "47.508055",
        "lon": "19.075722",
        "parent": ""
    },
    {
        "id": "CSF01056",
        "name": "Hősök tere",
        "lat": "47.515502",
        "lon": "19.075394",
        "parent": ""
    },
    {
        "id": "CSF01062",
        "name": "Dévai utca",
        "lat": "47.518658",
        "lon": "19.065006",
        "parent": ""
    },
    {
        "id": "CSF01069",
        "name": "Ferdinánd híd (Izabella utca)",
        "lat": "47.511127",
        "lon": "19.062628",
        "parent": ""
    },
    {
        "id": "CSF01076",
        "name": "Andrássy út (Opera M)",
        "lat": "47.503099",
        "lon": "19.060215",
        "parent": ""
    },
    {
        "id": "CSF01084",
        "name": "Oktogon",
        "lat": "47.505331",
        "lon": "19.062607",
        "parent": ""
    },
    {
        "id": "CSF01090",
        "name": "Vörösmarty utca",
        "lat": "47.507666",
        "lon": "19.066859",
        "parent": ""
    },
    {
        "id": "CSF01093",
        "name": "Vörösmarty utca",
        "lat": "47.507212",
        "lon": "19.066322",
        "parent": ""
    },
    {
        "id": "CSF01096",
        "name": "Kodály körönd",
        "lat": "47.509234",
        "lon": "19.069341",
        "parent": ""
    },
    {
        "id": "CSF01097",
        "name": "Kodály körönd",
        "lat": "47.509707",
        "lon": "19.070014",
        "parent": ""
    },
    {
        "id": "CSF01098",
        "name": "Bajza utca",
        "lat": "47.511244",
        "lon": "19.072331",
        "parent": ""
    },
    {
        "id": "CSF01101",
        "name": "Bajza utca",
        "lat": "47.511320",
        "lon": "19.072495",
        "parent": ""
    },
    {
        "id": "CSF01105",
        "name": "Bajza utca",
        "lat": "47.514727",
        "lon": "19.068244",
        "parent": ""
    },
    {
        "id": "CSF01106",
        "name": "Szinyei Merse utca",
        "lat": "47.513137",
        "lon": "19.065173",
        "parent": ""
    },
    {
        "id": "CSF01115",
        "name": "Wesselényi utca \/ Erzsébet körút",
        "lat": "47.500304",
        "lon": "19.069060",
        "parent": ""
    },
    {
        "id": "CSF01116",
        "name": "Blaha Lujza tér",
        "lat": "47.496615",
        "lon": "19.070790",
        "parent": ""
    },
    {
        "id": "CSF01122",
        "name": "Rottenbiller utca \/ István utca",
        "lat": "47.502941",
        "lon": "19.076954",
        "parent": ""
    },
    {
        "id": "CSF01126",
        "name": "Nefelejcs utca \/ Damjanich utca",
        "lat": "47.507448",
        "lon": "19.077970",
        "parent": ""
    },
    {
        "id": "CSF01128",
        "name": "Nefelejcs utca \/ István utca",
        "lat": "47.505012",
        "lon": "19.080278",
        "parent": ""
    },
    {
        "id": "CSF01131",
        "name": "Keleti pályaudvar",
        "lat": "47.500292",
        "lon": "19.083211",
        "parent": ""
    },
    {
        "id": "CSF01134",
        "name": "Damjanich utca \/ Dózsa György út",
        "lat": "47.509436",
        "lon": "19.082261",
        "parent": ""
    },
    {
        "id": "CSF01138",
        "name": "Dembinszky utca",
        "lat": "47.508202",
        "lon": "19.083767",
        "parent": ""
    },
    {
        "id": "CSF01144",
        "name": "Reiner Frigyes park",
        "lat": "47.503927",
        "lon": "19.088788",
        "parent": ""
    },
    {
        "id": "CSF01151",
        "name": "Verseny utca",
        "lat": "47.501854",
        "lon": "19.090579",
        "parent": ""
    },
    {
        "id": "CSF01162",
        "name": "Huszár utca",
        "lat": "47.499199",
        "lon": "19.078033",
        "parent": ""
    },
    {
        "id": "CSF01171",
        "name": "Uránia",
        "lat": "47.495613",
        "lon": "19.065118",
        "parent": ""
    },
    {
        "id": "CSF01172",
        "name": "Munkás utca",
        "lat": "47.500166",
        "lon": "19.079062",
        "parent": ""
    },
    {
        "id": "CSF01175",
        "name": "Szentkirályi utca",
        "lat": "47.489074",
        "lon": "19.066323",
        "parent": ""
    },
    {
        "id": "CSF01176",
        "name": "Muzsikus cigányok parkja",
        "lat": "47.489116",
        "lon": "19.080376",
        "parent": ""
    },
    {
        "id": "CSF01180",
        "name": "Kőbányai út 21.",
        "lat": "47.488945",
        "lon": "19.095733",
        "parent": ""
    },
    {
        "id": "CSF01182",
        "name": "Gumigyár",
        "lat": "47.499575",
        "lon": "19.096315",
        "parent": ""
    },
    {
        "id": "CSF01190",
        "name": "Corvin-negyed",
        "lat": "47.485759",
        "lon": "19.070302",
        "parent": ""
    },
    {
        "id": "CSF01199",
        "name": "Harminckettesek tere",
        "lat": "47.489818",
        "lon": "19.070973",
        "parent": ""
    },
    {
        "id": "CSF01200",
        "name": "Rákóczi tér",
        "lat": "47.492662",
        "lon": "19.071102",
        "parent": ""
    },
    {
        "id": "CSF01207",
        "name": "Horváth Mihály tér",
        "lat": "47.489498",
        "lon": "19.077040",
        "parent": ""
    },
    {
        "id": "CSF01209",
        "name": "Mátyás tér",
        "lat": "47.492205",
        "lon": "19.078832",
        "parent": ""
    },
    {
        "id": "CSF01217",
        "name": "Orczy tér",
        "lat": "47.489680",
        "lon": "19.090663",
        "parent": ""
    },
    {
        "id": "CSF01221",
        "name": "Kálvária tér",
        "lat": "47.489246",
        "lon": "19.085645",
        "parent": ""
    },
    {
        "id": "CSF01227",
        "name": "Golgota tér",
        "lat": "47.485929",
        "lon": "19.092903",
        "parent": ""
    },
    {
        "id": "CSF01232",
        "name": "Klinikák",
        "lat": "47.482834",
        "lon": "19.079176",
        "parent": ""
    },
    {
        "id": "CSF01235",
        "name": "Klinikák",
        "lat": "47.482357",
        "lon": "19.079822",
        "parent": ""
    },
    {
        "id": "CSF01239",
        "name": "Elnök utca",
        "lat": "47.481768",
        "lon": "19.093457",
        "parent": ""
    },
    {
        "id": "CSF01241",
        "name": "Bláthy Ottó utca",
        "lat": "47.483586",
        "lon": "19.099309",
        "parent": ""
    },
    {
        "id": "CSF01246",
        "name": "Nagyvárad tér",
        "lat": "47.479123",
        "lon": "19.089869",
        "parent": ""
    },
    {
        "id": "CSF01250",
        "name": "Arena Plaza",
        "lat": "47.499586",
        "lon": "19.090577",
        "parent": ""
    },
    {
        "id": "CSF01252",
        "name": "Nagyvárad tér",
        "lat": "47.478943",
        "lon": "19.089796",
        "parent": ""
    },
    {
        "id": "CSF01258",
        "name": "Vajda Péter utca",
        "lat": "47.481775",
        "lon": "19.103158",
        "parent": ""
    },
    {
        "id": "CSF01263",
        "name": "Kőbányai út 31.",
        "lat": "47.487560",
        "lon": "19.103955",
        "parent": ""
    },
    {
        "id": "CSF01267",
        "name": "Kőbányai út \/ Könyves Kálmán körút",
        "lat": "47.486246",
        "lon": "19.107691",
        "parent": ""
    },
    {
        "id": "CSF01275",
        "name": "Hidegkuti Nándor Stadion",
        "lat": "47.490447",
        "lon": "19.109103",
        "parent": ""
    },
    {
        "id": "CSF01276",
        "name": "Ciprus utca",
        "lat": "47.493440",
        "lon": "19.108999",
        "parent": ""
    },
    {
        "id": "CSF01278",
        "name": "Asztalos Sándor út",
        "lat": "47.490077",
        "lon": "19.105254",
        "parent": ""
    },
    {
        "id": "CSF01280",
        "name": "Salgótarjáni utca, temető",
        "lat": "47.490963",
        "lon": "19.096674",
        "parent": ""
    },
    {
        "id": "CSF01282",
        "name": "Népliget",
        "lat": "47.475441",
        "lon": "19.098808",
        "parent": ""
    },
    {
        "id": "CSF01289",
        "name": "Kálvin tér",
        "lat": "47.489585",
        "lon": "19.061629",
        "parent": ""
    },
    {
        "id": "CSF01300",
        "name": "II. János Pál pápa tér",
        "lat": "47.494583",
        "lon": "19.077089",
        "parent": ""
    },
    {
        "id": "CSF01307",
        "name": "Dologház utca",
        "lat": "47.496481",
        "lon": "19.083250",
        "parent": ""
    },
    {
        "id": "CSF01326",
        "name": "Hős utca",
        "lat": "47.496651",
        "lon": "19.109043",
        "parent": ""
    },
    {
        "id": "CSF01330",
        "name": "Teleki László tér (Szerdahelyi utca)",
        "lat": "47.492974",
        "lon": "19.082914",
        "parent": ""
    },
    {
        "id": "CSF01332",
        "name": "Kőris utca",
        "lat": "47.487220",
        "lon": "19.089233",
        "parent": ""
    },
    {
        "id": "CSF01341",
        "name": "Koppány utca",
        "lat": "47.466093",
        "lon": "19.081351",
        "parent": ""
    },
    {
        "id": "CSF01346",
        "name": "Zsil utca",
        "lat": "47.482920",
        "lon": "19.062812",
        "parent": ""
    },
    {
        "id": "CSF01348",
        "name": "Timót utca",
        "lat": "47.447938",
        "lon": "19.090456",
        "parent": ""
    },
    {
        "id": "CSF01350",
        "name": "Kén utca",
        "lat": "47.457199",
        "lon": "19.089117",
        "parent": ""
    },
    {
        "id": "CSF01352",
        "name": "Beöthy utca",
        "lat": "47.460380",
        "lon": "19.082309",
        "parent": ""
    },
    {
        "id": "CSF01353",
        "name": "Beöthy utca",
        "lat": "47.460673",
        "lon": "19.081818",
        "parent": ""
    },
    {
        "id": "CSF01357",
        "name": "Fegyvergyár utca",
        "lat": "47.448704",
        "lon": "19.093911",
        "parent": ""
    },
    {
        "id": "CSF01359",
        "name": "Timót utca",
        "lat": "47.448001",
        "lon": "19.090595",
        "parent": ""
    },
    {
        "id": "CSF01363",
        "name": "Börzsöny utca",
        "lat": "47.466872",
        "lon": "19.112033",
        "parent": ""
    },
    {
        "id": "CSF01367",
        "name": "Epreserdő utca",
        "lat": "47.459743",
        "lon": "19.111653",
        "parent": ""
    },
    {
        "id": "CSF01368",
        "name": "Aranyvirág sétány",
        "lat": "47.467646",
        "lon": "19.109520",
        "parent": ""
    },
    {
        "id": "CSF01380",
        "name": "Mester utca \/ Ferenc körút",
        "lat": "47.482065",
        "lon": "19.068727",
        "parent": ""
    },
    {
        "id": "CSF01381",
        "name": "Bokréta utca",
        "lat": "47.479326",
        "lon": "19.072417",
        "parent": ""
    },
    {
        "id": "CSF01386",
        "name": "Haller utca \/ Soroksári út",
        "lat": "47.474999",
        "lon": "19.069941",
        "parent": ""
    },
    {
        "id": "CSF01395",
        "name": "Haller utca \/ Mester utca",
        "lat": "47.475993",
        "lon": "19.077264",
        "parent": ""
    },
    {
        "id": "CSF01412",
        "name": "Helyi kikötő út",
        "lat": "47.463316",
        "lon": "19.072893",
        "parent": ""
    },
    {
        "id": "CSF01414",
        "name": "Magyar Aszfalt",
        "lat": "47.459790",
        "lon": "19.087773",
        "parent": ""
    },
    {
        "id": "CSF01415",
        "name": "Kén utca",
        "lat": "47.454906",
        "lon": "19.086556",
        "parent": ""
    },
    {
        "id": "CSF01422",
        "name": "Gubacsi út",
        "lat": "47.454127",
        "lon": "19.091051",
        "parent": ""
    },
    {
        "id": "CSF01426",
        "name": "Külső Mester utca",
        "lat": "47.454340",
        "lon": "19.096840",
        "parent": ""
    },
    {
        "id": "CSF01427",
        "name": "Timót utca",
        "lat": "47.451981",
        "lon": "19.092084",
        "parent": ""
    },
    {
        "id": "CSF01429",
        "name": "Soroksári út 150. (Timót utca)",
        "lat": "47.451258",
        "lon": "19.088781",
        "parent": ""
    },
    {
        "id": "CSF01431",
        "name": "Szabadkai út",
        "lat": "47.443899",
        "lon": "19.092853",
        "parent": ""
    },
    {
        "id": "CSF01435",
        "name": "Gubacsi út \/ Határ út",
        "lat": "47.444254",
        "lon": "19.097087",
        "parent": ""
    },
    {
        "id": "CSF01443",
        "name": "Ősz utca",
        "lat": "47.446081",
        "lon": "19.100207",
        "parent": ""
    },
    {
        "id": "CSF01444",
        "name": "Jókai Mór utca \/ Határ út",
        "lat": "47.448755",
        "lon": "19.104524",
        "parent": ""
    },
    {
        "id": "CSF01447",
        "name": "Mártírok útja \/ Határ út",
        "lat": "47.451656",
        "lon": "19.109551",
        "parent": ""
    },
    {
        "id": "CSF01458",
        "name": "Mészáros Lőrinc utca",
        "lat": "47.459576",
        "lon": "19.120390",
        "parent": ""
    },
    {
        "id": "CSF01464",
        "name": "Kőér utcai uszoda",
        "lat": "47.466580",
        "lon": "19.126356",
        "parent": ""
    },
    {
        "id": "CSF01465",
        "name": "Pöttyös utca",
        "lat": "47.468690",
        "lon": "19.116758",
        "parent": ""
    },
    {
        "id": "CSF01470",
        "name": "Lobogó utca",
        "lat": "47.461909",
        "lon": "19.115203",
        "parent": ""
    },
    {
        "id": "CSF01475",
        "name": "Táblás utca",
        "lat": "47.455438",
        "lon": "19.104122",
        "parent": ""
    },
    {
        "id": "CSF01476",
        "name": "Aszódi utca",
        "lat": "47.463577",
        "lon": "19.100908",
        "parent": ""
    },
    {
        "id": "CSF01477",
        "name": "Merényi Gusztáv Kórház",
        "lat": "47.468046",
        "lon": "19.101071",
        "parent": ""
    },
    {
        "id": "CSF01481",
        "name": "Közterületfenntartó Zrt.",
        "lat": "47.468119",
        "lon": "19.107449",
        "parent": ""
    },
    {
        "id": "CSF01488",
        "name": "Ifjúmunkás utca",
        "lat": "47.468303",
        "lon": "19.110974",
        "parent": ""
    },
    {
        "id": "CSF01493",
        "name": "Ecseri út",
        "lat": "47.470920",
        "lon": "19.111329",
        "parent": ""
    },
    {
        "id": "CSF01495",
        "name": "Ecseri út",
        "lat": "47.470818",
        "lon": "19.110202",
        "parent": ""
    },
    {
        "id": "CSF01500",
        "name": "Albert Flórián út",
        "lat": "47.472994",
        "lon": "19.096193",
        "parent": ""
    },
    {
        "id": "CSF01504",
        "name": "Ferencváros vasútállomás",
        "lat": "47.470314",
        "lon": "19.089164",
        "parent": ""
    },
    {
        "id": "CSF01507",
        "name": "Mester utca \/ Könyves Kálmán körút",
        "lat": "47.469834",
        "lon": "19.083900",
        "parent": ""
    },
    {
        "id": "CSF01510",
        "name": "Balázs Béla utca",
        "lat": "47.476887",
        "lon": "19.082237",
        "parent": ""
    },
    {
        "id": "CSF01516",
        "name": "Boráros tér",
        "lat": "47.479995",
        "lon": "19.066765",
        "parent": ""
    },
    {
        "id": "CSF01525",
        "name": "Csengettyű utca",
        "lat": "47.463513",
        "lon": "19.109582",
        "parent": ""
    },
    {
        "id": "CSF01527",
        "name": "Közvágóhíd",
        "lat": "47.467757",
        "lon": "19.075353",
        "parent": ""
    },
    {
        "id": "CSF01531",
        "name": "Balkán utca",
        "lat": "47.473940",
        "lon": "19.115915",
        "parent": ""
    },
    {
        "id": "CSF01534",
        "name": "Sporttelep",
        "lat": "47.478867",
        "lon": "19.113173",
        "parent": ""
    },
    {
        "id": "CSF01536",
        "name": "Fertő utca \/ Bihari utca",
        "lat": "47.475856",
        "lon": "19.119119",
        "parent": ""
    },
    {
        "id": "CSF01539",
        "name": "Basa utca",
        "lat": "47.470488",
        "lon": "19.126617",
        "parent": ""
    },
    {
        "id": "CSF01541",
        "name": "Határ út",
        "lat": "47.465443",
        "lon": "19.126757",
        "parent": ""
    },
    {
        "id": "CSF01543",
        "name": "Kőbánya-Kispest",
        "lat": "47.463622",
        "lon": "19.148115",
        "parent": ""
    },
    {
        "id": "CSF01548",
        "name": "Gyömrői út 105.",
        "lat": "47.463410",
        "lon": "19.162751",
        "parent": ""
    },
    {
        "id": "CSF01550",
        "name": "Árpád utca",
        "lat": "47.463850",
        "lon": "19.178021",
        "parent": ""
    },
    {
        "id": "CSF01551",
        "name": "Álmos utca",
        "lat": "47.467324",
        "lon": "19.178684",
        "parent": ""
    },
    {
        "id": "CSF01555",
        "name": "Kőbánya felső vasútállomás",
        "lat": "47.491448",
        "lon": "19.133261",
        "parent": ""
    },
    {
        "id": "CSF01556",
        "name": "III. kapu",
        "lat": "47.491745",
        "lon": "19.129309",
        "parent": ""
    },
    {
        "id": "CSF01562",
        "name": "Őrház",
        "lat": "47.489482",
        "lon": "19.124734",
        "parent": ""
    },
    {
        "id": "CSF01563",
        "name": "Egészségház",
        "lat": "47.484008",
        "lon": "19.117169",
        "parent": ""
    },
    {
        "id": "CSF01567",
        "name": "Mázsa utca",
        "lat": "47.483141",
        "lon": "19.123123",
        "parent": ""
    },
    {
        "id": "CSF01576",
        "name": "Szállás utca",
        "lat": "47.478806",
        "lon": "19.123644",
        "parent": ""
    },
    {
        "id": "CSF01577",
        "name": "Kőér utca",
        "lat": "47.473757",
        "lon": "19.135089",
        "parent": ""
    },
    {
        "id": "CSF01582",
        "name": "Diósgyőri utca",
        "lat": "47.470501",
        "lon": "19.143829",
        "parent": ""
    },
    {
        "id": "CSF01584",
        "name": "Felüljáró (Gyömrői út)",
        "lat": "47.465310",
        "lon": "19.152594",
        "parent": ""
    },
    {
        "id": "CSF01585",
        "name": "Újhegyi út",
        "lat": "47.465128",
        "lon": "19.158264",
        "parent": ""
    },
    {
        "id": "CSF01587",
        "name": "Hangár utca",
        "lat": "47.462165",
        "lon": "19.166329",
        "parent": ""
    },
    {
        "id": "CSF01589",
        "name": "Újhegyi út, Sportliget",
        "lat": "47.468206",
        "lon": "19.169003",
        "parent": ""
    },
    {
        "id": "CSF01592",
        "name": "Maglódi út",
        "lat": "47.470437",
        "lon": "19.173696",
        "parent": ""
    },
    {
        "id": "CSF01601",
        "name": "Gránátos utca",
        "lat": "47.481515",
        "lon": "19.177591",
        "parent": ""
    },
    {
        "id": "CSF01602",
        "name": "Kozma utca",
        "lat": "47.487180",
        "lon": "19.179170",
        "parent": ""
    },
    {
        "id": "CSF01605",
        "name": "Kossuth Nyomda",
        "lat": "47.486567",
        "lon": "19.187080",
        "parent": ""
    },
    {
        "id": "CSF01609",
        "name": "Túzok utca",
        "lat": "47.486987",
        "lon": "19.192977",
        "parent": ""
    },
    {
        "id": "CSF01611",
        "name": "Keresztúri út 102.",
        "lat": "47.490829",
        "lon": "19.168868",
        "parent": ""
    },
    {
        "id": "CSF01613",
        "name": "Rákos vasútállomás",
        "lat": "47.488301",
        "lon": "19.173825",
        "parent": ""
    },
    {
        "id": "CSF01615",
        "name": "Jászberényi út \/ Maglódi út",
        "lat": "47.490234",
        "lon": "19.148965",
        "parent": ""
    },
    {
        "id": "CSF01622",
        "name": "Sörgyár",
        "lat": "47.491791",
        "lon": "19.144791",
        "parent": ""
    },
    {
        "id": "CSF01628",
        "name": "Élessarok",
        "lat": "47.491557",
        "lon": "19.138636",
        "parent": ""
    },
    {
        "id": "CSF01638",
        "name": "Hízlaló tér",
        "lat": "47.472590",
        "lon": "19.123721",
        "parent": ""
    },
    {
        "id": "CSF01642",
        "name": "Liget tér",
        "lat": "47.482555",
        "lon": "19.130122",
        "parent": ""
    },
    {
        "id": "CSF01647",
        "name": "Kápolna utca",
        "lat": "47.482028",
        "lon": "19.129839",
        "parent": ""
    },
    {
        "id": "CSF01653",
        "name": "Szent László tér",
        "lat": "47.485420",
        "lon": "19.131393",
        "parent": ""
    },
    {
        "id": "CSF01655",
        "name": "Kápolna tér",
        "lat": "47.481394",
        "lon": "19.135837",
        "parent": ""
    },
    {
        "id": "CSF01659",
        "name": "Ihász utca",
        "lat": "47.479472",
        "lon": "19.135347",
        "parent": ""
    },
    {
        "id": "CSF01665",
        "name": "Kőér utca",
        "lat": "47.477392",
        "lon": "19.138548",
        "parent": ""
    },
    {
        "id": "CSF01666",
        "name": "Óhegy park",
        "lat": "47.479791",
        "lon": "19.141258",
        "parent": ""
    },
    {
        "id": "CSF01670",
        "name": "Csősztorony",
        "lat": "47.483345",
        "lon": "19.145451",
        "parent": ""
    },
    {
        "id": "CSF01675",
        "name": "Gitár utca",
        "lat": "47.487286",
        "lon": "19.152553",
        "parent": ""
    },
    {
        "id": "CSF01676",
        "name": "Kada utca \/ Maglódi út",
        "lat": "47.482602",
        "lon": "19.158400",
        "parent": ""
    },
    {
        "id": "CSF01682",
        "name": "Kada utca",
        "lat": "47.478813",
        "lon": "19.153154",
        "parent": ""
    },
    {
        "id": "CSF01686",
        "name": "Márga utca",
        "lat": "47.477719",
        "lon": "19.144379",
        "parent": ""
    },
    {
        "id": "CSF01688",
        "name": "Kemence utca",
        "lat": "47.475832",
        "lon": "19.147852",
        "parent": ""
    },
    {
        "id": "CSF01696",
        "name": "Mélytó utca",
        "lat": "47.468226",
        "lon": "19.164127",
        "parent": ""
    },
    {
        "id": "CSF01698",
        "name": "Szövőszék utca",
        "lat": "47.472098",
        "lon": "19.159565",
        "parent": ""
    },
    {
        "id": "CSF01706",
        "name": "Venyige utca",
        "lat": "47.477455",
        "lon": "19.165690",
        "parent": ""
    },
    {
        "id": "CSF01710",
        "name": "Sírkert út",
        "lat": "47.473962",
        "lon": "19.170827",
        "parent": ""
    },
    {
        "id": "CSF01715",
        "name": "Legényrózsa utca",
        "lat": "47.486332",
        "lon": "19.199458",
        "parent": ""
    },
    {
        "id": "CSF01717",
        "name": "Határmalom utca",
        "lat": "47.488922",
        "lon": "19.219431",
        "parent": ""
    },
    {
        "id": "CSF01719",
        "name": "501. utca",
        "lat": "47.485450",
        "lon": "19.216694",
        "parent": ""
    },
    {
        "id": "CSF01726",
        "name": "Kistorony park",
        "lat": "47.486384",
        "lon": "19.124192",
        "parent": ""
    },
    {
        "id": "CSF01729",
        "name": "Halom utca",
        "lat": "47.490131",
        "lon": "19.128517",
        "parent": ""
    },
    {
        "id": "CSF01732",
        "name": "Északi Járműjavító",
        "lat": "47.485007",
        "lon": "19.113440",
        "parent": ""
    },
    {
        "id": "CSF01735",
        "name": "Őrnagy utca",
        "lat": "47.500656",
        "lon": "19.112551",
        "parent": ""
    },
    {
        "id": "CSF01737",
        "name": "Várna utca",
        "lat": "47.501738",
        "lon": "19.115527",
        "parent": ""
    },
    {
        "id": "CSF01740",
        "name": "Pillangó utca",
        "lat": "47.501358",
        "lon": "19.119559",
        "parent": ""
    },
    {
        "id": "CSF01744",
        "name": "Hős utca",
        "lat": "47.497245",
        "lon": "19.116170",
        "parent": ""
    },
    {
        "id": "CSF01770",
        "name": "Gyakorló köz",
        "lat": "47.501670",
        "lon": "19.142120",
        "parent": ""
    },
    {
        "id": "CSF01773",
        "name": "Halas utca",
        "lat": "47.502538",
        "lon": "19.153146",
        "parent": ""
    },
    {
        "id": "CSF01775",
        "name": "Egyenes utcai lakótelep",
        "lat": "47.505689",
        "lon": "19.158973",
        "parent": ""
    },
    {
        "id": "CSF01778",
        "name": "Nagyicce",
        "lat": "47.506738",
        "lon": "19.166896",
        "parent": ""
    },
    {
        "id": "CSF01783",
        "name": "Terebesi utca",
        "lat": "47.494131",
        "lon": "19.140819",
        "parent": ""
    },
    {
        "id": "CSF01784",
        "name": "EGIS Gyógyszergyár",
        "lat": "47.499861",
        "lon": "19.153797",
        "parent": ""
    },
    {
        "id": "CSF01787",
        "name": "MÁV-telep",
        "lat": "47.493682",
        "lon": "19.163387",
        "parent": ""
    },
    {
        "id": "CSF01790",
        "name": "Rákosfalva",
        "lat": "47.504846",
        "lon": "19.151205",
        "parent": ""
    },
    {
        "id": "CSF01795",
        "name": "Kelemen utca",
        "lat": "47.477063",
        "lon": "19.132159",
        "parent": ""
    },
    {
        "id": "CSF01796",
        "name": "Gyógyszergyár",
        "lat": "47.472363",
        "lon": "19.138791",
        "parent": ""
    },
    {
        "id": "CSF01800",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.483229",
        "lon": "19.127522",
        "parent": ""
    },
    {
        "id": "CSF01805",
        "name": "Vasgyár utca",
        "lat": "47.469068",
        "lon": "19.147686",
        "parent": ""
    },
    {
        "id": "CSF01811",
        "name": "Izraelita temető",
        "lat": "47.479291",
        "lon": "19.177810",
        "parent": ""
    },
    {
        "id": "CSF01812",
        "name": "Meténg utca",
        "lat": "47.484598",
        "lon": "19.178587",
        "parent": ""
    },
    {
        "id": "CSF01815",
        "name": "Fővárosi Kertészet",
        "lat": "47.489403",
        "lon": "19.177331",
        "parent": ""
    },
    {
        "id": "CSF01816",
        "name": "Díszítő üzem",
        "lat": "47.488303",
        "lon": "19.183691",
        "parent": ""
    },
    {
        "id": "CSF01819",
        "name": "Tárna utca",
        "lat": "47.489394",
        "lon": "19.164240",
        "parent": ""
    },
    {
        "id": "CSF01820",
        "name": "Rákosfalva",
        "lat": "47.505066",
        "lon": "19.151378",
        "parent": ""
    },
    {
        "id": "CSF01823",
        "name": "Téglavető utca",
        "lat": "47.489691",
        "lon": "19.159691",
        "parent": ""
    },
    {
        "id": "CSF01825",
        "name": "Orion",
        "lat": "47.489975",
        "lon": "19.155777",
        "parent": ""
    },
    {
        "id": "CSF01826",
        "name": "Ónodi utca",
        "lat": "47.488644",
        "lon": "19.135283",
        "parent": ""
    },
    {
        "id": "CSF01831",
        "name": "Kocka utca",
        "lat": "47.484901",
        "lon": "19.155777",
        "parent": ""
    },
    {
        "id": "CSF01833",
        "name": "Bajcsy-Zsilinszky Kórház",
        "lat": "47.479894",
        "lon": "19.162405",
        "parent": ""
    },
    {
        "id": "CSF01839",
        "name": "Szlávy utca",
        "lat": "47.475536",
        "lon": "19.141742",
        "parent": ""
    },
    {
        "id": "CSF01841",
        "name": "Újhegyi sétány",
        "lat": "47.471262",
        "lon": "19.163815",
        "parent": ""
    },
    {
        "id": "CSF01844",
        "name": "Bányató utca",
        "lat": "47.469031",
        "lon": "19.160683",
        "parent": ""
    },
    {
        "id": "CSF01845",
        "name": "Tavas utca",
        "lat": "47.470751",
        "lon": "19.165937",
        "parent": ""
    },
    {
        "id": "CSF01846",
        "name": "Rézvirág utca",
        "lat": "47.486224",
        "lon": "19.203100",
        "parent": ""
    },
    {
        "id": "CSF01848",
        "name": "Dombhát utca",
        "lat": "47.485949",
        "lon": "19.209654",
        "parent": ""
    },
    {
        "id": "CSF01850",
        "name": "Gépmadár utca",
        "lat": "47.502246",
        "lon": "19.147410",
        "parent": ""
    },
    {
        "id": "CSF01853",
        "name": "Pilisi utca",
        "lat": "47.502242",
        "lon": "19.161235",
        "parent": ""
    },
    {
        "id": "CSF01854",
        "name": "Gépmadár park",
        "lat": "47.504360",
        "lon": "19.146591",
        "parent": ""
    },
    {
        "id": "CSF01857",
        "name": "Pongrácz úti lakótelep",
        "lat": "47.490944",
        "lon": "19.120599",
        "parent": ""
    },
    {
        "id": "CSF01859",
        "name": "Hungaropharma",
        "lat": "47.482085",
        "lon": "19.203945",
        "parent": ""
    },
    {
        "id": "CSF01862",
        "name": "Fehér úti ipari park",
        "lat": "47.499600",
        "lon": "19.137387",
        "parent": ""
    },
    {
        "id": "CSF01864",
        "name": "Aluljáró, Danone",
        "lat": "47.486670",
        "lon": "19.202972",
        "parent": ""
    },
    {
        "id": "CSF01866",
        "name": "Új köztemető",
        "lat": "47.473699",
        "lon": "19.177774",
        "parent": ""
    },
    {
        "id": "CSF01869",
        "name": "Tűzoltóság",
        "lat": "47.479018",
        "lon": "19.200305",
        "parent": ""
    },
    {
        "id": "CSF01872",
        "name": "Kollégium",
        "lat": "47.483903",
        "lon": "19.192650",
        "parent": ""
    },
    {
        "id": "CSF01878",
        "name": "Pöttyös utca",
        "lat": "47.468548",
        "lon": "19.116946",
        "parent": ""
    },
    {
        "id": "CSF01880",
        "name": "Kamaraerdő",
        "lat": "47.435880",
        "lon": "18.978733",
        "parent": ""
    },
    {
        "id": "CSF01884",
        "name": "Szociális Otthon",
        "lat": "47.437737",
        "lon": "18.979143",
        "parent": ""
    },
    {
        "id": "CSF01885",
        "name": "Kamaraerdei Ifjúsági Park",
        "lat": "47.440847",
        "lon": "18.979334",
        "parent": ""
    },
    {
        "id": "CSF01889",
        "name": "Repülőtér",
        "lat": "47.444710",
        "lon": "18.986806",
        "parent": ""
    },
    {
        "id": "CSF01890",
        "name": "Fülőke utca",
        "lat": "47.445414",
        "lon": "18.991486",
        "parent": ""
    },
    {
        "id": "CSF01892",
        "name": "Balatoni út",
        "lat": "47.444502",
        "lon": "19.005594",
        "parent": ""
    },
    {
        "id": "CSF01897",
        "name": "Kelenvölgy-Péterhegy",
        "lat": "47.443826",
        "lon": "19.012381",
        "parent": ""
    },
    {
        "id": "CSF01899",
        "name": "Kápolna út",
        "lat": "47.446900",
        "lon": "19.013983",
        "parent": ""
    },
    {
        "id": "CSF01900",
        "name": "Olajfa utca",
        "lat": "47.449470",
        "lon": "19.015363",
        "parent": ""
    },
    {
        "id": "CSF01905",
        "name": "Budafoki elágazás",
        "lat": "47.435319",
        "lon": "19.036202",
        "parent": ""
    },
    {
        "id": "CSF01906",
        "name": "Vasút utca",
        "lat": "47.446115",
        "lon": "18.976090",
        "parent": ""
    },
    {
        "id": "CSF01910",
        "name": "Repülőgépes Szolgálat",
        "lat": "47.448386",
        "lon": "18.975238",
        "parent": ""
    },
    {
        "id": "CSF01913",
        "name": "Budaörsi repülőtér",
        "lat": "47.447412",
        "lon": "18.986372",
        "parent": ""
    },
    {
        "id": "CSF01916",
        "name": "Őrmezei út",
        "lat": "47.454972",
        "lon": "19.018748",
        "parent": ""
    },
    {
        "id": "CSF01923",
        "name": "Kérő utca",
        "lat": "47.461987",
        "lon": "19.016092",
        "parent": ""
    },
    {
        "id": "CSF01926",
        "name": "Sasadi út",
        "lat": "47.466328",
        "lon": "19.016036",
        "parent": ""
    },
    {
        "id": "CSF01932",
        "name": "Poprádi út",
        "lat": "47.461311",
        "lon": "18.999314",
        "parent": ""
    },
    {
        "id": "CSF01934",
        "name": "Keserűvíz-forrás",
        "lat": "47.458414",
        "lon": "18.997108",
        "parent": ""
    },
    {
        "id": "CSF01937",
        "name": "Vitorlázó út",
        "lat": "47.452622",
        "lon": "18.990828",
        "parent": ""
    },
    {
        "id": "CSF01938",
        "name": "Torma utca",
        "lat": "47.450389",
        "lon": "19.019653",
        "parent": ""
    },
    {
        "id": "CSF01941",
        "name": "Duránci utca",
        "lat": "47.450533",
        "lon": "19.022769",
        "parent": ""
    },
    {
        "id": "CSF01944",
        "name": "Narancs utca",
        "lat": "47.447925",
        "lon": "19.025276",
        "parent": ""
    },
    {
        "id": "CSF01945",
        "name": "Gépész utca",
        "lat": "47.453142",
        "lon": "19.022369",
        "parent": ""
    },
    {
        "id": "CSF01948",
        "name": "Hajtány sor",
        "lat": "47.455660",
        "lon": "19.024061",
        "parent": ""
    },
    {
        "id": "CSF01958",
        "name": "Bikás park",
        "lat": "47.463982",
        "lon": "19.033308",
        "parent": ""
    },
    {
        "id": "CSF01960",
        "name": "Bornemissza tér",
        "lat": "47.458379",
        "lon": "19.033468",
        "parent": ""
    },
    {
        "id": "CSF01966",
        "name": "Nyírbátor utca",
        "lat": "47.449879",
        "lon": "19.033265",
        "parent": ""
    },
    {
        "id": "CSF01968",
        "name": "Fonyód utca \/ Sáfrány utca",
        "lat": "47.444235",
        "lon": "19.033790",
        "parent": ""
    },
    {
        "id": "CSF01973",
        "name": "Vegyész utca",
        "lat": "47.442823",
        "lon": "19.045478",
        "parent": ""
    },
    {
        "id": "CSF01974",
        "name": "Építész utca",
        "lat": "47.447586",
        "lon": "19.046141",
        "parent": ""
    },
    {
        "id": "CSF01976",
        "name": "Kondorosi út",
        "lat": "47.449340",
        "lon": "19.049111",
        "parent": ""
    },
    {
        "id": "CSF01981",
        "name": "Galvani utca",
        "lat": "47.455411",
        "lon": "19.051777",
        "parent": ""
    },
    {
        "id": "CSF01982",
        "name": "Hengermalom út",
        "lat": "47.460257",
        "lon": "19.052001",
        "parent": ""
    },
    {
        "id": "CSF01986",
        "name": "Budafoki út \/ Szerémi sor",
        "lat": "47.473774",
        "lon": "19.052978",
        "parent": ""
    },
    {
        "id": "CSF01999",
        "name": "Újbuda-központ",
        "lat": "47.474312",
        "lon": "19.046988",
        "parent": ""
    },
    {
        "id": "CSF02002",
        "name": "Hauszmann Alajos utca",
        "lat": "47.467475",
        "lon": "19.044032",
        "parent": ""
    },
    {
        "id": "CSF02009",
        "name": "Etele út \/ Fehérvári út",
        "lat": "47.462440",
        "lon": "19.042201",
        "parent": ""
    },
    {
        "id": "CSF02012",
        "name": "Andor utca",
        "lat": "47.455936",
        "lon": "19.039866",
        "parent": ""
    },
    {
        "id": "CSF02019",
        "name": "Albertfalva utca",
        "lat": "47.447671",
        "lon": "19.037516",
        "parent": ""
    },
    {
        "id": "CSF02024",
        "name": "Fonyód utca",
        "lat": "47.443663",
        "lon": "19.036856",
        "parent": ""
    },
    {
        "id": "CSF02029",
        "name": "Budafok kocsiszín",
        "lat": "47.441292",
        "lon": "19.036467",
        "parent": ""
    },
    {
        "id": "CSF02032",
        "name": "Tétényi út 30.",
        "lat": "47.466359",
        "lon": "19.034032",
        "parent": ""
    },
    {
        "id": "CSF02034",
        "name": "Szent Imre Kórház",
        "lat": "47.468750",
        "lon": "19.033764",
        "parent": ""
    },
    {
        "id": "CSF02040",
        "name": "Csóka utca",
        "lat": "47.470773",
        "lon": "19.028838",
        "parent": ""
    },
    {
        "id": "CSF02052",
        "name": "Ajnácskő utca",
        "lat": "47.474047",
        "lon": "19.025122",
        "parent": ""
    },
    {
        "id": "CSF02053",
        "name": "Dayka Gábor utca",
        "lat": "47.470535",
        "lon": "19.019870",
        "parent": ""
    },
    {
        "id": "CSF02055",
        "name": "Nagyszeben tér",
        "lat": "47.466454",
        "lon": "19.005443",
        "parent": ""
    },
    {
        "id": "CSF02058",
        "name": "Frankhegy utca",
        "lat": "47.470896",
        "lon": "19.001228",
        "parent": ""
    },
    {
        "id": "CSF02060",
        "name": "Kaptárkő utca",
        "lat": "47.472231",
        "lon": "18.998859",
        "parent": ""
    },
    {
        "id": "CSF02062",
        "name": "Regős utca",
        "lat": "47.465095",
        "lon": "19.003740",
        "parent": ""
    },
    {
        "id": "CSF02064",
        "name": "Törökugrató utca",
        "lat": "47.466722",
        "lon": "19.000754",
        "parent": ""
    },
    {
        "id": "CSF02066",
        "name": "Szent Angyalok-templom",
        "lat": "47.469052",
        "lon": "18.996412",
        "parent": ""
    },
    {
        "id": "CSF02068",
        "name": "Tűzkő utca",
        "lat": "47.470331",
        "lon": "18.994761",
        "parent": ""
    },
    {
        "id": "CSF02070",
        "name": "Kamaraerdei út 11.",
        "lat": "47.443099",
        "lon": "18.978805",
        "parent": ""
    },
    {
        "id": "CSF02072",
        "name": "Telekes utca",
        "lat": "47.473808",
        "lon": "18.995985",
        "parent": ""
    },
    {
        "id": "CSF02074",
        "name": "Szent Pio atya tér",
        "lat": "47.474804",
        "lon": "18.989400",
        "parent": ""
    },
    {
        "id": "CSF02076",
        "name": "Irhás árok",
        "lat": "47.476669",
        "lon": "18.987420",
        "parent": ""
    },
    {
        "id": "CSF02078",
        "name": "Oltvány köz",
        "lat": "47.478015",
        "lon": "18.990550",
        "parent": ""
    },
    {
        "id": "CSF02080",
        "name": "Eper utca",
        "lat": "47.480764",
        "lon": "18.992613",
        "parent": ""
    },
    {
        "id": "CSF02085",
        "name": "Márton Áron tér",
        "lat": "47.481818",
        "lon": "18.998826",
        "parent": ""
    },
    {
        "id": "CSF02086",
        "name": "Zajzon utca",
        "lat": "47.479638",
        "lon": "19.000876",
        "parent": ""
    },
    {
        "id": "CSF02088",
        "name": "Tömös utca",
        "lat": "47.477791",
        "lon": "19.002536",
        "parent": ""
    },
    {
        "id": "CSF02091",
        "name": "Nagyszalonta köz",
        "lat": "47.475399",
        "lon": "19.004096",
        "parent": ""
    },
    {
        "id": "CSF02093",
        "name": "Bereck utca",
        "lat": "47.473458",
        "lon": "19.007899",
        "parent": ""
    },
    {
        "id": "CSF02094",
        "name": "Sümegvár utca",
        "lat": "47.469541",
        "lon": "19.013049",
        "parent": ""
    },
    {
        "id": "CSF02097",
        "name": "Süveg utca",
        "lat": "47.481338",
        "lon": "19.004747",
        "parent": ""
    },
    {
        "id": "CSF02101",
        "name": "Farkasréti temető",
        "lat": "47.483942",
        "lon": "19.005778",
        "parent": ""
    },
    {
        "id": "CSF02105",
        "name": "Hegytető utca",
        "lat": "47.484562",
        "lon": "19.009576",
        "parent": ""
    },
    {
        "id": "CSF02107",
        "name": "Sion lépcső",
        "lat": "47.485311",
        "lon": "19.016436",
        "parent": ""
    },
    {
        "id": "CSF02108",
        "name": "Breznó lépcső",
        "lat": "47.484044",
        "lon": "19.020842",
        "parent": ""
    },
    {
        "id": "CSF02111",
        "name": "Zólyomi út",
        "lat": "47.483374",
        "lon": "19.022847",
        "parent": ""
    },
    {
        "id": "CSF02114",
        "name": "Fehérló utca",
        "lat": "47.478212",
        "lon": "19.025558",
        "parent": ""
    },
    {
        "id": "CSF02115",
        "name": "Alsóhegy utca",
        "lat": "47.482567",
        "lon": "19.030251",
        "parent": ""
    },
    {
        "id": "CSF02122",
        "name": "Diószegi út (Vérellátó Szolgálat)",
        "lat": "47.478524",
        "lon": "19.031640",
        "parent": ""
    },
    {
        "id": "CSF02123",
        "name": "Vincellér utca",
        "lat": "47.476470",
        "lon": "19.035813",
        "parent": ""
    },
    {
        "id": "CSF02129",
        "name": "Szüret utca",
        "lat": "47.480255",
        "lon": "19.036468",
        "parent": ""
    },
    {
        "id": "CSF02130",
        "name": "Iglói utca",
        "lat": "47.483444",
        "lon": "19.040108",
        "parent": ""
    },
    {
        "id": "CSF02132",
        "name": "Balogh Tihamér utca",
        "lat": "47.481785",
        "lon": "19.043055",
        "parent": ""
    },
    {
        "id": "CSF02135",
        "name": "Kelenhegyi lépcső",
        "lat": "47.481582",
        "lon": "19.045276",
        "parent": ""
    },
    {
        "id": "CSF02136",
        "name": "Rezeda utca",
        "lat": "47.483295",
        "lon": "19.043598",
        "parent": ""
    },
    {
        "id": "CSF02149",
        "name": "Gárdonyi tér",
        "lat": "47.480260",
        "lon": "19.051692",
        "parent": ""
    },
    {
        "id": "CSF02152",
        "name": "Budafoki út \/ Karinthy Frigyes út",
        "lat": "47.476067",
        "lon": "19.053344",
        "parent": ""
    },
    {
        "id": "CSF02159",
        "name": "Szép utca",
        "lat": "47.431146",
        "lon": "18.980074",
        "parent": ""
    },
    {
        "id": "CSF02162",
        "name": "Dűlő út",
        "lat": "47.427516",
        "lon": "18.979634",
        "parent": ""
    },
    {
        "id": "CSF02165",
        "name": "BAH-csomópont",
        "lat": "47.487247",
        "lon": "19.024251",
        "parent": ""
    },
    {
        "id": "CSF02172",
        "name": "Budaörsi út \/ Villányi út",
        "lat": "47.484045",
        "lon": "19.026876",
        "parent": ""
    },
    {
        "id": "CSF02176",
        "name": "Kosztolányi Dezső tér",
        "lat": "47.475249",
        "lon": "19.040451",
        "parent": ""
    },
    {
        "id": "CSF02198",
        "name": "Móricz Zsigmond körtér",
        "lat": "47.477543",
        "lon": "19.047017",
        "parent": ""
    },
    {
        "id": "CSF02211",
        "name": "Herend utca",
        "lat": "47.446973",
        "lon": "19.033491",
        "parent": ""
    },
    {
        "id": "CSF02214",
        "name": "Puskás Tivadar utca",
        "lat": "47.460750",
        "lon": "19.033534",
        "parent": ""
    },
    {
        "id": "CSF02216",
        "name": "Bártfai utca",
        "lat": "47.464266",
        "lon": "19.028519",
        "parent": ""
    },
    {
        "id": "CSF02217",
        "name": "Rupphegyi út",
        "lat": "47.463148",
        "lon": "18.984662",
        "parent": ""
    },
    {
        "id": "CSF02220",
        "name": "Kelenföldi autóbuszgarázs",
        "lat": "47.473284",
        "lon": "19.029979",
        "parent": ""
    },
    {
        "id": "CSF02225",
        "name": "Petőfi híd, budai hídfő",
        "lat": "47.476746",
        "lon": "19.059143",
        "parent": ""
    },
    {
        "id": "CSF02229",
        "name": "Gazdagréti tér",
        "lat": "47.473296",
        "lon": "18.992582",
        "parent": ""
    },
    {
        "id": "CSF02232",
        "name": "Örsöddűlő",
        "lat": "47.455223",
        "lon": "18.993411",
        "parent": ""
    },
    {
        "id": "CSF02234",
        "name": "Kelenföldi Erőmű",
        "lat": "47.464501",
        "lon": "19.052965",
        "parent": ""
    },
    {
        "id": "CSF02243",
        "name": "Regős köz",
        "lat": "47.468441",
        "lon": "19.003426",
        "parent": ""
    },
    {
        "id": "CSF02245",
        "name": "Torbágy utca",
        "lat": "47.467890",
        "lon": "18.998604",
        "parent": ""
    },
    {
        "id": "CSF02246",
        "name": "Előpatak utca",
        "lat": "47.471331",
        "lon": "19.010720",
        "parent": ""
    },
    {
        "id": "CSF02252",
        "name": "Pető Intézet (Villányi út)",
        "lat": "47.481761",
        "lon": "19.032765",
        "parent": ""
    },
    {
        "id": "CSF02255",
        "name": "Ménesi út",
        "lat": "47.481753",
        "lon": "19.038251",
        "parent": ""
    },
    {
        "id": "CSF02262",
        "name": "Hollókő utca",
        "lat": "47.475527",
        "lon": "19.030140",
        "parent": ""
    },
    {
        "id": "CSF02265",
        "name": "Állvány utca",
        "lat": "47.445443",
        "lon": "19.028353",
        "parent": ""
    },
    {
        "id": "CSF02266",
        "name": "Madárhegy",
        "lat": "47.462064",
        "lon": "18.993537",
        "parent": ""
    },
    {
        "id": "CSF02269",
        "name": "Csillebérc, KFKI",
        "lat": "47.486780",
        "lon": "18.954514",
        "parent": ""
    },
    {
        "id": "CSF02271",
        "name": "KFKI étterem",
        "lat": "47.489067",
        "lon": "18.958800",
        "parent": ""
    },
    {
        "id": "CSF02272",
        "name": "Magas út",
        "lat": "47.490397",
        "lon": "18.961024",
        "parent": ""
    },
    {
        "id": "CSF02276",
        "name": "Hó utca",
        "lat": "47.486471",
        "lon": "18.992162",
        "parent": ""
    },
    {
        "id": "CSF02278",
        "name": "Hajnalka utca",
        "lat": "47.485127",
        "lon": "18.994068",
        "parent": ""
    },
    {
        "id": "CSF02280",
        "name": "Tamási Áron utca",
        "lat": "47.493608",
        "lon": "19.002505",
        "parent": ""
    },
    {
        "id": "CSF02281",
        "name": "Mártonhegyi út",
        "lat": "47.490361",
        "lon": "19.002280",
        "parent": ""
    },
    {
        "id": "CSF02283",
        "name": "Kempelen Farkas utca",
        "lat": "47.487991",
        "lon": "19.004093",
        "parent": ""
    },
    {
        "id": "CSF02286",
        "name": "Boldog Teréz anya tér",
        "lat": "47.488776",
        "lon": "19.006892",
        "parent": ""
    },
    {
        "id": "CSF02288",
        "name": "Bürök utca",
        "lat": "47.491349",
        "lon": "19.009664",
        "parent": ""
    },
    {
        "id": "CSF02291",
        "name": "Németvölgyi út",
        "lat": "47.493037",
        "lon": "19.012055",
        "parent": ""
    },
    {
        "id": "CSF02293",
        "name": "Apor Vilmos tér",
        "lat": "47.490804",
        "lon": "19.014340",
        "parent": ""
    },
    {
        "id": "CSF02297",
        "name": "Vas Gereben utca",
        "lat": "47.489266",
        "lon": "19.009652",
        "parent": ""
    },
    {
        "id": "CSF02298",
        "name": "Zólyomi lépcső",
        "lat": "47.490342",
        "lon": "19.012040",
        "parent": ""
    },
    {
        "id": "CSF02307",
        "name": "Kiss János altábornagy utca",
        "lat": "47.492273",
        "lon": "19.016668",
        "parent": ""
    },
    {
        "id": "CSF02311",
        "name": "Tartsay Vilmos utca",
        "lat": "47.492387",
        "lon": "19.024075",
        "parent": ""
    },
    {
        "id": "CSF02315",
        "name": "Művész út",
        "lat": "47.496217",
        "lon": "18.984032",
        "parent": ""
    },
    {
        "id": "CSF02319",
        "name": "Városkút",
        "lat": "47.500252",
        "lon": "18.989512",
        "parent": ""
    },
    {
        "id": "CSF02323",
        "name": "Erdei iskola",
        "lat": "47.507259",
        "lon": "18.994526",
        "parent": ""
    },
    {
        "id": "CSF02324",
        "name": "Esze Tamás iskola",
        "lat": "47.507247",
        "lon": "18.998116",
        "parent": ""
    },
    {
        "id": "CSF02326",
        "name": "Orgonás",
        "lat": "47.506692",
        "lon": "19.002835",
        "parent": ""
    },
    {
        "id": "CSF02335",
        "name": "Maros utca",
        "lat": "47.505649",
        "lon": "19.021725",
        "parent": ""
    },
    {
        "id": "CSF02338",
        "name": "Barabás Villa",
        "lat": "47.505010",
        "lon": "19.018733",
        "parent": ""
    },
    {
        "id": "CSF02339",
        "name": "Temes utca",
        "lat": "47.506768",
        "lon": "19.015135",
        "parent": ""
    },
    {
        "id": "CSF02344",
        "name": "Rőzse köz",
        "lat": "47.508234",
        "lon": "19.003804",
        "parent": ""
    },
    {
        "id": "CSF02347",
        "name": "Józsa Béla köz",
        "lat": "47.509235",
        "lon": "18.999727",
        "parent": ""
    },
    {
        "id": "CSF02349",
        "name": "Rendelőintézet",
        "lat": "47.511548",
        "lon": "19.004758",
        "parent": ""
    },
    {
        "id": "CSF02351",
        "name": "Virányos út",
        "lat": "47.512605",
        "lon": "19.000621",
        "parent": ""
    },
    {
        "id": "CSF02352",
        "name": "Moholy-Nagy Művészeti Egyetem",
        "lat": "47.516516",
        "lon": "18.990213",
        "parent": ""
    },
    {
        "id": "CSF02355",
        "name": "Fészek utca",
        "lat": "47.511784",
        "lon": "18.997229",
        "parent": ""
    },
    {
        "id": "CSF02357",
        "name": "Kútvölgyi lejtő, Traumatológia",
        "lat": "47.511367",
        "lon": "19.000727",
        "parent": ""
    },
    {
        "id": "CSF02361",
        "name": "György Aladár utca",
        "lat": "47.511488",
        "lon": "18.989622",
        "parent": ""
    },
    {
        "id": "CSF02365",
        "name": "Orvosi rendelő",
        "lat": "47.483509",
        "lon": "18.996014",
        "parent": ""
    },
    {
        "id": "CSF02367",
        "name": "Hadik András utca",
        "lat": "47.509907",
        "lon": "18.994277",
        "parent": ""
    },
    {
        "id": "CSF02368",
        "name": "Lelesz utca",
        "lat": "47.509608",
        "lon": "18.992999",
        "parent": ""
    },
    {
        "id": "CSF02370",
        "name": "Felső Svábhegyi út",
        "lat": "47.508327",
        "lon": "18.990302",
        "parent": ""
    },
    {
        "id": "CSF02372",
        "name": "Városkúti út",
        "lat": "47.507242",
        "lon": "18.988279",
        "parent": ""
    },
    {
        "id": "CSF02374",
        "name": "Galgóczy utca",
        "lat": "47.511593",
        "lon": "18.986448",
        "parent": ""
    },
    {
        "id": "CSF02377",
        "name": "Zalai út",
        "lat": "47.511572",
        "lon": "18.984418",
        "parent": ""
    },
    {
        "id": "CSF02382",
        "name": "Zugliget, Libegő",
        "lat": "47.516527",
        "lon": "18.976388",
        "parent": ""
    },
    {
        "id": "CSF02383",
        "name": "Zugligeti út 64.",
        "lat": "47.516889",
        "lon": "18.980110",
        "parent": ""
    },
    {
        "id": "CSF02385",
        "name": "Szarvas Gábor út",
        "lat": "47.518056",
        "lon": "18.983919",
        "parent": ""
    },
    {
        "id": "CSF02388",
        "name": "Adonis utca",
        "lat": "47.503285",
        "lon": "18.990060",
        "parent": ""
    },
    {
        "id": "CSF02389",
        "name": "Istenhegyi lejtő",
        "lat": "47.505558",
        "lon": "18.992583",
        "parent": ""
    },
    {
        "id": "CSF02391",
        "name": "Óra út",
        "lat": "47.504629",
        "lon": "18.997975",
        "parent": ""
    },
    {
        "id": "CSF02393",
        "name": "Nógrádi utca",
        "lat": "47.503044",
        "lon": "19.002441",
        "parent": ""
    },
    {
        "id": "CSF02395",
        "name": "Pethényi út",
        "lat": "47.502527",
        "lon": "19.005875",
        "parent": ""
    },
    {
        "id": "CSF02397",
        "name": "Szent Orbán tér",
        "lat": "47.499232",
        "lon": "19.009016",
        "parent": ""
    },
    {
        "id": "CSF02411",
        "name": "Kék Golyó utca",
        "lat": "47.497752",
        "lon": "19.020779",
        "parent": ""
    },
    {
        "id": "CSF02413",
        "name": "Királyhágó tér",
        "lat": "47.495317",
        "lon": "19.019140",
        "parent": ""
    },
    {
        "id": "CSF02417",
        "name": "Csörsz utca",
        "lat": "47.490378",
        "lon": "19.024129",
        "parent": ""
    },
    {
        "id": "CSF02426",
        "name": "Nárcisz utca",
        "lat": "47.496049",
        "lon": "19.010901",
        "parent": ""
    },
    {
        "id": "CSF02427",
        "name": "Tarpatak utca",
        "lat": "47.509504",
        "lon": "18.997324",
        "parent": ""
    },
    {
        "id": "CSF02429",
        "name": "Vöröskő utca",
        "lat": "47.497015",
        "lon": "19.007530",
        "parent": ""
    },
    {
        "id": "CSF02431",
        "name": "Szendrő utca",
        "lat": "47.495323",
        "lon": "19.004452",
        "parent": ""
    },
    {
        "id": "CSF02436",
        "name": "Sólyom utca",
        "lat": "47.497061",
        "lon": "19.000037",
        "parent": ""
    },
    {
        "id": "CSF02437",
        "name": "Tamási Áron utca \/ Thomán István utca",
        "lat": "47.496944",
        "lon": "18.998146",
        "parent": ""
    },
    {
        "id": "CSF02443",
        "name": "Ordas út",
        "lat": "47.498396",
        "lon": "18.980936",
        "parent": ""
    },
    {
        "id": "CSF02445",
        "name": "Őzike köz",
        "lat": "47.499527",
        "lon": "18.976694",
        "parent": ""
    },
    {
        "id": "CSF02447",
        "name": "Fülemile út",
        "lat": "47.499619",
        "lon": "18.972911",
        "parent": ""
    },
    {
        "id": "CSF02449",
        "name": "Normafa, Gyermekvasút",
        "lat": "47.500419",
        "lon": "18.970561",
        "parent": ""
    },
    {
        "id": "CSF02451",
        "name": "Csillagvizsgáló",
        "lat": "47.500346",
        "lon": "18.964800",
        "parent": ""
    },
    {
        "id": "CSF02454",
        "name": "Csillebérc, Gyermekvasút",
        "lat": "47.497729",
        "lon": "18.964005",
        "parent": ""
    },
    {
        "id": "CSF02456",
        "name": "Sötétvágás utca",
        "lat": "47.494909",
        "lon": "18.964643",
        "parent": ""
    },
    {
        "id": "CSF02458",
        "name": "Svábhegy",
        "lat": "47.497736",
        "lon": "18.989603",
        "parent": ""
    },
    {
        "id": "CSF02481",
        "name": "Széll Kálmán tér",
        "lat": "47.506982",
        "lon": "19.024828",
        "parent": ""
    },
    {
        "id": "CSF02484",
        "name": "Hunyad köz",
        "lat": "47.511359",
        "lon": "18.981610",
        "parent": ""
    },
    {
        "id": "CSF02489",
        "name": "Normafa",
        "lat": "47.502819",
        "lon": "18.965728",
        "parent": ""
    },
    {
        "id": "CSF02493",
        "name": "Hajós Alfréd uszoda",
        "lat": "47.519677",
        "lon": "19.044142",
        "parent": ""
    },
    {
        "id": "CSF02495",
        "name": "Palatinus strand",
        "lat": "47.528490",
        "lon": "19.047729",
        "parent": ""
    },
    {
        "id": "CSF02496",
        "name": "Szabadtéri Színpad",
        "lat": "47.530147",
        "lon": "19.048617",
        "parent": ""
    },
    {
        "id": "CSF02498",
        "name": "Szállodák (Hotels)",
        "lat": "47.533425",
        "lon": "19.050735",
        "parent": ""
    },
    {
        "id": "CSF02501",
        "name": "Zenélőkút",
        "lat": "47.535786",
        "lon": "19.052628",
        "parent": ""
    },
    {
        "id": "CSF02503",
        "name": "Margitsziget \/ Árpád híd",
        "lat": "47.537426",
        "lon": "19.054143",
        "parent": ""
    },
    {
        "id": "CSF02504",
        "name": "Tisza utca",
        "lat": "47.523982",
        "lon": "19.058719",
        "parent": ""
    },
    {
        "id": "CSF02505",
        "name": "Parkmozi köz",
        "lat": "47.522672",
        "lon": "19.045238",
        "parent": ""
    },
    {
        "id": "CSF02508",
        "name": "Viza utca",
        "lat": "47.530491",
        "lon": "19.057731",
        "parent": ""
    },
    {
        "id": "CSF02511",
        "name": "Jászai Mari tér",
        "lat": "47.512968",
        "lon": "19.048991",
        "parent": ""
    },
    {
        "id": "CSF02512",
        "name": "Szent István park",
        "lat": "47.518060",
        "lon": "19.052040",
        "parent": ""
    },
    {
        "id": "CSF02516",
        "name": "Victor Hugo utca",
        "lat": "47.518188",
        "lon": "19.055771",
        "parent": ""
    },
    {
        "id": "CSF02521",
        "name": "Ipoly utca",
        "lat": "47.520249",
        "lon": "19.053959",
        "parent": ""
    },
    {
        "id": "CSF02523",
        "name": "Radnóti Miklós utca",
        "lat": "47.515071",
        "lon": "19.053622",
        "parent": ""
    },
    {
        "id": "CSF02535",
        "name": "Gyöngyösi utca",
        "lat": "47.549121",
        "lon": "19.073701",
        "parent": ""
    },
    {
        "id": "CSF02539",
        "name": "Gyöngyösi utca",
        "lat": "47.548038",
        "lon": "19.080937",
        "parent": ""
    },
    {
        "id": "CSF02540",
        "name": "Cziffra György park",
        "lat": "47.548527",
        "lon": "19.078545",
        "parent": ""
    },
    {
        "id": "CSF02542",
        "name": "Gyöngyösi utca",
        "lat": "47.546436",
        "lon": "19.089327",
        "parent": ""
    },
    {
        "id": "CSF02549",
        "name": "Futár utca",
        "lat": "47.538197",
        "lon": "19.089870",
        "parent": ""
    },
    {
        "id": "CSF02554",
        "name": "Fiastyúk utca",
        "lat": "47.540300",
        "lon": "19.085442",
        "parent": ""
    },
    {
        "id": "CSF02558",
        "name": "Násznagy utca",
        "lat": "47.543106",
        "lon": "19.082070",
        "parent": ""
    },
    {
        "id": "CSF02559",
        "name": "József Attila tér",
        "lat": "47.547252",
        "lon": "19.083900",
        "parent": ""
    },
    {
        "id": "CSF02562",
        "name": "Fiastyúk utca",
        "lat": "47.544299",
        "lon": "19.079193",
        "parent": ""
    },
    {
        "id": "CSF02564",
        "name": "Fiastyúk utca",
        "lat": "47.546029",
        "lon": "19.072205",
        "parent": ""
    },
    {
        "id": "CSF02569",
        "name": "Sporttelep",
        "lat": "47.533693",
        "lon": "19.059213",
        "parent": ""
    },
    {
        "id": "CSF02571",
        "name": "Karikás Frigyes utca",
        "lat": "47.536977",
        "lon": "19.066516",
        "parent": ""
    },
    {
        "id": "CSF02574",
        "name": "Vág utca",
        "lat": "47.523936",
        "lon": "19.055944",
        "parent": ""
    },
    {
        "id": "CSF02576",
        "name": "Pap Károly utca",
        "lat": "47.533642",
        "lon": "19.074572",
        "parent": ""
    },
    {
        "id": "CSF02588",
        "name": "Béke tér",
        "lat": "47.529730",
        "lon": "19.080614",
        "parent": ""
    },
    {
        "id": "CSF02592",
        "name": "Lehel utca \/ Róbert Károly körút",
        "lat": "47.524763",
        "lon": "19.079530",
        "parent": ""
    },
    {
        "id": "CSF02609",
        "name": "Dózsa György út",
        "lat": "47.524514",
        "lon": "19.063220",
        "parent": ""
    },
    {
        "id": "CSF02612",
        "name": "Lehel tér",
        "lat": "47.517013",
        "lon": "19.060212",
        "parent": ""
    },
    {
        "id": "CSF02620",
        "name": "Lehel utca \/ Dózsa György út",
        "lat": "47.520108",
        "lon": "19.070438",
        "parent": ""
    },
    {
        "id": "CSF02635",
        "name": "Petneházy utca",
        "lat": "47.531303",
        "lon": "19.085795",
        "parent": ""
    },
    {
        "id": "CSF02639",
        "name": "Kassák Lajos utca",
        "lat": "47.522485",
        "lon": "19.066481",
        "parent": ""
    },
    {
        "id": "CSF02645",
        "name": "Szegedi út",
        "lat": "47.528050",
        "lon": "19.083783",
        "parent": ""
    },
    {
        "id": "CSF02650",
        "name": "Radnóti Miklós utca",
        "lat": "47.515726",
        "lon": "19.050407",
        "parent": ""
    },
    {
        "id": "CSF02653",
        "name": "Angyalföld vasútállomás",
        "lat": "47.549082",
        "lon": "19.090063",
        "parent": ""
    },
    {
        "id": "CSF02656",
        "name": "Rokolya utca",
        "lat": "47.541754",
        "lon": "19.091919",
        "parent": ""
    },
    {
        "id": "CSF02658",
        "name": "Kucsma utca",
        "lat": "47.544555",
        "lon": "19.093549",
        "parent": ""
    },
    {
        "id": "CSF02660",
        "name": "Rokolya utca",
        "lat": "47.542430",
        "lon": "19.086895",
        "parent": ""
    },
    {
        "id": "CSF02663",
        "name": "Rozsnyay utca",
        "lat": "47.539850",
        "lon": "19.077159",
        "parent": ""
    },
    {
        "id": "CSF02670",
        "name": "Hun utca",
        "lat": "47.524098",
        "lon": "19.075100",
        "parent": ""
    },
    {
        "id": "CSF02671",
        "name": "Fáy utca",
        "lat": "47.534258",
        "lon": "19.087529",
        "parent": ""
    },
    {
        "id": "CSF02676",
        "name": "Frangepán utca",
        "lat": "47.534464",
        "lon": "19.082516",
        "parent": ""
    },
    {
        "id": "CSF02679",
        "name": "Forgách utca",
        "lat": "47.539240",
        "lon": "19.069996",
        "parent": ""
    },
    {
        "id": "CSF02680",
        "name": "Dózsa György út",
        "lat": "47.524653",
        "lon": "19.063321",
        "parent": ""
    },
    {
        "id": "CSF02684",
        "name": "Gyöngyösi utca",
        "lat": "47.548691",
        "lon": "19.073233",
        "parent": ""
    },
    {
        "id": "CSF02688",
        "name": "Árvavár utca",
        "lat": "47.535342",
        "lon": "19.115862",
        "parent": ""
    },
    {
        "id": "CSF02692",
        "name": "Állatkert",
        "lat": "47.517765",
        "lon": "19.077778",
        "parent": ""
    },
    {
        "id": "CSF02694",
        "name": "Széchenyi fürdő",
        "lat": "47.519180",
        "lon": "19.081816",
        "parent": ""
    },
    {
        "id": "CSF02699",
        "name": "Bethesda utca",
        "lat": "47.517659",
        "lon": "19.086920",
        "parent": ""
    },
    {
        "id": "CSF02702",
        "name": "Közlekedési Múzeum",
        "lat": "47.515606",
        "lon": "19.090311",
        "parent": ""
    },
    {
        "id": "CSF02706",
        "name": "Olof Palme sétány",
        "lat": "47.512325",
        "lon": "19.085462",
        "parent": ""
    },
    {
        "id": "CSF02708",
        "name": "Dvořák sétány",
        "lat": "47.510382",
        "lon": "19.084326",
        "parent": ""
    },
    {
        "id": "CSF02710",
        "name": "Ötvenhatosok tere",
        "lat": "47.506798",
        "lon": "19.085991",
        "parent": ""
    },
    {
        "id": "CSF02711",
        "name": "Zichy Géza utca",
        "lat": "47.510264",
        "lon": "19.090326",
        "parent": ""
    },
    {
        "id": "CSF02713",
        "name": "Vakok Intézete",
        "lat": "47.512872",
        "lon": "19.093710",
        "parent": ""
    },
    {
        "id": "CSF02717",
        "name": "Cházár András utca",
        "lat": "47.505828",
        "lon": "19.091398",
        "parent": ""
    },
    {
        "id": "CSF02718",
        "name": "Stefánia út \/ Thököly út",
        "lat": "47.508432",
        "lon": "19.094859",
        "parent": ""
    },
    {
        "id": "CSF02735",
        "name": "Egressy út \/ Stefánia út",
        "lat": "47.504787",
        "lon": "19.100414",
        "parent": ""
    },
    {
        "id": "CSF02737",
        "name": "Szobránc köz",
        "lat": "47.503273",
        "lon": "19.103787",
        "parent": ""
    },
    {
        "id": "CSF02743",
        "name": "Egressy út \/ Hungária körút",
        "lat": "47.506966",
        "lon": "19.104709",
        "parent": ""
    },
    {
        "id": "CSF02745",
        "name": "Jeszenák János utca",
        "lat": "47.511689",
        "lon": "19.125353",
        "parent": ""
    },
    {
        "id": "CSF02746",
        "name": "Róna utca",
        "lat": "47.506213",
        "lon": "19.123490",
        "parent": ""
    },
    {
        "id": "CSF02765",
        "name": "Álmos vezér útja",
        "lat": "47.507253",
        "lon": "19.140623",
        "parent": ""
    },
    {
        "id": "CSF02767",
        "name": "Füredi utca \/ Ond vezér útja",
        "lat": "47.506402",
        "lon": "19.141843",
        "parent": ""
    },
    {
        "id": "CSF02769",
        "name": "Ond vezér park",
        "lat": "47.506380",
        "lon": "19.146668",
        "parent": ""
    },
    {
        "id": "CSF02772",
        "name": "Ond vezér útja \/ Szentmihályi út",
        "lat": "47.507514",
        "lon": "19.150254",
        "parent": ""
    },
    {
        "id": "CSF02775",
        "name": "Füredi utca \/ Szentmihályi út",
        "lat": "47.510813",
        "lon": "19.147274",
        "parent": ""
    },
    {
        "id": "CSF02777",
        "name": "Csertő utca",
        "lat": "47.512454",
        "lon": "19.146527",
        "parent": ""
    },
    {
        "id": "CSF02781",
        "name": "Zsálya utca",
        "lat": "47.516023",
        "lon": "19.143298",
        "parent": ""
    },
    {
        "id": "CSF02783",
        "name": "Fischer István utca",
        "lat": "47.515178",
        "lon": "19.139570",
        "parent": ""
    },
    {
        "id": "CSF02786",
        "name": "Vezér utca \/ Fogarasi út",
        "lat": "47.513500",
        "lon": "19.136927",
        "parent": ""
    },
    {
        "id": "CSF02791",
        "name": "Mogyoródi út",
        "lat": "47.517474",
        "lon": "19.130171",
        "parent": ""
    },
    {
        "id": "CSF02795",
        "name": "Egressy tér",
        "lat": "47.514622",
        "lon": "19.119769",
        "parent": ""
    },
    {
        "id": "CSF02800",
        "name": "Turán utca",
        "lat": "47.516984",
        "lon": "19.123432",
        "parent": ""
    },
    {
        "id": "CSF02804",
        "name": "Egressy út \/ Vezér utca",
        "lat": "47.519237",
        "lon": "19.126788",
        "parent": ""
    },
    {
        "id": "CSF02807",
        "name": "Rákosmezei tér",
        "lat": "47.524470",
        "lon": "19.133183",
        "parent": ""
    },
    {
        "id": "CSF02810",
        "name": "Szugló utca \/ Cinkotai út",
        "lat": "47.526794",
        "lon": "19.127344",
        "parent": ""
    },
    {
        "id": "CSF02812",
        "name": "Komócsy utca",
        "lat": "47.521499",
        "lon": "19.122854",
        "parent": ""
    },
    {
        "id": "CSF02815",
        "name": "Szugló utca \/ Nagy Lajos király útja",
        "lat": "47.517282",
        "lon": "19.115847",
        "parent": ""
    },
    {
        "id": "CSF02820",
        "name": "Szugló utca \/ Róna utca",
        "lat": "47.514387",
        "lon": "19.111061",
        "parent": ""
    },
    {
        "id": "CSF02826",
        "name": "Bosnyák tér",
        "lat": "47.519805",
        "lon": "19.112655",
        "parent": ""
    },
    {
        "id": "CSF02846",
        "name": "Rákospatak utca \/ Csömöri út",
        "lat": "47.525583",
        "lon": "19.119852",
        "parent": ""
    },
    {
        "id": "CSF02848",
        "name": "Cinkotai út",
        "lat": "47.528478",
        "lon": "19.123613",
        "parent": ""
    },
    {
        "id": "CSF02853",
        "name": "Fűrész utca",
        "lat": "47.523489",
        "lon": "19.113595",
        "parent": ""
    },
    {
        "id": "CSF02858",
        "name": "Öv utca",
        "lat": "47.534453",
        "lon": "19.112774",
        "parent": ""
    },
    {
        "id": "CSF02861",
        "name": "Rákospatak utca",
        "lat": "47.528970",
        "lon": "19.107340",
        "parent": ""
    },
    {
        "id": "CSF02868",
        "name": "Nagy Lajos király útja \/ Czobor utca",
        "lat": "47.522521",
        "lon": "19.102060",
        "parent": ""
    },
    {
        "id": "CSF02875",
        "name": "Korong utca",
        "lat": "47.514651",
        "lon": "19.097227",
        "parent": ""
    },
    {
        "id": "CSF02880",
        "name": "Erzsébet királyné útja, aluljáró",
        "lat": "47.516806",
        "lon": "19.092861",
        "parent": ""
    },
    {
        "id": "CSF02893",
        "name": "Kacsóh Pongrác út",
        "lat": "47.518453",
        "lon": "19.088988",
        "parent": ""
    },
    {
        "id": "CSF02898",
        "name": "Kassai tér",
        "lat": "47.524005",
        "lon": "19.097957",
        "parent": ""
    },
    {
        "id": "CSF02904",
        "name": "Pándorfalu utca",
        "lat": "47.529642",
        "lon": "19.102885",
        "parent": ""
    },
    {
        "id": "CSF02907",
        "name": "Csáktornya park",
        "lat": "47.536467",
        "lon": "19.106950",
        "parent": ""
    },
    {
        "id": "CSF02909",
        "name": "Miskolci utca",
        "lat": "47.532377",
        "lon": "19.110519",
        "parent": ""
    },
    {
        "id": "CSF02913",
        "name": "Szentes utca",
        "lat": "47.526625",
        "lon": "19.117178",
        "parent": ""
    },
    {
        "id": "CSF02916",
        "name": "Róna utca",
        "lat": "47.512055",
        "lon": "19.115772",
        "parent": ""
    },
    {
        "id": "CSF02918",
        "name": "Törökőr utca",
        "lat": "47.508070",
        "lon": "19.108093",
        "parent": ""
    },
    {
        "id": "CSF02929",
        "name": "Pillangó utca",
        "lat": "47.503517",
        "lon": "19.118648",
        "parent": ""
    },
    {
        "id": "CSF02930",
        "name": "Kaffka Margit utca",
        "lat": "47.507920",
        "lon": "19.126552",
        "parent": ""
    },
    {
        "id": "CSF02932",
        "name": "Tihamér utca",
        "lat": "47.511768",
        "lon": "19.139775",
        "parent": ""
    },
    {
        "id": "CSF02935",
        "name": "Újváros park",
        "lat": "47.514755",
        "lon": "19.144944",
        "parent": ""
    },
    {
        "id": "CSF02936",
        "name": "Mályva utca",
        "lat": "47.511433",
        "lon": "19.132784",
        "parent": ""
    },
    {
        "id": "CSF02939",
        "name": "Gödöllői utca",
        "lat": "47.515502",
        "lon": "19.133395",
        "parent": ""
    },
    {
        "id": "CSF02942",
        "name": "Miskolci utca \/ Szugló utca",
        "lat": "47.524692",
        "lon": "19.124672",
        "parent": ""
    },
    {
        "id": "CSF02943",
        "name": "Fűrész utca \/ Szugló utca",
        "lat": "47.519923",
        "lon": "19.119068",
        "parent": ""
    },
    {
        "id": "CSF02945",
        "name": "Kerékgyártó utca",
        "lat": "47.532436",
        "lon": "19.117105",
        "parent": ""
    },
    {
        "id": "CSF02947",
        "name": "Fűrész utca",
        "lat": "47.526056",
        "lon": "19.104827",
        "parent": ""
    },
    {
        "id": "CSF02952",
        "name": "Nezsider park",
        "lat": "47.527138",
        "lon": "19.100825",
        "parent": ""
    },
    {
        "id": "CSF02954",
        "name": "Sárrét park",
        "lat": "47.533724",
        "lon": "19.106064",
        "parent": ""
    },
    {
        "id": "CSF02957",
        "name": "Posta Járműtelep",
        "lat": "47.510218",
        "lon": "19.112384",
        "parent": ""
    },
    {
        "id": "CSF02960",
        "name": "Amerikai út",
        "lat": "47.513924",
        "lon": "19.102922",
        "parent": ""
    },
    {
        "id": "CSF02963",
        "name": "Laky Adolf utca",
        "lat": "47.519796",
        "lon": "19.097557",
        "parent": ""
    },
    {
        "id": "CSF02968",
        "name": "Tihamér utca",
        "lat": "47.506964",
        "lon": "19.133315",
        "parent": ""
    },
    {
        "id": "CSF02974",
        "name": "Mexikói út",
        "lat": "47.520488",
        "lon": "19.091471",
        "parent": ""
    },
    {
        "id": "CSF02977",
        "name": "Ajtósi Dürer sor",
        "lat": "47.513886",
        "lon": "19.095655",
        "parent": ""
    },
    {
        "id": "CSF02982",
        "name": "Besztercebányai utca",
        "lat": "47.541480",
        "lon": "19.171726",
        "parent": ""
    },
    {
        "id": "CSF02988",
        "name": "Rákospalotai határút",
        "lat": "47.528677",
        "lon": "19.152825",
        "parent": ""
    },
    {
        "id": "CSF02994",
        "name": "József utca",
        "lat": "47.532303",
        "lon": "19.156252",
        "parent": ""
    },
    {
        "id": "CSF02996",
        "name": "Rákospalota, Csömöri-patak",
        "lat": "47.590233",
        "lon": "19.122553",
        "parent": ""
    },
    {
        "id": "CSF02998",
        "name": "Visonta utca",
        "lat": "47.586680",
        "lon": "19.121417",
        "parent": ""
    },
    {
        "id": "CSF03015",
        "name": "Közvágóhíd tér",
        "lat": "47.572134",
        "lon": "19.125451",
        "parent": ""
    },
    {
        "id": "CSF03018",
        "name": "Kovácsi Kálmán tér",
        "lat": "47.573746",
        "lon": "19.121562",
        "parent": ""
    },
    {
        "id": "CSF03020",
        "name": "Géza fejedelem tér",
        "lat": "47.568500",
        "lon": "19.117997",
        "parent": ""
    },
    {
        "id": "CSF03022",
        "name": "Pozsony utca",
        "lat": "47.568397",
        "lon": "19.117000",
        "parent": ""
    },
    {
        "id": "CSF03026",
        "name": "Rákospalota, Kossuth utca",
        "lat": "47.568015",
        "lon": "19.125761",
        "parent": ""
    },
    {
        "id": "CSF03035",
        "name": "Kossuth utca, lakótelep",
        "lat": "47.566158",
        "lon": "19.129343",
        "parent": ""
    },
    {
        "id": "CSF03037",
        "name": "Juhos utca",
        "lat": "47.564756",
        "lon": "19.128218",
        "parent": ""
    },
    {
        "id": "CSF03045",
        "name": "Széchenyi tér",
        "lat": "47.564224",
        "lon": "19.120881",
        "parent": ""
    },
    {
        "id": "CSF03050",
        "name": "Hubay Jenő tér",
        "lat": "47.562710",
        "lon": "19.115686",
        "parent": ""
    },
    {
        "id": "CSF03056",
        "name": "Beller Imre utca",
        "lat": "47.561390",
        "lon": "19.118199",
        "parent": ""
    },
    {
        "id": "CSF03059",
        "name": "Illyés Gyula utca",
        "lat": "47.558933",
        "lon": "19.120881",
        "parent": ""
    },
    {
        "id": "CSF03063",
        "name": "Fazekas sor",
        "lat": "47.557283",
        "lon": "19.125748",
        "parent": ""
    },
    {
        "id": "CSF03066",
        "name": "Szerencs utca",
        "lat": "47.553109",
        "lon": "19.111765",
        "parent": ""
    },
    {
        "id": "CSF03070",
        "name": "Rákos úti szakrendelő",
        "lat": "47.554016",
        "lon": "19.118868",
        "parent": ""
    },
    {
        "id": "CSF03075",
        "name": "Istvántelek vasútállomás",
        "lat": "47.550971",
        "lon": "19.107511",
        "parent": ""
    },
    {
        "id": "CSF03081",
        "name": "Patyolat utca",
        "lat": "47.547120",
        "lon": "19.109585",
        "parent": ""
    },
    {
        "id": "CSF03082",
        "name": "Széchenyi út",
        "lat": "47.545904",
        "lon": "19.112706",
        "parent": ""
    },
    {
        "id": "CSF03086",
        "name": "Széchenyi út",
        "lat": "47.544010",
        "lon": "19.114935",
        "parent": ""
    },
    {
        "id": "CSF03091",
        "name": "Perczel Mór utca",
        "lat": "47.539037",
        "lon": "19.112179",
        "parent": ""
    },
    {
        "id": "CSF03095",
        "name": "Pestújhelyi tér",
        "lat": "47.534190",
        "lon": "19.124545",
        "parent": ""
    },
    {
        "id": "CSF03096",
        "name": "Sztárai Mihály tér",
        "lat": "47.539872",
        "lon": "19.128669",
        "parent": ""
    },
    {
        "id": "CSF03100",
        "name": "Vág utca",
        "lat": "47.540067",
        "lon": "19.119540",
        "parent": ""
    },
    {
        "id": "CSF03102",
        "name": "Rákospalota, MÁV-telep",
        "lat": "47.541379",
        "lon": "19.121269",
        "parent": ""
    },
    {
        "id": "CSF03104",
        "name": "Vasutastelep utca",
        "lat": "47.542571",
        "lon": "19.121695",
        "parent": ""
    },
    {
        "id": "CSF03106",
        "name": "Bánkút utca",
        "lat": "47.546402",
        "lon": "19.127459",
        "parent": ""
    },
    {
        "id": "CSF03108",
        "name": "Szerencs utca",
        "lat": "47.546686",
        "lon": "19.126975",
        "parent": ""
    },
    {
        "id": "CSF03112",
        "name": "Szerencs utca",
        "lat": "47.549400",
        "lon": "19.122725",
        "parent": ""
    },
    {
        "id": "CSF03117",
        "name": "Klapka György utca",
        "lat": "47.551987",
        "lon": "19.122393",
        "parent": ""
    },
    {
        "id": "CSF03120",
        "name": "Kozák tér",
        "lat": "47.550222",
        "lon": "19.125485",
        "parent": ""
    },
    {
        "id": "CSF03122",
        "name": "Bercsényi Miklós utca",
        "lat": "47.548593",
        "lon": "19.123849",
        "parent": ""
    },
    {
        "id": "CSF03127",
        "name": "Rákospalotai köztemető",
        "lat": "47.551694",
        "lon": "19.134478",
        "parent": ""
    },
    {
        "id": "CSF03134",
        "name": "Thököly út",
        "lat": "47.538236",
        "lon": "19.133850",
        "parent": ""
    },
    {
        "id": "CSF03136",
        "name": "Apolló utca",
        "lat": "47.537142",
        "lon": "19.134937",
        "parent": ""
    },
    {
        "id": "CSF03139",
        "name": "Madách utca",
        "lat": "47.538998",
        "lon": "19.137098",
        "parent": ""
    },
    {
        "id": "CSF03143",
        "name": "Késmárk utca",
        "lat": "47.530007",
        "lon": "19.148564",
        "parent": ""
    },
    {
        "id": "CSF03154",
        "name": "Fő tér",
        "lat": "47.541762",
        "lon": "19.140692",
        "parent": ""
    },
    {
        "id": "CSF03157",
        "name": "Vásárcsarnok",
        "lat": "47.545302",
        "lon": "19.139144",
        "parent": ""
    },
    {
        "id": "CSF03166",
        "name": "Újpalota, Nyírpalota út",
        "lat": "47.547190",
        "lon": "19.141670",
        "parent": ""
    },
    {
        "id": "CSF03168",
        "name": "Opál utca",
        "lat": "47.542168",
        "lon": "19.117165",
        "parent": ""
    },
    {
        "id": "CSF03171",
        "name": "Árokhát út",
        "lat": "47.577216",
        "lon": "19.124641",
        "parent": ""
    },
    {
        "id": "CSF03174",
        "name": "Karatna tér",
        "lat": "47.543023",
        "lon": "19.108793",
        "parent": ""
    },
    {
        "id": "CSF03176",
        "name": "Székely Elek út",
        "lat": "47.579679",
        "lon": "19.126924",
        "parent": ""
    },
    {
        "id": "CSF03180",
        "name": "Rädda Barnen utca",
        "lat": "47.557219",
        "lon": "19.113498",
        "parent": ""
    },
    {
        "id": "CSF03181",
        "name": "Wesselényi utca",
        "lat": "47.549598",
        "lon": "19.116856",
        "parent": ""
    },
    {
        "id": "CSF03183",
        "name": "Beller Imre utca",
        "lat": "47.554933",
        "lon": "19.115634",
        "parent": ""
    },
    {
        "id": "CSF03185",
        "name": "Emlék tér",
        "lat": "47.536906",
        "lon": "19.126601",
        "parent": ""
    },
    {
        "id": "CSF03187",
        "name": "Ady Endre utca",
        "lat": "47.535357",
        "lon": "19.120603",
        "parent": ""
    },
    {
        "id": "CSF03190",
        "name": "Wesselényi utca",
        "lat": "47.544125",
        "lon": "19.123624",
        "parent": ""
    },
    {
        "id": "CSF03192",
        "name": "Sárfű utca",
        "lat": "47.547468",
        "lon": "19.134678",
        "parent": ""
    },
    {
        "id": "CSF03196",
        "name": "Molnár Viktor utca",
        "lat": "47.533557",
        "lon": "19.130408",
        "parent": ""
    },
    {
        "id": "CSF03198",
        "name": "Késmárk utca 20.",
        "lat": "47.531913",
        "lon": "19.144857",
        "parent": ""
    },
    {
        "id": "CSF03199",
        "name": "Fázis utca",
        "lat": "47.533940",
        "lon": "19.141300",
        "parent": ""
    },
    {
        "id": "CSF03202",
        "name": "Erdőkerülő utca",
        "lat": "47.539851",
        "lon": "19.146654",
        "parent": ""
    },
    {
        "id": "CSF03203",
        "name": "Szent Korona útja",
        "lat": "47.547494",
        "lon": "19.114807",
        "parent": ""
    },
    {
        "id": "CSF03205",
        "name": "Tóth István utca",
        "lat": "47.538125",
        "lon": "19.116821",
        "parent": ""
    },
    {
        "id": "CSF03210",
        "name": "Gusztáv utca",
        "lat": "47.539122",
        "lon": "19.174522",
        "parent": ""
    },
    {
        "id": "CSF03212",
        "name": "Csömöri út (Szlovák út)",
        "lat": "47.534754",
        "lon": "19.181892",
        "parent": ""
    },
    {
        "id": "CSF03214",
        "name": "Kisszentmihály, Baross utca",
        "lat": "47.536510",
        "lon": "19.178016",
        "parent": ""
    },
    {
        "id": "CSF03216",
        "name": "Szlovák út",
        "lat": "47.531701",
        "lon": "19.189387",
        "parent": ""
    },
    {
        "id": "CSF03218",
        "name": "Timur utca",
        "lat": "47.531809",
        "lon": "19.188644",
        "parent": ""
    },
    {
        "id": "CSF03219",
        "name": "Gusztáv utca",
        "lat": "47.535657",
        "lon": "19.166871",
        "parent": ""
    },
    {
        "id": "CSF03231",
        "name": "Mátyásföldi tér",
        "lat": "47.523318",
        "lon": "19.185103",
        "parent": ""
    },
    {
        "id": "CSF03232",
        "name": "Sasvár utca",
        "lat": "47.520139",
        "lon": "19.187890",
        "parent": ""
    },
    {
        "id": "CSF03236",
        "name": "Fuvallat utca",
        "lat": "47.510005",
        "lon": "19.185326",
        "parent": ""
    },
    {
        "id": "CSF03238",
        "name": "Ballada utca",
        "lat": "47.504210",
        "lon": "19.188212",
        "parent": ""
    },
    {
        "id": "CSF03240",
        "name": "Galgahévíz utca",
        "lat": "47.503635",
        "lon": "19.183399",
        "parent": ""
    },
    {
        "id": "CSF03244",
        "name": "Sashalom",
        "lat": "47.508917",
        "lon": "19.179569",
        "parent": ""
    },
    {
        "id": "CSF03247",
        "name": "Margit utca",
        "lat": "47.511679",
        "lon": "19.176575",
        "parent": ""
    },
    {
        "id": "CSF03249",
        "name": "Budapesti út",
        "lat": "47.516309",
        "lon": "19.171090",
        "parent": ""
    },
    {
        "id": "CSF03255",
        "name": "József utca",
        "lat": "47.520937",
        "lon": "19.166785",
        "parent": ""
    },
    {
        "id": "CSF03258",
        "name": "Csömöri út",
        "lat": "47.528510",
        "lon": "19.166975",
        "parent": ""
    },
    {
        "id": "CSF03260",
        "name": "József utca",
        "lat": "47.526163",
        "lon": "19.162235",
        "parent": ""
    },
    {
        "id": "CSF03265",
        "name": "Rákóczi út",
        "lat": "47.524305",
        "lon": "19.157484",
        "parent": ""
    },
    {
        "id": "CSF03268",
        "name": "Batthyány utca",
        "lat": "47.518446",
        "lon": "19.161409",
        "parent": ""
    },
    {
        "id": "CSF03269",
        "name": "Rákosi út",
        "lat": "47.518190",
        "lon": "19.160911",
        "parent": ""
    },
    {
        "id": "CSF03270",
        "name": "Budapesti út",
        "lat": "47.515169",
        "lon": "19.163878",
        "parent": ""
    },
    {
        "id": "CSF03277",
        "name": "Pálya utca",
        "lat": "47.521742",
        "lon": "19.152586",
        "parent": ""
    },
    {
        "id": "CSF03281",
        "name": "Rákosszentmihály vasútállomás",
        "lat": "47.519861",
        "lon": "19.148071",
        "parent": ""
    },
    {
        "id": "CSF03283",
        "name": "Rózsa utca",
        "lat": "47.515969",
        "lon": "19.155940",
        "parent": ""
    },
    {
        "id": "CSF03284",
        "name": "Raktárak",
        "lat": "47.536570",
        "lon": "19.245431",
        "parent": ""
    },
    {
        "id": "CSF03286",
        "name": "Cinkotai autóbuszgarázs",
        "lat": "47.498613",
        "lon": "19.237858",
        "parent": ""
    },
    {
        "id": "CSF03291",
        "name": "Injekcióüzem",
        "lat": "47.496085",
        "lon": "19.231790",
        "parent": ""
    },
    {
        "id": "CSF03293",
        "name": "Cinkota alsó",
        "lat": "47.526364",
        "lon": "19.220986",
        "parent": ""
    },
    {
        "id": "CSF03297",
        "name": "Állás utca",
        "lat": "47.529351",
        "lon": "19.194625",
        "parent": ""
    },
    {
        "id": "CSF03300",
        "name": "Ostoros út 61.",
        "lat": "47.523440",
        "lon": "19.208932",
        "parent": ""
    },
    {
        "id": "CSF03302",
        "name": "Csókakő utca",
        "lat": "47.521880",
        "lon": "19.215354",
        "parent": ""
    },
    {
        "id": "CSF03304",
        "name": "Cinkota",
        "lat": "47.520147",
        "lon": "19.219802",
        "parent": ""
    },
    {
        "id": "CSF03306",
        "name": "Vidámvásár utca",
        "lat": "47.520062",
        "lon": "19.219179",
        "parent": ""
    },
    {
        "id": "CSF03308",
        "name": "Mátyásföld, repülőtér",
        "lat": "47.511601",
        "lon": "19.193735",
        "parent": ""
    },
    {
        "id": "CSF03313",
        "name": "Pilóta utca",
        "lat": "47.505439",
        "lon": "19.198297",
        "parent": ""
    },
    {
        "id": "CSF03314",
        "name": "Diósy Lajos utca",
        "lat": "47.506675",
        "lon": "19.204700",
        "parent": ""
    },
    {
        "id": "CSF03316",
        "name": "Újszász utca",
        "lat": "47.509022",
        "lon": "19.208351",
        "parent": ""
    },
    {
        "id": "CSF03319",
        "name": "Bökényföldi út",
        "lat": "47.508760",
        "lon": "19.209299",
        "parent": ""
    },
    {
        "id": "CSF03320",
        "name": "Hunyadvár utca",
        "lat": "47.512027",
        "lon": "19.204270",
        "parent": ""
    },
    {
        "id": "CSF03322",
        "name": "Bökényföldi út",
        "lat": "47.514369",
        "lon": "19.202777",
        "parent": ""
    },
    {
        "id": "CSF03325",
        "name": "Anilin utca",
        "lat": "47.513378",
        "lon": "19.219510",
        "parent": ""
    },
    {
        "id": "CSF03327",
        "name": "Georgina utca",
        "lat": "47.518386",
        "lon": "19.226709",
        "parent": ""
    },
    {
        "id": "CSF03334",
        "name": "Ilonatelep",
        "lat": "47.525596",
        "lon": "19.228974",
        "parent": ""
    },
    {
        "id": "CSF03337",
        "name": "Erdei bekötőút",
        "lat": "47.507727",
        "lon": "19.235322",
        "parent": ""
    },
    {
        "id": "CSF03339",
        "name": "Margit utca",
        "lat": "47.517473",
        "lon": "19.190746",
        "parent": ""
    },
    {
        "id": "CSF03343",
        "name": "Szent Korona utca",
        "lat": "47.529955",
        "lon": "19.178499",
        "parent": ""
    },
    {
        "id": "CSF03345",
        "name": "Garat utca",
        "lat": "47.506210",
        "lon": "19.181209",
        "parent": ""
    },
    {
        "id": "CSF03348",
        "name": "Péterke utca",
        "lat": "47.533239",
        "lon": "19.185353",
        "parent": ""
    },
    {
        "id": "CSF03349",
        "name": "Baross utca",
        "lat": "47.533215",
        "lon": "19.169226",
        "parent": ""
    },
    {
        "id": "CSF03351",
        "name": "Szilas-patak",
        "lat": "47.529946",
        "lon": "19.186719",
        "parent": ""
    },
    {
        "id": "CSF03352",
        "name": "Ida utca",
        "lat": "47.526164",
        "lon": "19.182254",
        "parent": ""
    },
    {
        "id": "CSF03356",
        "name": "Sasvár utca",
        "lat": "47.514476",
        "lon": "19.173303",
        "parent": ""
    },
    {
        "id": "CSF03357",
        "name": "Szent Korona utca",
        "lat": "47.525885",
        "lon": "19.169545",
        "parent": ""
    },
    {
        "id": "CSF03359",
        "name": "Szent Korona utca",
        "lat": "47.523677",
        "lon": "19.164753",
        "parent": ""
    },
    {
        "id": "CSF03361",
        "name": "Baross utca",
        "lat": "47.526462",
        "lon": "19.154992",
        "parent": ""
    },
    {
        "id": "CSF03364",
        "name": "Szent Korona utca",
        "lat": "47.520454",
        "lon": "19.158625",
        "parent": ""
    },
    {
        "id": "CSF03368",
        "name": "Sashalmi tér",
        "lat": "47.509640",
        "lon": "19.170311",
        "parent": ""
    },
    {
        "id": "CSF03370",
        "name": "Baross utca",
        "lat": "47.524308",
        "lon": "19.150074",
        "parent": ""
    },
    {
        "id": "CSF03371",
        "name": "Szent Korona utcai lakótelep",
        "lat": "47.518485",
        "lon": "19.153429",
        "parent": ""
    },
    {
        "id": "CSF03377",
        "name": "Felsőmalom utca",
        "lat": "47.526162",
        "lon": "19.201623",
        "parent": ""
    },
    {
        "id": "CSF03379",
        "name": "Cinkota",
        "lat": "47.519234",
        "lon": "19.217182",
        "parent": ""
    },
    {
        "id": "CSF03382",
        "name": "Papír utca",
        "lat": "47.510450",
        "lon": "19.213035",
        "parent": ""
    },
    {
        "id": "CSF03385",
        "name": "Farkashalom utca",
        "lat": "47.512033",
        "lon": "19.216472",
        "parent": ""
    },
    {
        "id": "CSF03386",
        "name": "Cinke utca",
        "lat": "47.517128",
        "lon": "19.222874",
        "parent": ""
    },
    {
        "id": "CSF03389",
        "name": "Jókai Mór utca",
        "lat": "47.504998",
        "lon": "19.194506",
        "parent": ""
    },
    {
        "id": "CSF03390",
        "name": "Alsómalom utca",
        "lat": "47.524768",
        "lon": "19.204806",
        "parent": ""
    },
    {
        "id": "CSF03393",
        "name": "Jókai Mór utca (Rendőrség)",
        "lat": "47.510707",
        "lon": "19.190329",
        "parent": ""
    },
    {
        "id": "CSF03394",
        "name": "Csinszka utca",
        "lat": "47.515515",
        "lon": "19.206465",
        "parent": ""
    },
    {
        "id": "CSF03397",
        "name": "Mátyásföld, Imre utca",
        "lat": "47.513621",
        "lon": "19.200339",
        "parent": ""
    },
    {
        "id": "CSF03402",
        "name": "Zsemlékes út",
        "lat": "47.503028",
        "lon": "19.214365",
        "parent": ""
    },
    {
        "id": "CSF03403",
        "name": "EGIS Gyógyszergyár",
        "lat": "47.496761",
        "lon": "19.225136",
        "parent": ""
    },
    {
        "id": "CSF03405",
        "name": "Cinkotai köztemető",
        "lat": "47.530743",
        "lon": "19.236226",
        "parent": ""
    },
    {
        "id": "CSF03408",
        "name": "Gida utca",
        "lat": "47.514806",
        "lon": "19.191665",
        "parent": ""
    },
    {
        "id": "CSF03409",
        "name": "Árpádföld",
        "lat": "47.532978",
        "lon": "19.212553",
        "parent": ""
    },
    {
        "id": "CSF03411",
        "name": "Szabadságtelep",
        "lat": "47.537404",
        "lon": "19.206185",
        "parent": ""
    },
    {
        "id": "CSF03414",
        "name": "Cinkota",
        "lat": "47.519436",
        "lon": "19.217421",
        "parent": ""
    },
    {
        "id": "CSF03416",
        "name": "Mátyásföld alsó",
        "lat": "47.515986",
        "lon": "19.207455",
        "parent": ""
    },
    {
        "id": "CSF03417",
        "name": "Mátyásföld, Imre utca",
        "lat": "47.513545",
        "lon": "19.199582",
        "parent": ""
    },
    {
        "id": "CSF03419",
        "name": "Mátyásföld, repülőtér",
        "lat": "47.511857",
        "lon": "19.194054",
        "parent": ""
    },
    {
        "id": "CSF03421",
        "name": "Ilonatelep",
        "lat": "47.526627",
        "lon": "19.229402",
        "parent": ""
    },
    {
        "id": "CSF03423",
        "name": "Nagyicce",
        "lat": "47.507016",
        "lon": "19.167690",
        "parent": ""
    },
    {
        "id": "CSF03425",
        "name": "Sashalom",
        "lat": "47.508952",
        "lon": "19.178647",
        "parent": ""
    },
    {
        "id": "CSF03427",
        "name": "Frangepán utca",
        "lat": "47.456192",
        "lon": "19.201321",
        "parent": ""
    },
    {
        "id": "CSF03430",
        "name": "Lőrinci út",
        "lat": "47.453296",
        "lon": "19.220303",
        "parent": ""
    },
    {
        "id": "CSF03433",
        "name": "Ebergény utca",
        "lat": "47.490841",
        "lon": "19.302884",
        "parent": ""
    },
    {
        "id": "CSF03435",
        "name": "Pöröly utca",
        "lat": "47.491464",
        "lon": "19.297353",
        "parent": ""
    },
    {
        "id": "CSF03437",
        "name": "Sági utca",
        "lat": "47.473707",
        "lon": "19.273463",
        "parent": ""
    },
    {
        "id": "CSF03440",
        "name": "Czeglédi Mihály utca",
        "lat": "47.489672",
        "lon": "19.290258",
        "parent": ""
    },
    {
        "id": "CSF03442",
        "name": "Rákoscsaba vasútállomás",
        "lat": "47.491325",
        "lon": "19.281968",
        "parent": ""
    },
    {
        "id": "CSF03443",
        "name": "Aranykút utca",
        "lat": "47.493847",
        "lon": "19.278015",
        "parent": ""
    },
    {
        "id": "CSF03445",
        "name": "Színes utca",
        "lat": "47.490686",
        "lon": "19.305670",
        "parent": ""
    },
    {
        "id": "CSF03447",
        "name": "Hősök tere",
        "lat": "47.489610",
        "lon": "19.259596",
        "parent": ""
    },
    {
        "id": "CSF03449",
        "name": "Vidor utca",
        "lat": "47.495121",
        "lon": "19.240659",
        "parent": ""
    },
    {
        "id": "CSF03452",
        "name": "Gyöngytyúk utca",
        "lat": "47.490836",
        "lon": "19.243218",
        "parent": ""
    },
    {
        "id": "CSF03454",
        "name": "Liget sor",
        "lat": "47.488086",
        "lon": "19.244024",
        "parent": ""
    },
    {
        "id": "CSF03459",
        "name": "Rákosliget vasútállomás",
        "lat": "47.486107",
        "lon": "19.258627",
        "parent": ""
    },
    {
        "id": "CSF03463",
        "name": "Bártfai utca",
        "lat": "47.492998",
        "lon": "19.268767",
        "parent": ""
    },
    {
        "id": "CSF03465",
        "name": "Ároktő út",
        "lat": "47.491516",
        "lon": "19.264972",
        "parent": ""
    },
    {
        "id": "CSF03469",
        "name": "XVIII. utca",
        "lat": "47.492139",
        "lon": "19.260220",
        "parent": ""
    },
    {
        "id": "CSF03471",
        "name": "Tarack utca",
        "lat": "47.492660",
        "lon": "19.251705",
        "parent": ""
    },
    {
        "id": "CSF03474",
        "name": "Szárny utca",
        "lat": "47.480758",
        "lon": "19.264914",
        "parent": ""
    },
    {
        "id": "CSF03481",
        "name": "Lemberg utca",
        "lat": "47.484123",
        "lon": "19.278688",
        "parent": ""
    },
    {
        "id": "CSF03485",
        "name": "Csaba vezér tér",
        "lat": "47.487031",
        "lon": "19.286833",
        "parent": ""
    },
    {
        "id": "CSF03488",
        "name": "Alsódabas utca",
        "lat": "47.483108",
        "lon": "19.289662",
        "parent": ""
    },
    {
        "id": "CSF03492",
        "name": "Óvónő utca",
        "lat": "47.485460",
        "lon": "19.282283",
        "parent": ""
    },
    {
        "id": "CSF03493",
        "name": "Regélő utca",
        "lat": "47.477370",
        "lon": "19.292617",
        "parent": ""
    },
    {
        "id": "CSF03495",
        "name": "Nagyszentmiklósi út",
        "lat": "47.471959",
        "lon": "19.294894",
        "parent": ""
    },
    {
        "id": "CSF03500",
        "name": "Nyomdász utca",
        "lat": "47.465345",
        "lon": "19.308671",
        "parent": ""
    },
    {
        "id": "CSF03508",
        "name": "Szabadság sugárút",
        "lat": "47.471307",
        "lon": "19.286632",
        "parent": ""
    },
    {
        "id": "CSF03510",
        "name": "Tápióbicske utca",
        "lat": "47.472186",
        "lon": "19.278756",
        "parent": ""
    },
    {
        "id": "CSF03513",
        "name": "Oroszvár utca",
        "lat": "47.474523",
        "lon": "19.270554",
        "parent": ""
    },
    {
        "id": "CSF03515",
        "name": "Mezőtárkány utca",
        "lat": "47.477149",
        "lon": "19.263819",
        "parent": ""
    },
    {
        "id": "CSF03517",
        "name": "Széchenyi utca",
        "lat": "47.473713",
        "lon": "19.253887",
        "parent": ""
    },
    {
        "id": "CSF03528",
        "name": "Rákoshegy vasútállomás",
        "lat": "47.468016",
        "lon": "19.244368",
        "parent": ""
    },
    {
        "id": "CSF03529",
        "name": "Lőrinci út",
        "lat": "47.469627",
        "lon": "19.237476",
        "parent": ""
    },
    {
        "id": "CSF03534",
        "name": "Bánya part",
        "lat": "47.471296",
        "lon": "19.239353",
        "parent": ""
    },
    {
        "id": "CSF03536",
        "name": "Bulyovszky utca",
        "lat": "47.473995",
        "lon": "19.242015",
        "parent": ""
    },
    {
        "id": "CSF03537",
        "name": "Árpád fejedelem utca",
        "lat": "47.476450",
        "lon": "19.244459",
        "parent": ""
    },
    {
        "id": "CSF03541",
        "name": "Bakancsos utca",
        "lat": "47.482235",
        "lon": "19.243724",
        "parent": ""
    },
    {
        "id": "CSF03544",
        "name": "Kis utca",
        "lat": "47.483306",
        "lon": "19.238599",
        "parent": ""
    },
    {
        "id": "CSF03546",
        "name": "Borsó utca",
        "lat": "47.484150",
        "lon": "19.233779",
        "parent": ""
    },
    {
        "id": "CSF03563",
        "name": "Bocskai István utca",
        "lat": "47.456551",
        "lon": "19.232754",
        "parent": ""
    },
    {
        "id": "CSF03565",
        "name": "Orgoványi utca",
        "lat": "47.453223",
        "lon": "19.229242",
        "parent": ""
    },
    {
        "id": "CSF03567",
        "name": "Óvónő utca",
        "lat": "47.481709",
        "lon": "19.284768",
        "parent": ""
    },
    {
        "id": "CSF03568",
        "name": "Nyomdok utca",
        "lat": "47.466683",
        "lon": "19.305487",
        "parent": ""
    },
    {
        "id": "CSF03570",
        "name": "Erzsébet körút",
        "lat": "47.460217",
        "lon": "19.306788",
        "parent": ""
    },
    {
        "id": "CSF03574",
        "name": "Olcsva utca",
        "lat": "47.467964",
        "lon": "19.301979",
        "parent": ""
    },
    {
        "id": "CSF03577",
        "name": "Bártfai utca",
        "lat": "47.497364",
        "lon": "19.264226",
        "parent": ""
    },
    {
        "id": "CSF03581",
        "name": "Jászivány utca",
        "lat": "47.496041",
        "lon": "19.274400",
        "parent": ""
    },
    {
        "id": "CSF03583",
        "name": "Gőzös utca",
        "lat": "47.494653",
        "lon": "19.287009",
        "parent": ""
    },
    {
        "id": "CSF03584",
        "name": "Rákoscsaba-Újtelep, Tóalmás utca",
        "lat": "47.499349",
        "lon": "19.286705",
        "parent": ""
    },
    {
        "id": "CSF03586",
        "name": "Rózsaszál utca",
        "lat": "47.463746",
        "lon": "19.297468",
        "parent": ""
    },
    {
        "id": "CSF03587",
        "name": "Bulyovszky utca",
        "lat": "47.471018",
        "lon": "19.251848",
        "parent": ""
    },
    {
        "id": "CSF03590",
        "name": "Ady Endre utca",
        "lat": "47.465958",
        "lon": "19.242019",
        "parent": ""
    },
    {
        "id": "CSF03591",
        "name": "Vörösmarty utca",
        "lat": "47.461584",
        "lon": "19.237725",
        "parent": ""
    },
    {
        "id": "CSF03594",
        "name": "Szent kereszt tér",
        "lat": "47.480956",
        "lon": "19.250161",
        "parent": ""
    },
    {
        "id": "CSF03597",
        "name": "Rákóczi Ferenc utca",
        "lat": "47.459069",
        "lon": "19.235223",
        "parent": ""
    },
    {
        "id": "CSF03600",
        "name": "Homokiszőlők",
        "lat": "47.455636",
        "lon": "19.215902",
        "parent": ""
    },
    {
        "id": "CSF03602",
        "name": "Császárfa utca",
        "lat": "47.474350",
        "lon": "19.293943",
        "parent": ""
    },
    {
        "id": "CSF03605",
        "name": "Városközpont (Ferihegyi út)",
        "lat": "47.479978",
        "lon": "19.256805",
        "parent": ""
    },
    {
        "id": "CSF03620",
        "name": "Szent Lőrinc-telep",
        "lat": "47.432681",
        "lon": "19.173700",
        "parent": ""
    },
    {
        "id": "CSF03623",
        "name": "Ipacsfa utca",
        "lat": "47.429788",
        "lon": "19.168587",
        "parent": ""
    },
    {
        "id": "CSF03625",
        "name": "Besence utca",
        "lat": "47.428129",
        "lon": "19.164967",
        "parent": ""
    },
    {
        "id": "CSF03632",
        "name": "Szentlőrinci út",
        "lat": "47.424986",
        "lon": "19.158154",
        "parent": ""
    },
    {
        "id": "CSF03634",
        "name": "Varjú utca",
        "lat": "47.433917",
        "lon": "19.182924",
        "parent": ""
    },
    {
        "id": "CSF03635",
        "name": "Obszervatórium",
        "lat": "47.430062",
        "lon": "19.182781",
        "parent": ""
    },
    {
        "id": "CSF03637",
        "name": "Gilice tér",
        "lat": "47.432110",
        "lon": "19.185358",
        "parent": ""
    },
    {
        "id": "CSF03639",
        "name": "Dalmady Győző utca",
        "lat": "47.433457",
        "lon": "19.194435",
        "parent": ""
    },
    {
        "id": "CSF03642",
        "name": "Péterhalmi út",
        "lat": "47.423240",
        "lon": "19.189543",
        "parent": ""
    },
    {
        "id": "CSF03644",
        "name": "Kettős-Körös utca",
        "lat": "47.419178",
        "lon": "19.182786",
        "parent": ""
    },
    {
        "id": "CSF03645",
        "name": "Szálfa utca",
        "lat": "47.415266",
        "lon": "19.186723",
        "parent": ""
    },
    {
        "id": "CSF03647",
        "name": "Vezér utca",
        "lat": "47.410867",
        "lon": "19.190352",
        "parent": ""
    },
    {
        "id": "CSF03651",
        "name": "Kisfaludy utca",
        "lat": "47.408783",
        "lon": "19.193655",
        "parent": ""
    },
    {
        "id": "CSF03653",
        "name": "Damjanich utca",
        "lat": "47.411361",
        "lon": "19.197641",
        "parent": ""
    },
    {
        "id": "CSF03655",
        "name": "Szigeti Kálmán utca",
        "lat": "47.404654",
        "lon": "19.198497",
        "parent": ""
    },
    {
        "id": "CSF03664",
        "name": "Ady Endre utca",
        "lat": "47.406109",
        "lon": "19.189511",
        "parent": ""
    },
    {
        "id": "CSF03665",
        "name": "Pestszentimre vasútáll. (Nagykőrösi út)",
        "lat": "47.403912",
        "lon": "19.186063",
        "parent": ""
    },
    {
        "id": "CSF03674",
        "name": "Pestszentimre felső vasútállomás",
        "lat": "47.413545",
        "lon": "19.173185",
        "parent": ""
    },
    {
        "id": "CSF03676",
        "name": "Lajos utca",
        "lat": "47.398995",
        "lon": "19.178552",
        "parent": ""
    },
    {
        "id": "CSF03679",
        "name": "Közdűlő út",
        "lat": "47.420034",
        "lon": "19.164824",
        "parent": ""
    },
    {
        "id": "CSF03682",
        "name": "Kamiontelep",
        "lat": "47.422034",
        "lon": "19.162184",
        "parent": ""
    },
    {
        "id": "CSF03684",
        "name": "Wlassics Gyula utca",
        "lat": "47.437796",
        "lon": "19.183987",
        "parent": ""
    },
    {
        "id": "CSF03686",
        "name": "Dobozi utca",
        "lat": "47.435782",
        "lon": "19.183438",
        "parent": ""
    },
    {
        "id": "CSF03688",
        "name": "Törvény utca",
        "lat": "47.413468",
        "lon": "19.188220",
        "parent": ""
    },
    {
        "id": "CSF03692",
        "name": "Iparvasút",
        "lat": "47.436504",
        "lon": "19.196552",
        "parent": ""
    },
    {
        "id": "CSF03695",
        "name": "Csévéző utca",
        "lat": "47.453105",
        "lon": "19.196607",
        "parent": ""
    },
    {
        "id": "CSF03699",
        "name": "Fedezék utca",
        "lat": "47.452122",
        "lon": "19.195099",
        "parent": ""
    },
    {
        "id": "CSF03700",
        "name": "Lőrinci temető",
        "lat": "47.447091",
        "lon": "19.191335",
        "parent": ""
    },
    {
        "id": "CSF03703",
        "name": "Gárdonyi Géza utca",
        "lat": "47.443340",
        "lon": "19.189014",
        "parent": ""
    },
    {
        "id": "CSF03706",
        "name": "Regény utca",
        "lat": "47.443829",
        "lon": "19.186999",
        "parent": ""
    },
    {
        "id": "CSF03707",
        "name": "Thököly út",
        "lat": "47.442642",
        "lon": "19.179695",
        "parent": ""
    },
    {
        "id": "CSF03711",
        "name": "Szarvas csárda tér",
        "lat": "47.440591",
        "lon": "19.185890",
        "parent": ""
    },
    {
        "id": "CSF03722",
        "name": "Iker utca",
        "lat": "47.435717",
        "lon": "19.169055",
        "parent": ""
    },
    {
        "id": "CSF03724",
        "name": "Kapocs utca",
        "lat": "47.401928",
        "lon": "19.202092",
        "parent": ""
    },
    {
        "id": "CSF03727",
        "name": "Kolozsvár utca (temető)",
        "lat": "47.438364",
        "lon": "19.157394",
        "parent": ""
    },
    {
        "id": "CSF03728",
        "name": "Csapó utca",
        "lat": "47.441009",
        "lon": "19.160837",
        "parent": ""
    },
    {
        "id": "CSF03730",
        "name": "Bozsik Stadion",
        "lat": "47.444402",
        "lon": "19.155265",
        "parent": ""
    },
    {
        "id": "CSF03732",
        "name": "Kispest vasútállomás",
        "lat": "47.447404",
        "lon": "19.158400",
        "parent": ""
    },
    {
        "id": "CSF03735",
        "name": "Lajosmizsei sorompó",
        "lat": "47.450901",
        "lon": "19.160374",
        "parent": ""
    },
    {
        "id": "CSF03741",
        "name": "Tinódi utca",
        "lat": "47.449611",
        "lon": "19.163414",
        "parent": ""
    },
    {
        "id": "CSF03742",
        "name": "Hőerőmű",
        "lat": "47.456194",
        "lon": "19.164724",
        "parent": ""
    },
    {
        "id": "CSF03745",
        "name": "Csillag utca",
        "lat": "47.457483",
        "lon": "19.161822",
        "parent": ""
    },
    {
        "id": "CSF03749",
        "name": "Lakatos úti lakótelep",
        "lat": "47.451820",
        "lon": "19.173580",
        "parent": ""
    },
    {
        "id": "CSF03752",
        "name": "Margó Tivadar utca",
        "lat": "47.447590",
        "lon": "19.167697",
        "parent": ""
    },
    {
        "id": "CSF03768",
        "name": "Baross utca",
        "lat": "47.444163",
        "lon": "19.175732",
        "parent": ""
    },
    {
        "id": "CSF03779",
        "name": "Kalász utca",
        "lat": "47.393071",
        "lon": "19.200418",
        "parent": ""
    },
    {
        "id": "CSF03781",
        "name": "Repülőtéri Rendőr Igazgatóság",
        "lat": "47.423073",
        "lon": "19.240299",
        "parent": ""
    },
    {
        "id": "CSF03782",
        "name": "Repülőtér, D porta",
        "lat": "47.426254",
        "lon": "19.236731",
        "parent": ""
    },
    {
        "id": "CSF03794",
        "name": "Gyergyó utca",
        "lat": "47.426181",
        "lon": "19.225935",
        "parent": ""
    },
    {
        "id": "CSF03795",
        "name": "Ganztelep, Mednyánszky utca",
        "lat": "47.423639",
        "lon": "19.234723",
        "parent": ""
    },
    {
        "id": "CSF03796",
        "name": "Kupeczky János utca",
        "lat": "47.424685",
        "lon": "19.230463",
        "parent": ""
    },
    {
        "id": "CSF03806",
        "name": "Honvéd utca",
        "lat": "47.434695",
        "lon": "19.201490",
        "parent": ""
    },
    {
        "id": "CSF03817",
        "name": "Gyékény tér",
        "lat": "47.430940",
        "lon": "19.196317",
        "parent": ""
    },
    {
        "id": "CSF03820",
        "name": "Szélső utca",
        "lat": "47.401037",
        "lon": "19.181654",
        "parent": ""
    },
    {
        "id": "CSF03822",
        "name": "Madarász utca",
        "lat": "47.437806",
        "lon": "19.192684",
        "parent": ""
    },
    {
        "id": "CSF03826",
        "name": "Csaba utca",
        "lat": "47.454501",
        "lon": "19.190044",
        "parent": ""
    },
    {
        "id": "CSF03827",
        "name": "Thököly út",
        "lat": "47.448606",
        "lon": "19.185672",
        "parent": ""
    },
    {
        "id": "CSF03830",
        "name": "Kosztolányi Dezső utca",
        "lat": "47.449358",
        "lon": "19.193054",
        "parent": ""
    },
    {
        "id": "CSF03831",
        "name": "Csörötnek utca",
        "lat": "47.449659",
        "lon": "19.181630",
        "parent": ""
    },
    {
        "id": "CSF03836",
        "name": "Kemény Zsigmond utca",
        "lat": "47.445844",
        "lon": "19.172233",
        "parent": ""
    },
    {
        "id": "CSF03837",
        "name": "Kispesti temető",
        "lat": "47.442836",
        "lon": "19.157797",
        "parent": ""
    },
    {
        "id": "CSF03841",
        "name": "Tinódi utca",
        "lat": "47.454253",
        "lon": "19.169219",
        "parent": ""
    },
    {
        "id": "CSF03843",
        "name": "Vajk utca",
        "lat": "47.455546",
        "lon": "19.185789",
        "parent": ""
    },
    {
        "id": "CSF03845",
        "name": "Pestszentlőrinc vasútállomás (átjáró)",
        "lat": "47.455475",
        "lon": "19.182315",
        "parent": ""
    },
    {
        "id": "CSF03846",
        "name": "Beszterce utca",
        "lat": "47.425550",
        "lon": "19.214580",
        "parent": ""
    },
    {
        "id": "CSF03848",
        "name": "Halomi út",
        "lat": "47.422437",
        "lon": "19.211761",
        "parent": ""
    },
    {
        "id": "CSF03856",
        "name": "Ungvár utca",
        "lat": "47.431261",
        "lon": "19.212043",
        "parent": ""
    },
    {
        "id": "CSF03857",
        "name": "Sas utca",
        "lat": "47.432712",
        "lon": "19.189476",
        "parent": ""
    },
    {
        "id": "CSF03859",
        "name": "Alacskai úti lakótelep",
        "lat": "47.413553",
        "lon": "19.201722",
        "parent": ""
    },
    {
        "id": "CSF03863",
        "name": "Tarkő utca",
        "lat": "47.425097",
        "lon": "19.207103",
        "parent": ""
    },
    {
        "id": "CSF03866",
        "name": "Nagyenyed utca",
        "lat": "47.427397",
        "lon": "19.203200",
        "parent": ""
    },
    {
        "id": "CSF03867",
        "name": "Rába utca",
        "lat": "47.427802",
        "lon": "19.221699",
        "parent": ""
    },
    {
        "id": "CSF03870",
        "name": "Szemeretelep vasútállomás",
        "lat": "47.443816",
        "lon": "19.212828",
        "parent": ""
    },
    {
        "id": "CSF03872",
        "name": "Zöldségpiac",
        "lat": "47.417107",
        "lon": "19.168541",
        "parent": ""
    },
    {
        "id": "CSF03873",
        "name": "Eke utca",
        "lat": "47.407261",
        "lon": "19.181670",
        "parent": ""
    },
    {
        "id": "CSF03875",
        "name": "Csolt utca",
        "lat": "47.399531",
        "lon": "19.191885",
        "parent": ""
    },
    {
        "id": "CSF03877",
        "name": "Olt utca",
        "lat": "47.429831",
        "lon": "19.199085",
        "parent": ""
    },
    {
        "id": "CSF03886",
        "name": "Bajcsy-Zsilinszky út",
        "lat": "47.433052",
        "lon": "19.206750",
        "parent": ""
    },
    {
        "id": "CSF03888",
        "name": "Autópiac",
        "lat": "47.432462",
        "lon": "19.149381",
        "parent": ""
    },
    {
        "id": "CSF03891",
        "name": "Karton utca",
        "lat": "47.434259",
        "lon": "19.161275",
        "parent": ""
    },
    {
        "id": "CSF03894",
        "name": "Csíky utca",
        "lat": "47.432266",
        "lon": "19.165847",
        "parent": ""
    },
    {
        "id": "CSF03899",
        "name": "Corvin körút",
        "lat": "47.462059",
        "lon": "19.134317",
        "parent": ""
    },
    {
        "id": "CSF03902",
        "name": "Nyáry Pál utca",
        "lat": "47.461993",
        "lon": "19.134228",
        "parent": ""
    },
    {
        "id": "CSF03906",
        "name": "Árpád utca",
        "lat": "47.454653",
        "lon": "19.151572",
        "parent": ""
    },
    {
        "id": "CSF03907",
        "name": "Használtcikk piac",
        "lat": "47.435754",
        "lon": "19.144588",
        "parent": ""
    },
    {
        "id": "CSF03924",
        "name": "Corvin körút",
        "lat": "47.459501",
        "lon": "19.126501",
        "parent": ""
    },
    {
        "id": "CSF03926",
        "name": "Corvin körút",
        "lat": "47.460253",
        "lon": "19.131936",
        "parent": ""
    },
    {
        "id": "CSF03930",
        "name": "Határ út",
        "lat": "47.464710",
        "lon": "19.126811",
        "parent": ""
    },
    {
        "id": "CSF03934",
        "name": "Lehel utca",
        "lat": "47.459551",
        "lon": "19.140139",
        "parent": ""
    },
    {
        "id": "CSF03943",
        "name": "Wesselényi utca",
        "lat": "47.460999",
        "lon": "19.153706",
        "parent": ""
    },
    {
        "id": "CSF03945",
        "name": "Kossuth tér",
        "lat": "47.457922",
        "lon": "19.144479",
        "parent": ""
    },
    {
        "id": "CSF03954",
        "name": "Fő utca",
        "lat": "47.456415",
        "lon": "19.147441",
        "parent": ""
    },
    {
        "id": "CSF03956",
        "name": "Ady Endre út (Báthory utca)",
        "lat": "47.454628",
        "lon": "19.140034",
        "parent": ""
    },
    {
        "id": "CSF03960",
        "name": "Hungária út",
        "lat": "47.456123",
        "lon": "19.137358",
        "parent": ""
    },
    {
        "id": "CSF03963",
        "name": "Gutenberg körút",
        "lat": "47.455854",
        "lon": "19.131787",
        "parent": ""
    },
    {
        "id": "CSF03966",
        "name": "Zoltán utca",
        "lat": "47.451619",
        "lon": "19.127378",
        "parent": ""
    },
    {
        "id": "CSF03967",
        "name": "Thököly utca",
        "lat": "47.453167",
        "lon": "19.121220",
        "parent": ""
    },
    {
        "id": "CSF03971",
        "name": "Hunyadi tér",
        "lat": "47.449030",
        "lon": "19.131057",
        "parent": ""
    },
    {
        "id": "CSF03975",
        "name": "Áchim András utca",
        "lat": "47.451952",
        "lon": "19.135209",
        "parent": ""
    },
    {
        "id": "CSF03980",
        "name": "Kossuth Lajos utca",
        "lat": "47.450117",
        "lon": "19.146312",
        "parent": ""
    },
    {
        "id": "CSF03986",
        "name": "Vas Gereben utca",
        "lat": "47.440054",
        "lon": "19.138239",
        "parent": ""
    },
    {
        "id": "CSF03989",
        "name": "Kispest, Vas Gereben utca",
        "lat": "47.442090",
        "lon": "19.140794",
        "parent": ""
    },
    {
        "id": "CSF03993",
        "name": "Hofherr Albert utca",
        "lat": "47.438518",
        "lon": "19.146787",
        "parent": ""
    },
    {
        "id": "CSF03997",
        "name": "Kassa utca",
        "lat": "47.436566",
        "lon": "19.155989",
        "parent": ""
    },
    {
        "id": "CSF04003",
        "name": "Vas Gereben utca",
        "lat": "47.447708",
        "lon": "19.149589",
        "parent": ""
    },
    {
        "id": "CSF04005",
        "name": "Bocskai utca",
        "lat": "47.458980",
        "lon": "19.158344",
        "parent": ""
    },
    {
        "id": "CSF04021",
        "name": "Templom tér",
        "lat": "47.452610",
        "lon": "19.142831",
        "parent": ""
    },
    {
        "id": "CSF04025",
        "name": "Batthyány utca",
        "lat": "47.446691",
        "lon": "19.134484",
        "parent": ""
    },
    {
        "id": "CSF04027",
        "name": "Áchim András utca",
        "lat": "47.447243",
        "lon": "19.142117",
        "parent": ""
    },
    {
        "id": "CSF04029",
        "name": "Villanytelep",
        "lat": "47.452594",
        "lon": "19.156413",
        "parent": ""
    },
    {
        "id": "CSF04042",
        "name": "Nagykőrösi út",
        "lat": "47.445011",
        "lon": "19.124862",
        "parent": ""
    },
    {
        "id": "CSF04050",
        "name": "Torontál utca",
        "lat": "47.423057",
        "lon": "19.105055",
        "parent": ""
    },
    {
        "id": "CSF04052",
        "name": "Torontál utca",
        "lat": "47.423191",
        "lon": "19.105208",
        "parent": ""
    },
    {
        "id": "CSF04055",
        "name": "Nagysándor József utca",
        "lat": "47.432606",
        "lon": "19.102918",
        "parent": ""
    },
    {
        "id": "CSF04056",
        "name": "Tinódi utca",
        "lat": "47.428899",
        "lon": "19.106254",
        "parent": ""
    },
    {
        "id": "CSF04064",
        "name": "Wesselényi utca",
        "lat": "47.428135",
        "lon": "19.119880",
        "parent": ""
    },
    {
        "id": "CSF04072",
        "name": "Királyhágó utca",
        "lat": "47.427272",
        "lon": "19.126161",
        "parent": ""
    },
    {
        "id": "CSF04073",
        "name": "Előd utca",
        "lat": "47.425646",
        "lon": "19.128499",
        "parent": ""
    },
    {
        "id": "CSF04082",
        "name": "Jahn Ferenc Kórház",
        "lat": "47.423646",
        "lon": "19.131576",
        "parent": ""
    },
    {
        "id": "CSF04086",
        "name": "Írisz utca",
        "lat": "47.417366",
        "lon": "19.140300",
        "parent": ""
    },
    {
        "id": "CSF04092",
        "name": "Pesterzsébet, Ady Endre tér",
        "lat": "47.432774",
        "lon": "19.127403",
        "parent": ""
    },
    {
        "id": "CSF04094",
        "name": "Magyar utca",
        "lat": "47.435310",
        "lon": "19.124391",
        "parent": ""
    },
    {
        "id": "CSF04096",
        "name": "Magyar utca",
        "lat": "47.438316",
        "lon": "19.128605",
        "parent": ""
    },
    {
        "id": "CSF04102",
        "name": "Nagysándor József utca",
        "lat": "47.439870",
        "lon": "19.117934",
        "parent": ""
    },
    {
        "id": "CSF04109",
        "name": "Szent Imre herceg utca",
        "lat": "47.436892",
        "lon": "19.112316",
        "parent": ""
    },
    {
        "id": "CSF04111",
        "name": "Nagysándor József utca",
        "lat": "47.435524",
        "lon": "19.109574",
        "parent": ""
    },
    {
        "id": "CSF04115",
        "name": "Török Flóris utca",
        "lat": "47.435548",
        "lon": "19.109331",
        "parent": ""
    },
    {
        "id": "CSF04116",
        "name": "Vörösmarty utca",
        "lat": "47.433966",
        "lon": "19.106088",
        "parent": ""
    },
    {
        "id": "CSF04118",
        "name": "Pesterzsébet, Kossuth Lajos utca",
        "lat": "47.435283",
        "lon": "19.099978",
        "parent": ""
    },
    {
        "id": "CSF04121",
        "name": "Pesterzsébet vasútállomás",
        "lat": "47.433635",
        "lon": "19.096923",
        "parent": ""
    },
    {
        "id": "CSF04124",
        "name": "Pesterzsébet, városközpont",
        "lat": "47.437684",
        "lon": "19.101118",
        "parent": ""
    },
    {
        "id": "CSF04126",
        "name": "Pesterzsébet, Baross utca",
        "lat": "47.437651",
        "lon": "19.097441",
        "parent": ""
    },
    {
        "id": "CSF04128",
        "name": "Ady Endre utca (Topánka utca)",
        "lat": "47.439190",
        "lon": "19.103356",
        "parent": ""
    },
    {
        "id": "CSF04133",
        "name": "Szent Erzsébet tér",
        "lat": "47.440226",
        "lon": "19.107984",
        "parent": ""
    },
    {
        "id": "CSF04136",
        "name": "Tátra tér",
        "lat": "47.442797",
        "lon": "19.111434",
        "parent": ""
    },
    {
        "id": "CSF04139",
        "name": "Kossuth Lajos utca (Mártírok útja)",
        "lat": "47.446392",
        "lon": "19.116682",
        "parent": ""
    },
    {
        "id": "CSF04142",
        "name": "Pesterzsébet felső",
        "lat": "47.438561",
        "lon": "19.094100",
        "parent": ""
    },
    {
        "id": "CSF04147",
        "name": "Csepeli átjáró",
        "lat": "47.436348",
        "lon": "19.095084",
        "parent": ""
    },
    {
        "id": "CSF04148",
        "name": "Sósfürdő",
        "lat": "47.436318",
        "lon": "19.090688",
        "parent": ""
    },
    {
        "id": "CSF04150",
        "name": "Pesterzsébet felső",
        "lat": "47.438159",
        "lon": "19.093611",
        "parent": ""
    },
    {
        "id": "CSF04152",
        "name": "Török Flóris utca",
        "lat": "47.444107",
        "lon": "19.099788",
        "parent": ""
    },
    {
        "id": "CSF04156",
        "name": "Attila utca",
        "lat": "47.431666",
        "lon": "19.102182",
        "parent": ""
    },
    {
        "id": "CSF04157",
        "name": "Akácfa utca",
        "lat": "47.424088",
        "lon": "19.111465",
        "parent": ""
    },
    {
        "id": "CSF04166",
        "name": "Mesgye utca",
        "lat": "47.420231",
        "lon": "19.136230",
        "parent": ""
    },
    {
        "id": "CSF04173",
        "name": "Szigligeti utca",
        "lat": "47.449061",
        "lon": "19.113305",
        "parent": ""
    },
    {
        "id": "CSF04177",
        "name": "Karácsony Sándor utca",
        "lat": "47.426787",
        "lon": "19.066994",
        "parent": ""
    },
    {
        "id": "CSF04178",
        "name": "József Attila utca",
        "lat": "47.424608",
        "lon": "19.084023",
        "parent": ""
    },
    {
        "id": "CSF04183",
        "name": "Karácsony Sándor utca",
        "lat": "47.426802",
        "lon": "19.067283",
        "parent": ""
    },
    {
        "id": "CSF04188",
        "name": "Komáromi utca",
        "lat": "47.426299",
        "lon": "19.082553",
        "parent": ""
    },
    {
        "id": "CSF04191",
        "name": "Széchenyi István utca",
        "lat": "47.423257",
        "lon": "19.069330",
        "parent": ""
    },
    {
        "id": "CSF04195",
        "name": "Görgey Artúr tér",
        "lat": "47.423490",
        "lon": "19.072351",
        "parent": ""
    },
    {
        "id": "CSF04197",
        "name": "Bajcsy-Zsilinszky út",
        "lat": "47.422815",
        "lon": "19.074995",
        "parent": ""
    },
    {
        "id": "CSF04198",
        "name": "Kikötő utca",
        "lat": "47.422376",
        "lon": "19.087586",
        "parent": ""
    },
    {
        "id": "CSF04202",
        "name": "Kölcsey utca (Erdősor utca)",
        "lat": "47.412347",
        "lon": "19.067596",
        "parent": ""
    },
    {
        "id": "CSF04203",
        "name": "Sporttelep",
        "lat": "47.420351",
        "lon": "19.073040",
        "parent": ""
    },
    {
        "id": "CSF04208",
        "name": "Kölcsey utca",
        "lat": "47.416120",
        "lon": "19.071990",
        "parent": ""
    },
    {
        "id": "CSF04212",
        "name": "Dr. Koncz János tér",
        "lat": "47.413832",
        "lon": "19.069429",
        "parent": ""
    },
    {
        "id": "CSF04216",
        "name": "Kikötő utca",
        "lat": "47.419741",
        "lon": "19.086511",
        "parent": ""
    },
    {
        "id": "CSF04219",
        "name": "Strandfürdő",
        "lat": "47.407762",
        "lon": "19.099951",
        "parent": ""
    },
    {
        "id": "CSF04221",
        "name": "Csepel csónakház",
        "lat": "47.404340",
        "lon": "19.101299",
        "parent": ""
    },
    {
        "id": "CSF04223",
        "name": "Ladik utca",
        "lat": "47.401375",
        "lon": "19.103025",
        "parent": ""
    },
    {
        "id": "CSF04229",
        "name": "Csepel, Hollandi út",
        "lat": "47.392095",
        "lon": "19.105579",
        "parent": ""
    },
    {
        "id": "CSF04231",
        "name": "Szent István út",
        "lat": "47.391627",
        "lon": "19.106261",
        "parent": ""
    },
    {
        "id": "CSF04240",
        "name": "Varrógép utca",
        "lat": "47.408136",
        "lon": "19.082082",
        "parent": ""
    },
    {
        "id": "CSF04243",
        "name": "Tihanyi utca",
        "lat": "47.404926",
        "lon": "19.085355",
        "parent": ""
    },
    {
        "id": "CSF04244",
        "name": "Fátra utca",
        "lat": "47.401665",
        "lon": "19.087398",
        "parent": ""
    },
    {
        "id": "CSF04254",
        "name": "Iszalag utca",
        "lat": "47.407974",
        "lon": "19.090702",
        "parent": ""
    },
    {
        "id": "CSF04256",
        "name": "Repkény út",
        "lat": "47.405446",
        "lon": "19.090688",
        "parent": ""
    },
    {
        "id": "CSF04258",
        "name": "Királyerdei Művelődési Ház",
        "lat": "47.401190",
        "lon": "19.094380",
        "parent": ""
    },
    {
        "id": "CSF04263",
        "name": "Sólyom utca",
        "lat": "47.395475",
        "lon": "19.100257",
        "parent": ""
    },
    {
        "id": "CSF04265",
        "name": "Hárosi Csárda",
        "lat": "47.388218",
        "lon": "19.027408",
        "parent": ""
    },
    {
        "id": "CSF04273",
        "name": "Vas Gereben utca",
        "lat": "47.412744",
        "lon": "19.057976",
        "parent": ""
    },
    {
        "id": "CSF04277",
        "name": "Csepel, Csillagtelep",
        "lat": "47.410177",
        "lon": "19.060469",
        "parent": ""
    },
    {
        "id": "CSF04279",
        "name": "Karácsony Sándor utca",
        "lat": "47.426689",
        "lon": "19.070054",
        "parent": ""
    },
    {
        "id": "CSF04283",
        "name": "Tejút utca",
        "lat": "47.410337",
        "lon": "19.055849",
        "parent": ""
    },
    {
        "id": "CSF04286",
        "name": "Csepeli temető",
        "lat": "47.405876",
        "lon": "19.053417",
        "parent": ""
    },
    {
        "id": "CSF04287",
        "name": "Hárosi iskola",
        "lat": "47.399786",
        "lon": "19.051045",
        "parent": ""
    },
    {
        "id": "CSF04289",
        "name": "Almafa utca",
        "lat": "47.393791",
        "lon": "19.040083",
        "parent": ""
    },
    {
        "id": "CSF04291",
        "name": "Völgy utca",
        "lat": "47.418999",
        "lon": "19.066101",
        "parent": ""
    },
    {
        "id": "CSF04294",
        "name": "Csepel",
        "lat": "47.421634",
        "lon": "19.065920",
        "parent": ""
    },
    {
        "id": "CSF04296",
        "name": "Deák tér",
        "lat": "47.426689",
        "lon": "19.072201",
        "parent": ""
    },
    {
        "id": "CSF04298",
        "name": "Csepeli híd",
        "lat": "47.460626",
        "lon": "19.072077",
        "parent": ""
    },
    {
        "id": "CSF04301",
        "name": "Közterületfenntartó Zrt.",
        "lat": "47.441953",
        "lon": "19.076768",
        "parent": ""
    },
    {
        "id": "CSF04302",
        "name": "Szállító utca",
        "lat": "47.441708",
        "lon": "19.077795",
        "parent": ""
    },
    {
        "id": "CSF04307",
        "name": "Papírgyár",
        "lat": "47.434863",
        "lon": "19.082299",
        "parent": ""
    },
    {
        "id": "CSF04316",
        "name": "Védgát utca",
        "lat": "47.434985",
        "lon": "19.076533",
        "parent": ""
    },
    {
        "id": "CSF04319",
        "name": "Szent Imre tér",
        "lat": "47.431322",
        "lon": "19.067656",
        "parent": ""
    },
    {
        "id": "CSF04334",
        "name": "Iskola tér",
        "lat": "47.411425",
        "lon": "19.065469",
        "parent": ""
    },
    {
        "id": "CSF04337",
        "name": "Rákóczi tér",
        "lat": "47.422625",
        "lon": "19.080297",
        "parent": ""
    },
    {
        "id": "CSF04342",
        "name": "Hollandi csárda",
        "lat": "47.412131",
        "lon": "19.097656",
        "parent": ""
    },
    {
        "id": "CSF04343",
        "name": "Uzsoki utca",
        "lat": "47.395653",
        "lon": "19.092281",
        "parent": ""
    },
    {
        "id": "CSF04345",
        "name": "Csorbatói utca",
        "lat": "47.393256",
        "lon": "19.094214",
        "parent": ""
    },
    {
        "id": "CSF04350",
        "name": "Erdősor utca",
        "lat": "47.416692",
        "lon": "19.061826",
        "parent": ""
    },
    {
        "id": "CSF04351",
        "name": "Szilvafa utca",
        "lat": "47.395357",
        "lon": "19.043295",
        "parent": ""
    },
    {
        "id": "CSF04353",
        "name": "Vízművek lakótelep",
        "lat": "47.391398",
        "lon": "19.035560",
        "parent": ""
    },
    {
        "id": "CSF04355",
        "name": "Vámhivatal",
        "lat": "47.441964",
        "lon": "19.080521",
        "parent": ""
    },
    {
        "id": "CSF04357",
        "name": "Szállító utca 6.",
        "lat": "47.441972",
        "lon": "19.083756",
        "parent": ""
    },
    {
        "id": "CSF04358",
        "name": "Szabadkikötő",
        "lat": "47.444719",
        "lon": "19.071877",
        "parent": ""
    },
    {
        "id": "CSF04361",
        "name": "Technikus utca",
        "lat": "47.414902",
        "lon": "19.063536",
        "parent": ""
    },
    {
        "id": "CSF04363",
        "name": "Határ utca",
        "lat": "47.416345",
        "lon": "19.093097",
        "parent": ""
    },
    {
        "id": "CSF04369",
        "name": "Szabadkikötő",
        "lat": "47.444476",
        "lon": "19.071612",
        "parent": ""
    },
    {
        "id": "CSF04370",
        "name": "Tordai út",
        "lat": "47.440155",
        "lon": "19.012671",
        "parent": ""
    },
    {
        "id": "CSF04376",
        "name": "Pék utca",
        "lat": "47.442234",
        "lon": "19.018487",
        "parent": ""
    },
    {
        "id": "CSF04379",
        "name": "Rózsavölgy alsó",
        "lat": "47.438302",
        "lon": "19.030385",
        "parent": ""
    },
    {
        "id": "CSF04383",
        "name": "Leányka utcai lakótelep",
        "lat": "47.432616",
        "lon": "19.037214",
        "parent": ""
    },
    {
        "id": "CSF04390",
        "name": "Balatoni út \/ Dózsa György út",
        "lat": "47.419319",
        "lon": "18.983489",
        "parent": ""
    },
    {
        "id": "CSF04392",
        "name": "Dózsa György út \/ Kamaraerdei út",
        "lat": "47.422283",
        "lon": "18.975957",
        "parent": ""
    },
    {
        "id": "CSF04394",
        "name": "Memento Park",
        "lat": "47.425813",
        "lon": "19.001368",
        "parent": ""
    },
    {
        "id": "CSF04405",
        "name": "Városház tér",
        "lat": "47.426592",
        "lon": "19.039243",
        "parent": ""
    },
    {
        "id": "CSF04408",
        "name": "Tóth József utca",
        "lat": "47.421525",
        "lon": "19.041161",
        "parent": ""
    },
    {
        "id": "CSF04410",
        "name": "Komló utca",
        "lat": "47.421506",
        "lon": "19.035462",
        "parent": ""
    },
    {
        "id": "CSF04415",
        "name": "Víg utca (Sporttelep)",
        "lat": "47.422920",
        "lon": "19.030019",
        "parent": ""
    },
    {
        "id": "CSF04416",
        "name": "Lőcsei utca",
        "lat": "47.423847",
        "lon": "19.024730",
        "parent": ""
    },
    {
        "id": "CSF04419",
        "name": "Árpád utca",
        "lat": "47.426333",
        "lon": "19.023013",
        "parent": ""
    },
    {
        "id": "CSF04421",
        "name": "Regényes utca",
        "lat": "47.429625",
        "lon": "19.021049",
        "parent": ""
    },
    {
        "id": "CSF04423",
        "name": "Arató utca",
        "lat": "47.424425",
        "lon": "19.020309",
        "parent": ""
    },
    {
        "id": "CSF04425",
        "name": "Kazinczy utca",
        "lat": "47.425040",
        "lon": "19.016585",
        "parent": ""
    },
    {
        "id": "CSF04427",
        "name": "Karácsony utca",
        "lat": "47.425664",
        "lon": "19.012508",
        "parent": ""
    },
    {
        "id": "CSF04430",
        "name": "Liszt Ferenc út",
        "lat": "47.428375",
        "lon": "19.008192",
        "parent": ""
    },
    {
        "id": "CSF04432",
        "name": "Háros utca",
        "lat": "47.411414",
        "lon": "19.026062",
        "parent": ""
    },
    {
        "id": "CSF04434",
        "name": "Háros vasútállomás",
        "lat": "47.412422",
        "lon": "19.033231",
        "parent": ""
    },
    {
        "id": "CSF04436",
        "name": "Vágóhíd utca",
        "lat": "47.414355",
        "lon": "19.038484",
        "parent": ""
    },
    {
        "id": "CSF04437",
        "name": "Brassói utca",
        "lat": "47.424442",
        "lon": "19.002648",
        "parent": ""
    },
    {
        "id": "CSF04440",
        "name": "Aradi utca",
        "lat": "47.419065",
        "lon": "19.006672",
        "parent": ""
    },
    {
        "id": "CSF04442",
        "name": "Nyél utca",
        "lat": "47.414706",
        "lon": "19.004161",
        "parent": ""
    },
    {
        "id": "CSF04443",
        "name": "Park utca",
        "lat": "47.412337",
        "lon": "19.006647",
        "parent": ""
    },
    {
        "id": "CSF04446",
        "name": "Aszály utca",
        "lat": "47.413646",
        "lon": "19.010297",
        "parent": ""
    },
    {
        "id": "CSF04448",
        "name": "Őszibarack utca",
        "lat": "47.415478",
        "lon": "19.012668",
        "parent": ""
    },
    {
        "id": "CSF04450",
        "name": "Rizling utca (Sportpálya)",
        "lat": "47.414803",
        "lon": "19.015636",
        "parent": ""
    },
    {
        "id": "CSF04452",
        "name": "Tűztorony",
        "lat": "47.413266",
        "lon": "19.017798",
        "parent": ""
    },
    {
        "id": "CSF04455",
        "name": "Lépcsős utca",
        "lat": "47.408269",
        "lon": "19.016237",
        "parent": ""
    },
    {
        "id": "CSF04458",
        "name": "Budatétényi sorompó",
        "lat": "47.403400",
        "lon": "19.010202",
        "parent": ""
    },
    {
        "id": "CSF04459",
        "name": "Tűzliliom utca",
        "lat": "47.404207",
        "lon": "19.006618",
        "parent": ""
    },
    {
        "id": "CSF04461",
        "name": "Rákóczi út",
        "lat": "47.405660",
        "lon": "19.005416",
        "parent": ""
    },
    {
        "id": "CSF04463",
        "name": "Terv utca",
        "lat": "47.407941",
        "lon": "19.002061",
        "parent": ""
    },
    {
        "id": "CSF04466",
        "name": "Dózsa György út",
        "lat": "47.399747",
        "lon": "19.004438",
        "parent": ""
    },
    {
        "id": "CSF04468",
        "name": "I. utca",
        "lat": "47.401157",
        "lon": "19.003405",
        "parent": ""
    },
    {
        "id": "CSF04470",
        "name": "Szent László utca",
        "lat": "47.406169",
        "lon": "18.998382",
        "parent": ""
    },
    {
        "id": "CSF04473",
        "name": "Bem tábornok utca",
        "lat": "47.409134",
        "lon": "18.996082",
        "parent": ""
    },
    {
        "id": "CSF04475",
        "name": "XIII. utca \/ Dózsa György út",
        "lat": "47.411539",
        "lon": "18.993499",
        "parent": ""
    },
    {
        "id": "CSF04480",
        "name": "Bartók Béla út",
        "lat": "47.394993",
        "lon": "18.993302",
        "parent": ""
    },
    {
        "id": "CSF04482",
        "name": "Szerafin-villa",
        "lat": "47.407715",
        "lon": "18.962754",
        "parent": ""
    },
    {
        "id": "CSF04484",
        "name": "Németh-villa",
        "lat": "47.404754",
        "lon": "18.966574",
        "parent": ""
    },
    {
        "id": "CSF04487",
        "name": "Szakiskola utca",
        "lat": "47.405112",
        "lon": "18.975868",
        "parent": ""
    },
    {
        "id": "CSF04491",
        "name": "Nagytétény-Diósd vasútállomás",
        "lat": "47.397630",
        "lon": "18.976672",
        "parent": ""
    },
    {
        "id": "CSF04492",
        "name": "Nagytétényi temető",
        "lat": "47.394386",
        "lon": "18.978697",
        "parent": ""
    },
    {
        "id": "CSF04495",
        "name": "Petőfi Sándor utca (Kastélymúzeum)",
        "lat": "47.393358",
        "lon": "18.989471",
        "parent": ""
    },
    {
        "id": "CSF04497",
        "name": "Szabadság utca",
        "lat": "47.392517",
        "lon": "18.984395",
        "parent": ""
    },
    {
        "id": "CSF04499",
        "name": "Angeli utca \/ Nagytétényi út",
        "lat": "47.390871",
        "lon": "18.981421",
        "parent": ""
    },
    {
        "id": "CSF04502",
        "name": "Akó utca",
        "lat": "47.389713",
        "lon": "18.978048",
        "parent": ""
    },
    {
        "id": "CSF04504",
        "name": "Nagytétény, Erdélyi utca",
        "lat": "47.388166",
        "lon": "18.971733",
        "parent": ""
    },
    {
        "id": "CSF04506",
        "name": "Bányalég utca",
        "lat": "47.390329",
        "lon": "18.963424",
        "parent": ""
    },
    {
        "id": "CSF04507",
        "name": "Nagytétény, ipartelep",
        "lat": "47.388922",
        "lon": "18.958340",
        "parent": ""
    },
    {
        "id": "CSF04509",
        "name": "Tenkes utca",
        "lat": "47.397167",
        "lon": "18.998359",
        "parent": ""
    },
    {
        "id": "CSF04511",
        "name": "Tátra utca",
        "lat": "47.403802",
        "lon": "19.001288",
        "parent": ""
    },
    {
        "id": "CSF04513",
        "name": "XVI. utca",
        "lat": "47.413893",
        "lon": "18.996323",
        "parent": ""
    },
    {
        "id": "CSF04515",
        "name": "Diósdi utca",
        "lat": "47.403353",
        "lon": "18.969034",
        "parent": ""
    },
    {
        "id": "CSF04521",
        "name": "Mátra utca",
        "lat": "47.400181",
        "lon": "18.998562",
        "parent": ""
    },
    {
        "id": "CSF04525",
        "name": "Dinnyehegyi út",
        "lat": "47.416575",
        "lon": "19.135118",
        "parent": ""
    },
    {
        "id": "CSF04528",
        "name": "Festékgyár",
        "lat": "47.416928",
        "lon": "19.110145",
        "parent": ""
    },
    {
        "id": "CSF04530",
        "name": "Soroksár felső",
        "lat": "47.410220",
        "lon": "19.111519",
        "parent": ""
    },
    {
        "id": "CSF04532",
        "name": "Tárcsás utca",
        "lat": "47.405939",
        "lon": "19.113573",
        "parent": ""
    },
    {
        "id": "CSF04534",
        "name": "Soroksár felső",
        "lat": "47.409659",
        "lon": "19.111925",
        "parent": ""
    },
    {
        "id": "CSF04540",
        "name": "Soroksár, Hősök tere",
        "lat": "47.399309",
        "lon": "19.114780",
        "parent": ""
    },
    {
        "id": "CSF04542",
        "name": "Soroksár, Hősök tere",
        "lat": "47.399601",
        "lon": "19.115700",
        "parent": ""
    },
    {
        "id": "CSF04544",
        "name": "Soroksár vasútállomás",
        "lat": "47.400883",
        "lon": "19.121616",
        "parent": ""
    },
    {
        "id": "CSF04546",
        "name": "Szent István utca",
        "lat": "47.391672",
        "lon": "19.114910",
        "parent": ""
    },
    {
        "id": "CSF04548",
        "name": "Millenniumtelep",
        "lat": "47.379741",
        "lon": "19.104897",
        "parent": ""
    },
    {
        "id": "CSF04553",
        "name": "Polimer",
        "lat": "47.382482",
        "lon": "19.126834",
        "parent": ""
    },
    {
        "id": "CSF04555",
        "name": "Vecsés út, sorompó",
        "lat": "47.398816",
        "lon": "19.125829",
        "parent": ""
    },
    {
        "id": "CSF04557",
        "name": "Szamaránszki dűlő",
        "lat": "47.399867",
        "lon": "19.134064",
        "parent": ""
    },
    {
        "id": "CSF04559",
        "name": "Telefondűlő út",
        "lat": "47.401193",
        "lon": "19.140466",
        "parent": ""
    },
    {
        "id": "CSF04560",
        "name": "Kertészeti Egyetem",
        "lat": "47.398641",
        "lon": "19.149112",
        "parent": ""
    },
    {
        "id": "CSF04562",
        "name": "Víztorony tér",
        "lat": "47.389365",
        "lon": "19.161458",
        "parent": ""
    },
    {
        "id": "CSF04565",
        "name": "Erzsébeti temető",
        "lat": "47.418693",
        "lon": "19.122353",
        "parent": ""
    },
    {
        "id": "CSF04567",
        "name": "Tangazdaság (Óvoda)",
        "lat": "47.390799",
        "lon": "19.159485",
        "parent": ""
    },
    {
        "id": "CSF04568",
        "name": "Erzsébet utca",
        "lat": "47.402997",
        "lon": "19.115640",
        "parent": ""
    },
    {
        "id": "CSF04571",
        "name": "Ócsai úti felüljáró",
        "lat": "47.383493",
        "lon": "19.125720",
        "parent": ""
    },
    {
        "id": "CSF04578",
        "name": "Pécel, Pesti út 110.",
        "lat": "47.491776",
        "lon": "19.316744",
        "parent": ""
    },
    {
        "id": "CSF04580",
        "name": "Orvosi rendelő",
        "lat": "47.490096",
        "lon": "19.332567",
        "parent": ""
    },
    {
        "id": "CSF04585",
        "name": "Határ utca",
        "lat": "47.491483",
        "lon": "19.322774",
        "parent": ""
    },
    {
        "id": "CSF04587",
        "name": "Faiskola utcai átjáró",
        "lat": "47.490791",
        "lon": "19.326500",
        "parent": ""
    },
    {
        "id": "CSF04590",
        "name": "Ráday Gedeon tér",
        "lat": "47.491844",
        "lon": "19.342404",
        "parent": ""
    },
    {
        "id": "CSF04591",
        "name": "Kossuth tér",
        "lat": "47.487993",
        "lon": "19.341082",
        "parent": ""
    },
    {
        "id": "CSF04595",
        "name": "Köztársaság tér",
        "lat": "47.490591",
        "lon": "19.336239",
        "parent": ""
    },
    {
        "id": "CSF04597",
        "name": "Vecsés-nyugat",
        "lat": "47.418049",
        "lon": "19.253960",
        "parent": ""
    },
    {
        "id": "CSF04600",
        "name": "Gyál felső vasútállomás",
        "lat": "47.388484",
        "lon": "19.206762",
        "parent": ""
    },
    {
        "id": "CSF04605",
        "name": "Ady Endre utca",
        "lat": "47.384844",
        "lon": "19.210976",
        "parent": ""
    },
    {
        "id": "CSF04607",
        "name": "Dunaharaszti felső",
        "lat": "47.366371",
        "lon": "19.092655",
        "parent": ""
    },
    {
        "id": "CSF04610",
        "name": "Dunaharaszti külső",
        "lat": "47.360269",
        "lon": "19.086422",
        "parent": ""
    },
    {
        "id": "CSF04611",
        "name": "Szigetszentmiklós",
        "lat": "47.344206",
        "lon": "19.050241",
        "parent": ""
    },
    {
        "id": "CSF04613",
        "name": "József Attila-telep",
        "lat": "47.337095",
        "lon": "19.034336",
        "parent": ""
    },
    {
        "id": "CSF04615",
        "name": "Szigetszentmiklós alsó",
        "lat": "47.336444",
        "lon": "19.019615",
        "parent": ""
    },
    {
        "id": "CSF04618",
        "name": "Szigetszentmiklós-Gyártelep",
        "lat": "47.333720",
        "lon": "19.004259",
        "parent": ""
    },
    {
        "id": "CSF04619",
        "name": "Szigethalom",
        "lat": "47.330041",
        "lon": "18.993868",
        "parent": ""
    },
    {
        "id": "CSF04621",
        "name": "Szigethalom alsó",
        "lat": "47.321368",
        "lon": "18.983529",
        "parent": ""
    },
    {
        "id": "CSF04623",
        "name": "Tököl",
        "lat": "47.313402",
        "lon": "18.974231",
        "parent": ""
    },
    {
        "id": "CSF04627",
        "name": "Szigetcsép",
        "lat": "47.270231",
        "lon": "18.956263",
        "parent": ""
    },
    {
        "id": "CSF04632",
        "name": "Szigetszentmárton-Szigetújfalu",
        "lat": "47.227924",
        "lon": "18.946067",
        "parent": ""
    },
    {
        "id": "CSF04634",
        "name": "Horgásztanyák",
        "lat": "47.213582",
        "lon": "18.952953",
        "parent": ""
    },
    {
        "id": "CSF04636",
        "name": "Angyalisziget",
        "lat": "47.199808",
        "lon": "18.945065",
        "parent": ""
    },
    {
        "id": "CSF04641",
        "name": "Gát utca",
        "lat": "47.382800",
        "lon": "19.013030",
        "parent": ""
    },
    {
        "id": "CSF04643",
        "name": "Árpád utca",
        "lat": "47.480038",
        "lon": "19.343164",
        "parent": ""
    },
    {
        "id": "CSF04645",
        "name": "Pécel vasútállomás",
        "lat": "47.493365",
        "lon": "19.338629",
        "parent": ""
    },
    {
        "id": "CSF04649",
        "name": "Bocskai István utca",
        "lat": "47.383424",
        "lon": "19.228156",
        "parent": ""
    },
    {
        "id": "CSF04656",
        "name": "Kistarcsa, kórház",
        "lat": "47.539065",
        "lon": "19.249034",
        "parent": ""
    },
    {
        "id": "CSF04658",
        "name": "Kistarcsa",
        "lat": "47.545831",
        "lon": "19.259801",
        "parent": ""
    },
    {
        "id": "CSF04660",
        "name": "Zsófialiget",
        "lat": "47.548442",
        "lon": "19.264069",
        "parent": ""
    },
    {
        "id": "CSF04662",
        "name": "Kerepes",
        "lat": "47.553092",
        "lon": "19.270897",
        "parent": ""
    },
    {
        "id": "CSF04664",
        "name": "Szilasliget",
        "lat": "47.568488",
        "lon": "19.275036",
        "parent": ""
    },
    {
        "id": "CSF04668",
        "name": "Mogyoród",
        "lat": "47.596508",
        "lon": "19.271751",
        "parent": ""
    },
    {
        "id": "CSF04670",
        "name": "Szentjakab",
        "lat": "47.597338",
        "lon": "19.290352",
        "parent": ""
    },
    {
        "id": "CSF04672",
        "name": "Gödöllő, Erzsébet park",
        "lat": "47.595072",
        "lon": "19.340770",
        "parent": ""
    },
    {
        "id": "CSF04675",
        "name": "Gödöllő, Szabadság tér",
        "lat": "47.597666",
        "lon": "19.347925",
        "parent": ""
    },
    {
        "id": "CSF04676",
        "name": "Gödöllő, Palotakert",
        "lat": "47.598489",
        "lon": "19.356648",
        "parent": ""
    },
    {
        "id": "CSF04681",
        "name": "Lacházi fogadó",
        "lat": "47.379757",
        "lon": "19.009428",
        "parent": ""
    },
    {
        "id": "CSF04682",
        "name": "Erkel Ferenc utca",
        "lat": "47.516810",
        "lon": "18.936008",
        "parent": ""
    },
    {
        "id": "CSF04685",
        "name": "Gyógyszertár",
        "lat": "47.513590",
        "lon": "18.932701",
        "parent": ""
    },
    {
        "id": "CSF04687",
        "name": "Szentendre",
        "lat": "47.659810",
        "lon": "19.074203",
        "parent": ""
    },
    {
        "id": "CSF04688",
        "name": "Pannóniatelep",
        "lat": "47.652191",
        "lon": "19.064901",
        "parent": ""
    },
    {
        "id": "CSF04690",
        "name": "Pomáz",
        "lat": "47.642960",
        "lon": "19.032361",
        "parent": ""
    },
    {
        "id": "CSF04693",
        "name": "Budakalász, Lenfonó",
        "lat": "47.621778",
        "lon": "19.046752",
        "parent": ""
    },
    {
        "id": "CSF04695",
        "name": "Budakalász",
        "lat": "47.616164",
        "lon": "19.054920",
        "parent": ""
    },
    {
        "id": "CSF04697",
        "name": "Anna kápolna",
        "lat": "47.582212",
        "lon": "18.939134",
        "parent": ""
    },
    {
        "id": "CSF04699",
        "name": "Munkás utca",
        "lat": "47.587554",
        "lon": "18.937128",
        "parent": ""
    },
    {
        "id": "CSF04702",
        "name": "Solymár, községháza",
        "lat": "47.592034",
        "lon": "18.937383",
        "parent": ""
    },
    {
        "id": "CSF04707",
        "name": "Templom tér",
        "lat": "47.591330",
        "lon": "18.929748",
        "parent": ""
    },
    {
        "id": "CSF04709",
        "name": "Budakeszi, városháza",
        "lat": "47.510669",
        "lon": "18.929430",
        "parent": ""
    },
    {
        "id": "CSF04710",
        "name": "Ibolya utca",
        "lat": "47.460308",
        "lon": "18.926552",
        "parent": ""
    },
    {
        "id": "CSF04713",
        "name": "Patkó utca",
        "lat": "47.458751",
        "lon": "18.939315",
        "parent": ""
    },
    {
        "id": "CSF04714",
        "name": "Gimnázium",
        "lat": "47.460614",
        "lon": "18.939902",
        "parent": ""
    },
    {
        "id": "CSF04717",
        "name": "Budaörs, városháza",
        "lat": "47.461312",
        "lon": "18.946631",
        "parent": ""
    },
    {
        "id": "CSF04720",
        "name": "Kisfaludy utca",
        "lat": "47.460270",
        "lon": "18.953557",
        "parent": ""
    },
    {
        "id": "CSF04724",
        "name": "Budaörsi lakótelep",
        "lat": "47.456018",
        "lon": "18.940662",
        "parent": ""
    },
    {
        "id": "CSF04726",
        "name": "Ifjúság utca",
        "lat": "47.456682",
        "lon": "18.946941",
        "parent": ""
    },
    {
        "id": "CSF04728",
        "name": "Csata utca",
        "lat": "47.455460",
        "lon": "18.960714",
        "parent": ""
    },
    {
        "id": "CSF04730",
        "name": "Agip utca",
        "lat": "47.449664",
        "lon": "18.962579",
        "parent": ""
    },
    {
        "id": "CSF04731",
        "name": "Kinizsi utca",
        "lat": "47.449669",
        "lon": "18.969727",
        "parent": ""
    },
    {
        "id": "CSF04733",
        "name": "Erdő utca",
        "lat": "47.509015",
        "lon": "18.926666",
        "parent": ""
    },
    {
        "id": "CSF04735",
        "name": "Aradi utca",
        "lat": "47.461681",
        "lon": "18.968999",
        "parent": ""
    },
    {
        "id": "CSF04738",
        "name": "Budaörs, benzinkút",
        "lat": "47.452314",
        "lon": "18.958458",
        "parent": ""
    },
    {
        "id": "CSF04739",
        "name": "Gyár utca",
        "lat": "47.458333",
        "lon": "18.905841",
        "parent": ""
    },
    {
        "id": "CSF04741",
        "name": "Légimentők",
        "lat": "47.455137",
        "lon": "18.907878",
        "parent": ""
    },
    {
        "id": "CSF04744",
        "name": "Törökbálint vasútállomás",
        "lat": "47.450744",
        "lon": "18.904946",
        "parent": ""
    },
    {
        "id": "CSF04746",
        "name": "Kerekdomb utca",
        "lat": "47.448334",
        "lon": "18.905258",
        "parent": ""
    },
    {
        "id": "CSF04748",
        "name": "Vasút utca",
        "lat": "47.446949",
        "lon": "18.909280",
        "parent": ""
    },
    {
        "id": "CSF04749",
        "name": "Deák Ferenc utca",
        "lat": "47.440865",
        "lon": "18.913764",
        "parent": ""
    },
    {
        "id": "CSF04757",
        "name": "Harangláb",
        "lat": "47.432261",
        "lon": "18.913982",
        "parent": ""
    },
    {
        "id": "CSF04762",
        "name": "Idősek otthona",
        "lat": "47.442415",
        "lon": "18.901429",
        "parent": ""
    },
    {
        "id": "CSF04765",
        "name": "Köztársaság tér",
        "lat": "47.445470",
        "lon": "18.905577",
        "parent": ""
    },
    {
        "id": "CSF04768",
        "name": "Diósd, Törökbálinti elágazás",
        "lat": "47.410643",
        "lon": "18.956825",
        "parent": ""
    },
    {
        "id": "CSF04770",
        "name": "Diósd, Sashegyi út",
        "lat": "47.407396",
        "lon": "18.951776",
        "parent": ""
    },
    {
        "id": "CSF04774",
        "name": "Külső Bécsi út 35.",
        "lat": "47.590010",
        "lon": "18.987461",
        "parent": ""
    },
    {
        "id": "CSF04777",
        "name": "Rácski telep",
        "lat": "47.554747",
        "lon": "18.927197",
        "parent": ""
    },
    {
        "id": "CSF04779",
        "name": "Erdészház",
        "lat": "47.560583",
        "lon": "18.918141",
        "parent": ""
    },
    {
        "id": "CSF04781",
        "name": "13-as kilométerkő",
        "lat": "47.567031",
        "lon": "18.909580",
        "parent": ""
    },
    {
        "id": "CSF04783",
        "name": "Sebestyéndomb",
        "lat": "47.571608",
        "lon": "18.898671",
        "parent": ""
    },
    {
        "id": "CSF04785",
        "name": "Ady Endre utca",
        "lat": "47.575598",
        "lon": "18.892205",
        "parent": ""
    },
    {
        "id": "CSF04790",
        "name": "Budakeszi, Dózsa György tér",
        "lat": "47.507142",
        "lon": "18.921892",
        "parent": ""
    },
    {
        "id": "CSF04791",
        "name": "Tulipán utca",
        "lat": "47.462296",
        "lon": "18.973681",
        "parent": ""
    },
    {
        "id": "CSF04793",
        "name": "Szentistvántelep",
        "lat": "47.628802",
        "lon": "19.043332",
        "parent": ""
    },
    {
        "id": "CSF04795",
        "name": "Felsőhatár utca",
        "lat": "47.463155",
        "lon": "18.980981",
        "parent": ""
    },
    {
        "id": "CSF04798",
        "name": "Bajcsy-Zsilinszky utca",
        "lat": "47.590038",
        "lon": "18.936188",
        "parent": ""
    },
    {
        "id": "CSF04800",
        "name": "Pilisvörösvári utca",
        "lat": "47.595040",
        "lon": "18.935537",
        "parent": ""
    },
    {
        "id": "CSF04801",
        "name": "Csiki csárda",
        "lat": "47.459682",
        "lon": "18.921514",
        "parent": ""
    },
    {
        "id": "CSF04803",
        "name": "Csiki tanya",
        "lat": "47.458680",
        "lon": "18.914686",
        "parent": ""
    },
    {
        "id": "CSF04805",
        "name": "Lévai utca",
        "lat": "47.459069",
        "lon": "18.946839",
        "parent": ""
    },
    {
        "id": "CSF04807",
        "name": "Kötő utca",
        "lat": "47.460775",
        "lon": "18.949848",
        "parent": ""
    },
    {
        "id": "CSF04809",
        "name": "Templom tér",
        "lat": "47.461655",
        "lon": "18.964423",
        "parent": ""
    },
    {
        "id": "CSF04813",
        "name": "Jókai Mór utca",
        "lat": "47.443956",
        "lon": "18.910931",
        "parent": ""
    },
    {
        "id": "CSF04817",
        "name": "Solymár, téglagyári bekötőút",
        "lat": "47.587495",
        "lon": "18.993386",
        "parent": ""
    },
    {
        "id": "CSF04819",
        "name": "Kövesbérci utca",
        "lat": "47.592280",
        "lon": "18.984001",
        "parent": ""
    },
    {
        "id": "CSF04821",
        "name": "BM iskola",
        "lat": "47.549863",
        "lon": "18.933906",
        "parent": ""
    },
    {
        "id": "CSF04824",
        "name": "Mészégető",
        "lat": "47.558810",
        "lon": "18.921016",
        "parent": ""
    },
    {
        "id": "CSF04827",
        "name": "Nagykovácsi, községháza",
        "lat": "47.575974",
        "lon": "18.884322",
        "parent": ""
    },
    {
        "id": "CSF04830",
        "name": "Alcsiki dűlő",
        "lat": "47.460104",
        "lon": "18.934259",
        "parent": ""
    },
    {
        "id": "CSF04832",
        "name": "Váci Mihály utca",
        "lat": "47.595900",
        "lon": "18.931871",
        "parent": ""
    },
    {
        "id": "CSF04834",
        "name": "Tetra Pak",
        "lat": "47.457615",
        "lon": "18.903714",
        "parent": ""
    },
    {
        "id": "CSF04837",
        "name": "Lejtő utca",
        "lat": "47.459503",
        "lon": "18.931157",
        "parent": ""
    },
    {
        "id": "CSL008159",
        "name": "Forgách utca",
        "lat": "47.539383",
        "lon": "19.069597",
        "parent": ""
    },
    {
        "id": "CSLM1HTV",
        "name": "Hősök tere",
        "lat": "47.514255",
        "lon": "19.076844",
        "parent": ""
    },
    {
        "id": "CSLM1MUV",
        "name": "Mexikói út",
        "lat": "47.519611",
        "lon": "19.091089",
        "parent": ""
    },
    {
        "id": "CSLM1OKV",
        "name": "Oktogon",
        "lat": "47.505083",
        "lon": "19.063168",
        "parent": ""
    },
    {
        "id": "CSLM1OPV",
        "name": "Opera",
        "lat": "47.502244",
        "lon": "19.058873",
        "parent": ""
    },
    {
        "id": "CSLM1SFV",
        "name": "Széchenyi fürdő",
        "lat": "47.517498",
        "lon": "19.080980",
        "parent": ""
    },
    {
        "id": "CSLM1VTV",
        "name": "Vörösmarty tér",
        "lat": "47.496803",
        "lon": "19.050579",
        "parent": ""
    },
    {
        "id": "CSLM2BLA",
        "name": "Blaha Lujza tér",
        "lat": "47.497097",
        "lon": "19.070595",
        "parent": ""
    },
    {
        "id": "CSLM2OVE",
        "name": "Örs vezér tere",
        "lat": "47.503232",
        "lon": "19.136371",
        "parent": ""
    },
    {
        "id": "CSLM2PF1",
        "name": "Puskás Ferenc Stadion",
        "lat": "47.500266",
        "lon": "19.107488",
        "parent": ""
    },
    {
        "id": "CSLM2PU1",
        "name": "Pillangó utca",
        "lat": "47.501297",
        "lon": "19.119883",
        "parent": ""
    },
    {
        "id": "CSLM3AHG",
        "name": "Árpád híd",
        "lat": "47.532659",
        "lon": "19.066822",
        "parent": ""
    },
    {
        "id": "CSLM3CNJ",
        "name": "Corvin-negyed",
        "lat": "47.485842",
        "lon": "19.070013",
        "parent": ""
    },
    {
        "id": "CSLM3FT1",
        "name": "Ferenciek tere",
        "lat": "47.493191",
        "lon": "19.055891",
        "parent": ""
    },
    {
        "id": "CSLM3LED",
        "name": "Lehel tér",
        "lat": "47.517635",
        "lon": "19.060404",
        "parent": ""
    },
    {
        "id": "CSLM3NYA",
        "name": "Nyugati pályaudvar",
        "lat": "47.510870",
        "lon": "19.056178",
        "parent": ""
    },
    {
        "id": "CSLM4BP1",
        "name": "Bikás park",
        "lat": "47.465005",
        "lon": "19.033383",
        "parent": ""
    },
    {
        "id": "CSLM4FT1",
        "name": "Fővám tér",
        "lat": "47.486401",
        "lon": "19.057320",
        "parent": ""
    },
    {
        "id": "CSLM4MKF",
        "name": "Móricz Zsigmond körtér",
        "lat": "47.477362",
        "lon": "19.047272",
        "parent": ""
    },
    {
        "id": "CSLM4SG1",
        "name": "Szent Gellért tér",
        "lat": "47.483245",
        "lon": "19.054249",
        "parent": ""
    },
    {
        "id": "CSLM4UK1",
        "name": "Újbuda-központ",
        "lat": "47.473931",
        "lon": "19.046312",
        "parent": ""
    },
    {
        "id": "CSLMXKPB",
        "name": "Keleti pályaudvar",
        "lat": "47.500090",
        "lon": "19.081794",
        "parent": ""
    },
    {
        "id": "F00001",
        "name": "Mihály utca",
        "lat": "47.486079",
        "lon": "19.034561",
        "parent": ""
    },
    {
        "id": "F00002",
        "name": "Zsolt utca",
        "lat": "47.490477",
        "lon": "19.030486",
        "parent": "CSF00003"
    },
    {
        "id": "F00003",
        "name": "Zsolt utca",
        "lat": "47.490612",
        "lon": "19.030314",
        "parent": "CSF00003"
    },
    {
        "id": "F00004",
        "name": "Mészáros utca",
        "lat": "47.488318",
        "lon": "19.031071",
        "parent": "CSF00005"
    },
    {
        "id": "F00005",
        "name": "Mészáros utca",
        "lat": "47.488633",
        "lon": "19.031575",
        "parent": "CSF00005"
    },
    {
        "id": "F00006",
        "name": "Sánc utca",
        "lat": "47.490136",
        "lon": "19.036047",
        "parent": "CSF00006"
    },
    {
        "id": "F00007",
        "name": "Sánc utca",
        "lat": "47.489545",
        "lon": "19.035522",
        "parent": "CSF00006"
    },
    {
        "id": "F00008",
        "name": "Sánc utca",
        "lat": "47.489641",
        "lon": "19.035717",
        "parent": "CSF00006"
    },
    {
        "id": "F00009",
        "name": "Sánc utca",
        "lat": "47.489488",
        "lon": "19.035808",
        "parent": "CSF00006"
    },
    {
        "id": "F00010",
        "name": "Szirtes út",
        "lat": "47.487671",
        "lon": "19.036432",
        "parent": "CSF00011"
    },
    {
        "id": "F00011",
        "name": "Szirtes út",
        "lat": "47.488247",
        "lon": "19.037042",
        "parent": "CSF00011"
    },
    {
        "id": "F00012",
        "name": "Búsuló Juhász (Citadella)",
        "lat": "47.485594",
        "lon": "19.039551",
        "parent": "CSF00012"
    },
    {
        "id": "F00013",
        "name": "Királyhágó utca",
        "lat": "47.494928",
        "lon": "19.023055",
        "parent": "CSF00017"
    },
    {
        "id": "F00014",
        "name": "Királyhágó utca",
        "lat": "47.494442",
        "lon": "19.023929",
        "parent": "CSF00017"
    },
    {
        "id": "F00015",
        "name": "Királyhágó utca",
        "lat": "47.494839",
        "lon": "19.023732",
        "parent": "CSF00017"
    },
    {
        "id": "F00016",
        "name": "Királyhágó utca",
        "lat": "47.495575",
        "lon": "19.023105",
        "parent": "CSF00017"
    },
    {
        "id": "F00017",
        "name": "Királyhágó utca",
        "lat": "47.496016",
        "lon": "19.023490",
        "parent": "CSF00017"
    },
    {
        "id": "F00018",
        "name": "Királyhágó utca",
        "lat": "47.495669",
        "lon": "19.023612",
        "parent": "CSF00017"
    },
    {
        "id": "F00019",
        "name": "Nagyenyed utca",
        "lat": "47.498029",
        "lon": "19.023858",
        "parent": "CSF00020"
    },
    {
        "id": "F00020",
        "name": "Nagyenyed utca",
        "lat": "47.498335",
        "lon": "19.024011",
        "parent": "CSF00020"
    },
    {
        "id": "F00021",
        "name": "Déli pályaudvar M",
        "lat": "47.499614",
        "lon": "19.023793",
        "parent": "CSF00027"
    },
    {
        "id": "F00022",
        "name": "Déli pályaudvar M",
        "lat": "47.499668",
        "lon": "19.024192",
        "parent": "CSF00027"
    },
    {
        "id": "F00023",
        "name": "Déli pályaudvar M",
        "lat": "47.500037",
        "lon": "19.023822",
        "parent": "CSF00027"
    },
    {
        "id": "F00024",
        "name": "Déli pályaudvar M",
        "lat": "47.500848",
        "lon": "19.024021",
        "parent": "CSF00027"
    },
    {
        "id": "F00025",
        "name": "Déli pályaudvar M",
        "lat": "47.501106",
        "lon": "19.024177",
        "parent": "CSF00027"
    },
    {
        "id": "F00026",
        "name": "Déli pályaudvar M",
        "lat": "47.500829",
        "lon": "19.024974",
        "parent": "CSF00027"
    },
    {
        "id": "F00027",
        "name": "Déli pályaudvar M",
        "lat": "47.501126",
        "lon": "19.024722",
        "parent": "CSF00027"
    },
    {
        "id": "F00028",
        "name": "Körmöci utca",
        "lat": "47.504427",
        "lon": "19.024906",
        "parent": "CSF00028"
    },
    {
        "id": "F00029",
        "name": "Körmöci utca",
        "lat": "47.504184",
        "lon": "19.024973",
        "parent": "CSF00028"
    },
    {
        "id": "F00030",
        "name": "Mátray utca",
        "lat": "47.505993",
        "lon": "19.028636",
        "parent": "CSF00030"
    },
    {
        "id": "F00031",
        "name": "Mátray utca",
        "lat": "47.505929",
        "lon": "19.027985",
        "parent": "CSF00030"
    },
    {
        "id": "F00032",
        "name": "Széna tér",
        "lat": "47.508043",
        "lon": "19.029179",
        "parent": "CSF00308"
    },
    {
        "id": "F00033",
        "name": "Széna tér",
        "lat": "47.507782",
        "lon": "19.028184",
        "parent": "CSF00308"
    },
    {
        "id": "F00034",
        "name": "Fazekas utca",
        "lat": "47.508125",
        "lon": "19.034317",
        "parent": "CSF00034"
    },
    {
        "id": "F00035",
        "name": "Fazekas utca",
        "lat": "47.507972",
        "lon": "19.034144",
        "parent": "CSF00034"
    },
    {
        "id": "F00036",
        "name": "Fazekas utca",
        "lat": "47.507855",
        "lon": "19.033454",
        "parent": "CSF00034"
    },
    {
        "id": "F00037",
        "name": "Várkert Bazár",
        "lat": "47.493914",
        "lon": "19.043385",
        "parent": "CS061287"
    },
    {
        "id": "F00045",
        "name": "Donáti utca",
        "lat": "47.501352",
        "lon": "19.036044",
        "parent": ""
    },
    {
        "id": "F00047",
        "name": "Clark Ádám tér",
        "lat": "47.498306",
        "lon": "19.039834",
        "parent": "CS049785"
    },
    {
        "id": "F00048",
        "name": "Clark Ádám tér",
        "lat": "47.498177",
        "lon": "19.040013",
        "parent": "CS049785"
    },
    {
        "id": "F00049",
        "name": "Clark Ádám tér",
        "lat": "47.497722",
        "lon": "19.040644",
        "parent": "CS049785"
    },
    {
        "id": "F00050",
        "name": "Clark Ádám tér",
        "lat": "47.497845",
        "lon": "19.040797",
        "parent": "CS049785"
    },
    {
        "id": "F00051",
        "name": "Halász utca",
        "lat": "47.502279",
        "lon": "19.039840",
        "parent": "CSF00053"
    },
    {
        "id": "F00052",
        "name": "Halász utca",
        "lat": "47.501865",
        "lon": "19.040013",
        "parent": "CSF00053"
    },
    {
        "id": "F00053",
        "name": "Halász utca",
        "lat": "47.502558",
        "lon": "19.039747",
        "parent": "CSF00053"
    },
    {
        "id": "F00056",
        "name": "Halász utca",
        "lat": "47.501739",
        "lon": "19.038966",
        "parent": "CSF00053"
    },
    {
        "id": "F00057",
        "name": "Batthyány tér M+H",
        "lat": "47.506023",
        "lon": "19.039407",
        "parent": "CSF00065"
    },
    {
        "id": "F00059",
        "name": "Batthyány tér M+H",
        "lat": "47.505898",
        "lon": "19.038014",
        "parent": "CSF00065"
    },
    {
        "id": "F00060",
        "name": "Batthyány tér",
        "lat": "47.506776",
        "lon": "19.039322",
        "parent": "CSF00062"
    },
    {
        "id": "F00062",
        "name": "Batthyány tér",
        "lat": "47.507412",
        "lon": "19.036739",
        "parent": "CSF00062"
    },
    {
        "id": "F00063",
        "name": "Batthyány tér",
        "lat": "47.506826",
        "lon": "19.038103",
        "parent": "CSF00062"
    },
    {
        "id": "F00064",
        "name": "Batthyány tér M+H",
        "lat": "47.506613",
        "lon": "19.038859",
        "parent": "CSF00065"
    },
    {
        "id": "F00065",
        "name": "Batthyány tér M+H (Bem rakpart)",
        "lat": "47.507460",
        "lon": "19.039286",
        "parent": "CSF00065"
    },
    {
        "id": "F00066",
        "name": "Batthyány tér M+H",
        "lat": "47.506250",
        "lon": "19.039051",
        "parent": "CSF00065"
    },
    {
        "id": "F00067",
        "name": "Batthyány tér M+H",
        "lat": "47.505985",
        "lon": "19.038578",
        "parent": "CSF00065"
    },
    {
        "id": "F00068",
        "name": "Mária tér",
        "lat": "47.506749",
        "lon": "19.034782",
        "parent": ""
    },
    {
        "id": "F00069",
        "name": "Bécsi kapu tér",
        "lat": "47.504572",
        "lon": "19.030681",
        "parent": "CSF00070"
    },
    {
        "id": "F00070",
        "name": "Bécsi kapu tér",
        "lat": "47.504787",
        "lon": "19.030216",
        "parent": "CSF00070"
    },
    {
        "id": "F00071",
        "name": "Szentháromság tér",
        "lat": "47.501316",
        "lon": "19.033761",
        "parent": "CSF00072"
    },
    {
        "id": "F00072",
        "name": "Szentháromság tér",
        "lat": "47.501406",
        "lon": "19.033841",
        "parent": "CSF00072"
    },
    {
        "id": "F00073",
        "name": "Dísz tér",
        "lat": "47.499355",
        "lon": "19.036031",
        "parent": "CSF00073"
    },
    {
        "id": "F00074",
        "name": "Dísz tér",
        "lat": "47.498987",
        "lon": "19.036111",
        "parent": "CSF00073"
    },
    {
        "id": "F00076",
        "name": "Palota út, gyorslift",
        "lat": "47.495173",
        "lon": "19.038541",
        "parent": ""
    },
    {
        "id": "F00077",
        "name": "Dózsa György tér",
        "lat": "47.494777",
        "lon": "19.037665",
        "parent": "CSF00077"
    },
    {
        "id": "F00078",
        "name": "Dózsa György tér",
        "lat": "47.494435",
        "lon": "19.037944",
        "parent": "CSF00077"
    },
    {
        "id": "F00079",
        "name": "Dózsa György tér",
        "lat": "47.493860",
        "lon": "19.037479",
        "parent": "CSF00077"
    },
    {
        "id": "F00080",
        "name": "Dózsa György tér",
        "lat": "47.493779",
        "lon": "19.038183",
        "parent": "CSF00077"
    },
    {
        "id": "F00081",
        "name": "Dózsa György tér",
        "lat": "47.493734",
        "lon": "19.038408",
        "parent": "CSF00077"
    },
    {
        "id": "F00082",
        "name": "Alagút utca",
        "lat": "47.497844",
        "lon": "19.032979",
        "parent": ""
    },
    {
        "id": "F00083",
        "name": "Krisztina tér",
        "lat": "47.496953",
        "lon": "19.033391",
        "parent": "CSF00083"
    },
    {
        "id": "F00084",
        "name": "Alagút utca",
        "lat": "47.496639",
        "lon": "19.034439",
        "parent": ""
    },
    {
        "id": "F00085",
        "name": "Krisztina tér",
        "lat": "47.496881",
        "lon": "19.032117",
        "parent": "CSF00083"
    },
    {
        "id": "F00086",
        "name": "Krisztina tér",
        "lat": "47.496621",
        "lon": "19.032847",
        "parent": "CSF00083"
    },
    {
        "id": "F00087",
        "name": "Krisztina tér",
        "lat": "47.496917",
        "lon": "19.032769",
        "parent": "CSF00083"
    },
    {
        "id": "F00088",
        "name": "Mikó utca",
        "lat": "47.499283",
        "lon": "19.030815",
        "parent": "CSF00088"
    },
    {
        "id": "F00089",
        "name": "Mikó utca",
        "lat": "47.498365",
        "lon": "19.028997",
        "parent": "CSF00088"
    },
    {
        "id": "F00090",
        "name": "Mikó utca",
        "lat": "47.498401",
        "lon": "19.028771",
        "parent": "CSF00088"
    },
    {
        "id": "F00091",
        "name": "Korlát utca",
        "lat": "47.501900",
        "lon": "19.027350",
        "parent": "CSF00091"
    },
    {
        "id": "F00092",
        "name": "Korlát utca",
        "lat": "47.501747",
        "lon": "19.027390",
        "parent": "CSF00091"
    },
    {
        "id": "F00093",
        "name": "Déli pályaudvar",
        "lat": "47.499373",
        "lon": "19.024769",
        "parent": "CSF00094"
    },
    {
        "id": "F00094",
        "name": "Déli pályaudvar",
        "lat": "47.500450",
        "lon": "19.024604",
        "parent": "CSF00094"
    },
    {
        "id": "F00095",
        "name": "Győri út",
        "lat": "47.495252",
        "lon": "19.025269",
        "parent": "CSF00095"
    },
    {
        "id": "F00096",
        "name": "Győri út",
        "lat": "47.495207",
        "lon": "19.025813",
        "parent": "CSF00095"
    },
    {
        "id": "F00097",
        "name": "Ág utca",
        "lat": "47.495694",
        "lon": "19.029476",
        "parent": "CSF00097"
    },
    {
        "id": "F00098",
        "name": "Ág utca",
        "lat": "47.495433",
        "lon": "19.029383",
        "parent": "CSF00097"
    },
    {
        "id": "F00099",
        "name": "Róka utca",
        "lat": "47.494209",
        "lon": "19.028879",
        "parent": ""
    },
    {
        "id": "F00100",
        "name": "Naphegy tér",
        "lat": "47.493517",
        "lon": "19.032502",
        "parent": "CS016729"
    },
    {
        "id": "F00101",
        "name": "Várkert Bazár",
        "lat": "47.493081",
        "lon": "19.043086",
        "parent": "CS061287"
    },
    {
        "id": "F00102",
        "name": "Szarvas tér",
        "lat": "47.492520",
        "lon": "19.042377",
        "parent": ""
    },
    {
        "id": "F00103",
        "name": "Döbrentei tér",
        "lat": "47.491530",
        "lon": "19.043624",
        "parent": "CSF00105"
    },
    {
        "id": "F00104",
        "name": "Döbrentei tér",
        "lat": "47.491228",
        "lon": "19.043577",
        "parent": "CSF00105"
    },
    {
        "id": "F00105",
        "name": "Döbrentei tér",
        "lat": "47.491800",
        "lon": "19.043359",
        "parent": "CSF00105"
    },
    {
        "id": "F00106",
        "name": "Várkert Bazár",
        "lat": "47.493521",
        "lon": "19.044201",
        "parent": "CS061287"
    },
    {
        "id": "F00107",
        "name": "Várkert Bazár",
        "lat": "47.493186",
        "lon": "19.044394",
        "parent": "CS061287"
    },
    {
        "id": "F00108",
        "name": "Rudas Gyógyfürdő",
        "lat": "47.489840",
        "lon": "19.047234",
        "parent": "CS072934"
    },
    {
        "id": "F00109",
        "name": "Rudas Gyógyfürdő",
        "lat": "47.489102",
        "lon": "19.048388",
        "parent": "CS072934"
    },
    {
        "id": "F00110",
        "name": "Döbrentei tér",
        "lat": "47.490136",
        "lon": "19.044832",
        "parent": "CSF00105"
    },
    {
        "id": "F00111",
        "name": "Rudas Gyógyfürdő",
        "lat": "47.489291",
        "lon": "19.046783",
        "parent": "CS072934"
    },
    {
        "id": "F00112",
        "name": "Rudas Gyógyfürdő",
        "lat": "47.489150",
        "lon": "19.046802",
        "parent": "CS072934"
    },
    {
        "id": "F00113",
        "name": "Döbrentei tér",
        "lat": "47.490127",
        "lon": "19.046769",
        "parent": "CSF00105"
    },
    {
        "id": "F00114",
        "name": "Kapisztrán tér",
        "lat": "47.504194",
        "lon": "19.029247",
        "parent": ""
    },
    {
        "id": "F00115",
        "name": "Szanatórium utca (Vadaspark)",
        "lat": "47.520550",
        "lon": "18.938763",
        "parent": "CSF00115"
    },
    {
        "id": "F00116",
        "name": "Szanatórium utca (Vadaspark)",
        "lat": "47.520244",
        "lon": "18.938896",
        "parent": "CSF00115"
    },
    {
        "id": "F00117",
        "name": "Kökörcsin utca",
        "lat": "47.577054",
        "lon": "18.938353",
        "parent": "CSF00117"
    },
    {
        "id": "F00118",
        "name": "Kökörcsin utca",
        "lat": "47.576068",
        "lon": "18.938853",
        "parent": "CSF00117"
    },
    {
        "id": "F00119",
        "name": "Fenyőgyöngye",
        "lat": "47.540373",
        "lon": "19.006161",
        "parent": "CS064210"
    },
    {
        "id": "F00120",
        "name": "Nyereg út",
        "lat": "47.537210",
        "lon": "19.014226",
        "parent": "CSF00121"
    },
    {
        "id": "F00121",
        "name": "Nyereg út",
        "lat": "47.537704",
        "lon": "19.013455",
        "parent": "CSF00121"
    },
    {
        "id": "F00122",
        "name": "Pál-völgyi cseppkőbarlang",
        "lat": "47.533172",
        "lon": "19.016513",
        "parent": "CSF00122"
    },
    {
        "id": "F00123",
        "name": "Pál-völgyi cseppkőbarlang",
        "lat": "47.532938",
        "lon": "19.016726",
        "parent": "CSF00122"
    },
    {
        "id": "F00124",
        "name": "Csalit utca",
        "lat": "47.529502",
        "lon": "19.016316",
        "parent": "CSF00124"
    },
    {
        "id": "F00125",
        "name": "Csalit utca",
        "lat": "47.529340",
        "lon": "19.017046",
        "parent": "CSF00124"
    },
    {
        "id": "F00126",
        "name": "Virág Benedek utca",
        "lat": "47.530710",
        "lon": "19.026927",
        "parent": ""
    },
    {
        "id": "F00127",
        "name": "Szépvölgyi út",
        "lat": "47.530773",
        "lon": "19.026409",
        "parent": ""
    },
    {
        "id": "F00128",
        "name": "Folyondár utca",
        "lat": "47.529478",
        "lon": "19.030141",
        "parent": "CSF00128"
    },
    {
        "id": "F00129",
        "name": "Folyondár utca (Szépvölgyi út)",
        "lat": "47.529280",
        "lon": "19.030407",
        "parent": "CSF00128"
    },
    {
        "id": "F00130",
        "name": "Ürömi utca",
        "lat": "47.528183",
        "lon": "19.033329",
        "parent": "CSF00130"
    },
    {
        "id": "F00131",
        "name": "Ürömi utca",
        "lat": "47.528039",
        "lon": "19.033422",
        "parent": "CSF00130"
    },
    {
        "id": "F00132",
        "name": "Kolosy tér",
        "lat": "47.527725",
        "lon": "19.036715",
        "parent": "CSF00137"
    },
    {
        "id": "F00133",
        "name": "Kolosy tér",
        "lat": "47.527842",
        "lon": "19.036888",
        "parent": "CSF00137"
    },
    {
        "id": "F00135",
        "name": "Kolosy tér",
        "lat": "47.528034",
        "lon": "19.037678",
        "parent": "CSF00137"
    },
    {
        "id": "F00136",
        "name": "Kolosy tér",
        "lat": "47.527698",
        "lon": "19.037472",
        "parent": "CSF00137"
    },
    {
        "id": "F00137",
        "name": "Kolosy tér",
        "lat": "47.528598",
        "lon": "19.038946",
        "parent": "CSF00137"
    },
    {
        "id": "F00138",
        "name": "Kolosy tér",
        "lat": "47.526973",
        "lon": "19.038276",
        "parent": "CSF00137"
    },
    {
        "id": "F00139",
        "name": "Szépvölgyi út",
        "lat": "47.527195",
        "lon": "19.040181",
        "parent": "CSF00140"
    },
    {
        "id": "F00140",
        "name": "Szépvölgyi út",
        "lat": "47.527410",
        "lon": "19.040155",
        "parent": "CSF00140"
    },
    {
        "id": "F00141",
        "name": "Margitsziget \/ Margit híd",
        "lat": "47.514713",
        "lon": "19.042606",
        "parent": "CSF00143"
    },
    {
        "id": "F00142",
        "name": "Margitsziget \/ Margit híd",
        "lat": "47.514431",
        "lon": "19.044459",
        "parent": "CSF00143"
    },
    {
        "id": "F00143",
        "name": "Margitsziget \/ Margit híd",
        "lat": "47.515963",
        "lon": "19.043987",
        "parent": "CSF00143"
    },
    {
        "id": "F00144",
        "name": "Margitsziget \/ Margit híd",
        "lat": "47.515852",
        "lon": "19.043781",
        "parent": "CSF00143"
    },
    {
        "id": "F00146",
        "name": "Margitsziget \/ Margit híd",
        "lat": "47.514629",
        "lon": "19.043264",
        "parent": "CSF00143"
    },
    {
        "id": "F00147",
        "name": "Labanc út",
        "lat": "47.519017",
        "lon": "18.981720",
        "parent": "CSF00148"
    },
    {
        "id": "F00148",
        "name": "Labanc út",
        "lat": "47.519026",
        "lon": "18.981030",
        "parent": "CSF00148"
    },
    {
        "id": "F00149",
        "name": "Dénes utca",
        "lat": "47.521644",
        "lon": "18.968478",
        "parent": "CSF00149"
    },
    {
        "id": "F00150",
        "name": "Dénes utca",
        "lat": "47.521635",
        "lon": "18.968000",
        "parent": "CSF00149"
    },
    {
        "id": "F00151",
        "name": "Baba utca",
        "lat": "47.524266",
        "lon": "19.013278",
        "parent": "CSF00151"
    },
    {
        "id": "F00152",
        "name": "Baba utca",
        "lat": "47.524230",
        "lon": "19.013052",
        "parent": "CSF00151"
    },
    {
        "id": "F00153",
        "name": "Garas utca",
        "lat": "47.511549",
        "lon": "19.019194",
        "parent": "CSF00153"
    },
    {
        "id": "F00154",
        "name": "Garas utca",
        "lat": "47.511280",
        "lon": "19.019845",
        "parent": "CSF00153"
    },
    {
        "id": "F00155",
        "name": "Városmajor",
        "lat": "47.509596",
        "lon": "19.014018",
        "parent": "CSF00156"
    },
    {
        "id": "F00156",
        "name": "Városmajor",
        "lat": "47.509614",
        "lon": "19.013222",
        "parent": "CSF00156"
    },
    {
        "id": "F00157",
        "name": "Városmajor",
        "lat": "47.509596",
        "lon": "19.013022",
        "parent": "CSF00156"
    },
    {
        "id": "F00158",
        "name": "Városmajor",
        "lat": "47.509560",
        "lon": "19.013713",
        "parent": "CSF00156"
    },
    {
        "id": "F00159",
        "name": "Szent János Kórház",
        "lat": "47.510377",
        "lon": "19.008402",
        "parent": "CSF00159"
    },
    {
        "id": "F00160",
        "name": "Nagyajtai utca",
        "lat": "47.513631",
        "lon": "19.003049",
        "parent": "CSF00162"
    },
    {
        "id": "F00161",
        "name": "Nagyajtai utca",
        "lat": "47.513586",
        "lon": "19.002837",
        "parent": "CSF00162"
    },
    {
        "id": "F00162",
        "name": "Nagyajtai utca",
        "lat": "47.513721",
        "lon": "19.002677",
        "parent": "CSF00162"
    },
    {
        "id": "F00163",
        "name": "Nagyajtai utca",
        "lat": "47.513586",
        "lon": "19.002598",
        "parent": "CSF00162"
    },
    {
        "id": "F00164",
        "name": "Budagyöngye",
        "lat": "47.516049",
        "lon": "18.999489",
        "parent": "CSF00166"
    },
    {
        "id": "F00165",
        "name": "Budagyöngye",
        "lat": "47.516130",
        "lon": "18.999157",
        "parent": "CSF00166"
    },
    {
        "id": "F00166",
        "name": "Budagyöngye",
        "lat": "47.516663",
        "lon": "18.997968",
        "parent": "CSF00166"
    },
    {
        "id": "F00167",
        "name": "Budagyöngye",
        "lat": "47.516184",
        "lon": "18.998971",
        "parent": "CSF00166"
    },
    {
        "id": "F00168",
        "name": "Szépilona",
        "lat": "47.517657",
        "lon": "18.995052",
        "parent": "CSF00168"
    },
    {
        "id": "F00169",
        "name": "Szépilona",
        "lat": "47.517494",
        "lon": "18.992955",
        "parent": "CSF00168"
    },
    {
        "id": "F00170",
        "name": "Szépilona",
        "lat": "47.517531",
        "lon": "18.995345",
        "parent": "CSF00168"
    },
    {
        "id": "F00171",
        "name": "Kuruclesi út",
        "lat": "47.518462",
        "lon": "18.985346",
        "parent": "CSF00172"
    },
    {
        "id": "F00172",
        "name": "Kuruclesi út",
        "lat": "47.518479",
        "lon": "18.984575",
        "parent": "CSF00172"
    },
    {
        "id": "F00173",
        "name": "Vízművek",
        "lat": "47.520173",
        "lon": "18.973367",
        "parent": "CSF00173"
    },
    {
        "id": "F00174",
        "name": "Vízművek",
        "lat": "47.520056",
        "lon": "18.973367",
        "parent": "CSF00173"
    },
    {
        "id": "F00175",
        "name": "Bölcsőde",
        "lat": "47.523646",
        "lon": "18.962088",
        "parent": "CSF00176"
    },
    {
        "id": "F00176",
        "name": "Bölcsőde",
        "lat": "47.523708",
        "lon": "18.961583",
        "parent": "CSF00176"
    },
    {
        "id": "F00177",
        "name": "Irén utca",
        "lat": "47.524615",
        "lon": "18.958766",
        "parent": "CSF00177"
    },
    {
        "id": "F00178",
        "name": "Irén utca",
        "lat": "47.524507",
        "lon": "18.958727",
        "parent": "CSF00177"
    },
    {
        "id": "F00179",
        "name": "Szépjuhászné, Gyermekvasút",
        "lat": "47.527363",
        "lon": "18.954074",
        "parent": "CSF00179"
    },
    {
        "id": "F00180",
        "name": "Szépjuhászné, Gyermekvasút",
        "lat": "47.527147",
        "lon": "18.954074",
        "parent": "CSF00179"
    },
    {
        "id": "F00181",
        "name": "Laktanya",
        "lat": "47.526720",
        "lon": "18.948192",
        "parent": "CSF00182"
    },
    {
        "id": "F00182",
        "name": "Laktanya",
        "lat": "47.526756",
        "lon": "18.948431",
        "parent": "CSF00182"
    },
    {
        "id": "F00183",
        "name": "Országos Korányi Intézet",
        "lat": "47.522693",
        "lon": "18.941573",
        "parent": "CSF00183"
    },
    {
        "id": "F00184",
        "name": "Országos Korányi Intézet",
        "lat": "47.522360",
        "lon": "18.941149",
        "parent": "CSF00183"
    },
    {
        "id": "F00185",
        "name": "Margit híd, budai hídfő",
        "lat": "47.515843",
        "lon": "19.039533",
        "parent": "CSF00185"
    },
    {
        "id": "F00186",
        "name": "Margit híd, budai hídfő",
        "lat": "47.514908",
        "lon": "19.039227",
        "parent": "CSF00185"
    },
    {
        "id": "F00187",
        "name": "Bem József tér",
        "lat": "47.512064",
        "lon": "19.039336",
        "parent": "CS069092"
    },
    {
        "id": "F00188",
        "name": "Bem József tér",
        "lat": "47.511380",
        "lon": "19.038221",
        "parent": "CS069092"
    },
    {
        "id": "F00189",
        "name": "Margit híd, budai hídfő H",
        "lat": "47.514602",
        "lon": "19.038882",
        "parent": "CSF00234"
    },
    {
        "id": "F00190",
        "name": "Margit híd, budai hídfő H",
        "lat": "47.514494",
        "lon": "19.038869",
        "parent": "CSF00234"
    },
    {
        "id": "F00191",
        "name": "Margit híd, budai hídfő H",
        "lat": "47.514645",
        "lon": "19.036653",
        "parent": "CSF00234"
    },
    {
        "id": "F00192",
        "name": "Margit híd, budai hídfő H",
        "lat": "47.514647",
        "lon": "19.038192",
        "parent": "CSF00234"
    },
    {
        "id": "F00193",
        "name": "Horvát utca",
        "lat": "47.511102",
        "lon": "19.034489",
        "parent": "CSF00193"
    },
    {
        "id": "F00194",
        "name": "Horvát utca",
        "lat": "47.510707",
        "lon": "19.034396",
        "parent": "CSF00193"
    },
    {
        "id": "F00195",
        "name": "Mechwart liget",
        "lat": "47.511317",
        "lon": "19.032287",
        "parent": "CSF00195"
    },
    {
        "id": "F00196",
        "name": "Mechwart liget",
        "lat": "47.511246",
        "lon": "19.032165",
        "parent": "CSF00195"
    },
    {
        "id": "F00197",
        "name": "Mechwart liget",
        "lat": "47.510547",
        "lon": "19.030473",
        "parent": "CSF00195"
    },
    {
        "id": "F00198",
        "name": "Mechwart liget",
        "lat": "47.510778",
        "lon": "19.031462",
        "parent": "CSF00195"
    },
    {
        "id": "F00199",
        "name": "Mechwart liget",
        "lat": "47.510976",
        "lon": "19.032125",
        "parent": "CSF00195"
    },
    {
        "id": "F00200",
        "name": "Mechwart liget",
        "lat": "47.510516",
        "lon": "19.031225",
        "parent": "CSF00195"
    },
    {
        "id": "F00201",
        "name": "Füge utca",
        "lat": "47.513951",
        "lon": "19.027400",
        "parent": "CSF00202"
    },
    {
        "id": "F00202",
        "name": "Füge utca",
        "lat": "47.513960",
        "lon": "19.026776",
        "parent": "CSF00202"
    },
    {
        "id": "F00203",
        "name": "Rét utca",
        "lat": "47.514645",
        "lon": "19.024251",
        "parent": "CSF00204"
    },
    {
        "id": "F00204",
        "name": "Rét utca",
        "lat": "47.514762",
        "lon": "19.023866",
        "parent": "CSF00204"
    },
    {
        "id": "F00205",
        "name": "Ady Endre utca",
        "lat": "47.516210",
        "lon": "19.024596",
        "parent": "CSF00206"
    },
    {
        "id": "F00206",
        "name": "Ady Endre utca",
        "lat": "47.516650",
        "lon": "19.024250",
        "parent": "CSF00206"
    },
    {
        "id": "F00207",
        "name": "Tapolcsányi utca",
        "lat": "47.517504",
        "lon": "19.021143",
        "parent": "CSF00207"
    },
    {
        "id": "F00208",
        "name": "Tapolcsányi utca",
        "lat": "47.517359",
        "lon": "19.020894",
        "parent": "CSF00207"
    },
    {
        "id": "F00209",
        "name": "Eszter utca",
        "lat": "47.520149",
        "lon": "19.021912",
        "parent": "CSF00209"
    },
    {
        "id": "F00210",
        "name": "Eszter utca",
        "lat": "47.520014",
        "lon": "19.021845",
        "parent": "CSF00209"
    },
    {
        "id": "F00211",
        "name": "Vend utca",
        "lat": "47.521680",
        "lon": "19.020528",
        "parent": "CSF00217"
    },
    {
        "id": "F00212",
        "name": "Vend utca",
        "lat": "47.521444",
        "lon": "19.020729",
        "parent": "CSF00217"
    },
    {
        "id": "F00213",
        "name": "Pusztaszeri körönd",
        "lat": "47.523233",
        "lon": "19.017382",
        "parent": "CSF00213"
    },
    {
        "id": "F00214",
        "name": "Pusztaszeri körönd",
        "lat": "47.523098",
        "lon": "19.017820",
        "parent": "CSF00213"
    },
    {
        "id": "F00215",
        "name": "Pusztaszeri körönd",
        "lat": "47.522846",
        "lon": "19.017462",
        "parent": "CSF00213"
    },
    {
        "id": "F00216",
        "name": "Pusztaszeri körönd",
        "lat": "47.522675",
        "lon": "19.017608",
        "parent": "CSF00213"
    },
    {
        "id": "F00217",
        "name": "Vend utca",
        "lat": "47.523612",
        "lon": "19.020436",
        "parent": "CSF00217"
    },
    {
        "id": "F00218",
        "name": "Vend utca",
        "lat": "47.523468",
        "lon": "19.020688",
        "parent": "CSF00217"
    },
    {
        "id": "F00219",
        "name": "Pusztaszeri út",
        "lat": "47.524377",
        "lon": "19.023091",
        "parent": ""
    },
    {
        "id": "F00220",
        "name": "Cimbalom utca",
        "lat": "47.524098",
        "lon": "19.023052",
        "parent": ""
    },
    {
        "id": "F00221",
        "name": "Vérhalom tér",
        "lat": "47.520977",
        "lon": "19.025165",
        "parent": "CSF00221"
    },
    {
        "id": "F00222",
        "name": "Vérhalom tér",
        "lat": "47.520545",
        "lon": "19.024713",
        "parent": "CSF00221"
    },
    {
        "id": "F00223",
        "name": "Vérhalom utca",
        "lat": "47.519835",
        "lon": "19.028750",
        "parent": ""
    },
    {
        "id": "F00224",
        "name": "Mandula utca",
        "lat": "47.519638",
        "lon": "19.028524",
        "parent": ""
    },
    {
        "id": "F00225",
        "name": "Sarolta utca",
        "lat": "47.522453",
        "lon": "19.031803",
        "parent": ""
    },
    {
        "id": "F00226",
        "name": "Kavics utca",
        "lat": "47.521149",
        "lon": "19.031870",
        "parent": ""
    },
    {
        "id": "F00227",
        "name": "Vérhalom utca",
        "lat": "47.519063",
        "lon": "19.033424",
        "parent": ""
    },
    {
        "id": "F00228",
        "name": "Szemlőhegy utca",
        "lat": "47.516948",
        "lon": "19.027716",
        "parent": ""
    },
    {
        "id": "F00229",
        "name": "Rómer Flóris utca",
        "lat": "47.516795",
        "lon": "19.027901",
        "parent": ""
    },
    {
        "id": "F00230",
        "name": "Zivatar utca",
        "lat": "47.515626",
        "lon": "19.031659",
        "parent": "CSF00231"
    },
    {
        "id": "F00231",
        "name": "Zivatar utca",
        "lat": "47.515698",
        "lon": "19.031181",
        "parent": "CSF00231"
    },
    {
        "id": "F00232",
        "name": "Margit körút",
        "lat": "47.513846",
        "lon": "19.033957",
        "parent": ""
    },
    {
        "id": "F00233",
        "name": "Apostol utca",
        "lat": "47.514655",
        "lon": "19.033226",
        "parent": ""
    },
    {
        "id": "F00234",
        "name": "Margit híd, budai hídfő H",
        "lat": "47.516041",
        "lon": "19.039453",
        "parent": "CSF00234"
    },
    {
        "id": "F00235",
        "name": "Margit híd, budai hídfő H",
        "lat": "47.515396",
        "lon": "19.039300",
        "parent": "CSF00234"
    },
    {
        "id": "F00236",
        "name": "Margit híd, budai hídfő H",
        "lat": "47.515115",
        "lon": "19.038723",
        "parent": "CSF00234"
    },
    {
        "id": "F00237",
        "name": "Margit híd, budai hídfő H",
        "lat": "47.515536",
        "lon": "19.038313",
        "parent": "CSF00234"
    },
    {
        "id": "F00239",
        "name": "Szent Lukács Gyógyfürdő",
        "lat": "47.517156",
        "lon": "19.036425",
        "parent": "CSF00239"
    },
    {
        "id": "F00240",
        "name": "Szent Lukács Gyógyfürdő",
        "lat": "47.516913",
        "lon": "19.036479",
        "parent": "CSF00239"
    },
    {
        "id": "F00241",
        "name": "Komjádi Béla utca",
        "lat": "47.520604",
        "lon": "19.036776",
        "parent": "CSF00241"
    },
    {
        "id": "F00242",
        "name": "Komjádi Béla utca",
        "lat": "47.520343",
        "lon": "19.036590",
        "parent": "CSF00241"
    },
    {
        "id": "F00243",
        "name": "Zsigmond tér",
        "lat": "47.524337",
        "lon": "19.036948",
        "parent": "CSF00245"
    },
    {
        "id": "F00244",
        "name": "Zsigmond tér",
        "lat": "47.523869",
        "lon": "19.036842",
        "parent": "CSF00245"
    },
    {
        "id": "F00245",
        "name": "Zsigmond tér",
        "lat": "47.524991",
        "lon": "19.037951",
        "parent": "CSF00245"
    },
    {
        "id": "F00246",
        "name": "Zsigmond tér",
        "lat": "47.524089",
        "lon": "19.037541",
        "parent": "CSF00245"
    },
    {
        "id": "F00247",
        "name": "Császár-Komjádi uszoda",
        "lat": "47.521427",
        "lon": "19.038240",
        "parent": "CSF00247"
    },
    {
        "id": "F00248",
        "name": "Császár-Komjádi uszoda",
        "lat": "47.519678",
        "lon": "19.038051",
        "parent": "CSF00247"
    },
    {
        "id": "F00249",
        "name": "Felhévízi utca",
        "lat": "47.526579",
        "lon": "19.030357",
        "parent": "CSF00250"
    },
    {
        "id": "F00250",
        "name": "Felhévízi utca",
        "lat": "47.527131",
        "lon": "19.031417",
        "parent": "CSF00250"
    },
    {
        "id": "F00251",
        "name": "Pusztaszeri út 25.",
        "lat": "47.527787",
        "lon": "19.028482",
        "parent": "CSF00251"
    },
    {
        "id": "F00252",
        "name": "Pusztaszeri út 25.",
        "lat": "47.527562",
        "lon": "19.028415",
        "parent": "CSF00251"
    },
    {
        "id": "F00253",
        "name": "Alsó Zöldmáli út",
        "lat": "47.528353",
        "lon": "19.027379",
        "parent": "CSF00253"
    },
    {
        "id": "F00254",
        "name": "Alsó Zöldmáli út",
        "lat": "47.528227",
        "lon": "19.027100",
        "parent": "CSF00253"
    },
    {
        "id": "F00255",
        "name": "Szemlő-hegyi-barlang",
        "lat": "47.528811",
        "lon": "19.024670",
        "parent": "CSF00255"
    },
    {
        "id": "F00256",
        "name": "Szemlő-hegyi-barlang",
        "lat": "47.528721",
        "lon": "19.024165",
        "parent": "CSF00255"
    },
    {
        "id": "F00257",
        "name": "Zöldmáli lejtő",
        "lat": "47.528703",
        "lon": "19.022000",
        "parent": "CSF00257"
    },
    {
        "id": "F00258",
        "name": "Zöldmáli lejtő",
        "lat": "47.528550",
        "lon": "19.021629",
        "parent": "CSF00257"
    },
    {
        "id": "F00259",
        "name": "Zöldkert út",
        "lat": "47.529608",
        "lon": "19.011004",
        "parent": "CSF00259"
    },
    {
        "id": "F00260",
        "name": "Zöldkert út",
        "lat": "47.529393",
        "lon": "19.011163",
        "parent": "CSF00259"
    },
    {
        "id": "F00261",
        "name": "Pitypang utca",
        "lat": "47.530066",
        "lon": "19.008772",
        "parent": "CSF00261"
    },
    {
        "id": "F00262",
        "name": "Pitypang utca",
        "lat": "47.529779",
        "lon": "19.009078",
        "parent": "CSF00261"
    },
    {
        "id": "F00264",
        "name": "Verecke lépcső",
        "lat": "47.529048",
        "lon": "19.004297",
        "parent": "CSF00265"
    },
    {
        "id": "F00265",
        "name": "Verecke lépcső",
        "lat": "47.529129",
        "lon": "19.003713",
        "parent": "CSF00265"
    },
    {
        "id": "F00266",
        "name": "Verecke lépcső",
        "lat": "47.529066",
        "lon": "19.002677",
        "parent": "CSF00265"
    },
    {
        "id": "F00267",
        "name": "Tömörkény utca",
        "lat": "47.527439",
        "lon": "19.007645",
        "parent": "CSF00267"
    },
    {
        "id": "F00268",
        "name": "Tömörkény utca",
        "lat": "47.527224",
        "lon": "19.007672",
        "parent": "CSF00267"
    },
    {
        "id": "F00269",
        "name": "Móricz Zsigmond Gimnázium",
        "lat": "47.525381",
        "lon": "19.010051",
        "parent": "CSF00270"
    },
    {
        "id": "F00270",
        "name": "Móricz Zsigmond Gimnázium",
        "lat": "47.525614",
        "lon": "19.009187",
        "parent": "CSF00270"
    },
    {
        "id": "F00271",
        "name": "Vöröstorony lépcső",
        "lat": "47.531285",
        "lon": "18.997403",
        "parent": "CSF00271"
    },
    {
        "id": "F00272",
        "name": "Vöröstorony lépcső",
        "lat": "47.530908",
        "lon": "18.998041",
        "parent": "CSF00271"
    },
    {
        "id": "F00273",
        "name": "Nagybányai út",
        "lat": "47.533712",
        "lon": "18.993323",
        "parent": ""
    },
    {
        "id": "F00276",
        "name": "Pasaréti tér",
        "lat": "47.523656",
        "lon": "18.994236",
        "parent": "CSF00277"
    },
    {
        "id": "F00277",
        "name": "Pasaréti tér",
        "lat": "47.523725",
        "lon": "18.993099",
        "parent": "CSF00277"
    },
    {
        "id": "F00278",
        "name": "Pasaréti tér",
        "lat": "47.523494",
        "lon": "18.992829",
        "parent": "CSF00277"
    },
    {
        "id": "F00279",
        "name": "Pasaréti tér",
        "lat": "47.523548",
        "lon": "18.993187",
        "parent": "CSF00277"
    },
    {
        "id": "F00280",
        "name": "Harangvirág utca",
        "lat": "47.521787",
        "lon": "18.997438",
        "parent": "CSF00280"
    },
    {
        "id": "F00281",
        "name": "Harangvirág utca",
        "lat": "47.521436",
        "lon": "18.997811",
        "parent": "CSF00280"
    },
    {
        "id": "F00282",
        "name": "Virág árok",
        "lat": "47.519216",
        "lon": "19.000946",
        "parent": "CSF00283"
    },
    {
        "id": "F00283",
        "name": "Virág árok",
        "lat": "47.519539",
        "lon": "19.000428",
        "parent": "CSF00283"
    },
    {
        "id": "F00284",
        "name": "Gábor Áron utca \/ Pasaréti út",
        "lat": "47.516231",
        "lon": "19.004454",
        "parent": "CSF00285"
    },
    {
        "id": "F00285",
        "name": "Gábor Áron utca \/ Pasaréti út",
        "lat": "47.516671",
        "lon": "19.003976",
        "parent": "CSF00285"
    },
    {
        "id": "F00286",
        "name": "Júlia utca",
        "lat": "47.514280",
        "lon": "19.007231",
        "parent": "CSF00287"
    },
    {
        "id": "F00287",
        "name": "Júlia utca",
        "lat": "47.514694",
        "lon": "19.006447",
        "parent": "CSF00287"
    },
    {
        "id": "F00288",
        "name": "Vasas sportpálya",
        "lat": "47.512104",
        "lon": "19.008188",
        "parent": "CSF00288"
    },
    {
        "id": "F00289",
        "name": "Vasas sportpálya",
        "lat": "47.511510",
        "lon": "19.008879",
        "parent": "CSF00288"
    },
    {
        "id": "F00290",
        "name": "Fenyves utca",
        "lat": "47.523363",
        "lon": "19.002297",
        "parent": "CSF00290"
    },
    {
        "id": "F00291",
        "name": "Fenyves utca",
        "lat": "47.523219",
        "lon": "19.002430",
        "parent": "CSF00290"
    },
    {
        "id": "F00292",
        "name": "Tüske utca",
        "lat": "47.521197",
        "lon": "19.006362",
        "parent": ""
    },
    {
        "id": "F00293",
        "name": "Bimbó köz",
        "lat": "47.521799",
        "lon": "19.005565",
        "parent": ""
    },
    {
        "id": "F00294",
        "name": "Gábor Áron utca",
        "lat": "47.519642",
        "lon": "19.010466",
        "parent": ""
    },
    {
        "id": "F00295",
        "name": "Endrődi Sándor utca",
        "lat": "47.521118",
        "lon": "19.012231",
        "parent": "CS009512"
    },
    {
        "id": "F00296",
        "name": "Lóczy Lajos utca",
        "lat": "47.519039",
        "lon": "19.009617",
        "parent": ""
    },
    {
        "id": "F00297",
        "name": "Hankóczy Jenő utca",
        "lat": "47.516889",
        "lon": "19.008902",
        "parent": ""
    },
    {
        "id": "F00298",
        "name": "Zilah utca",
        "lat": "47.515604",
        "lon": "19.011558",
        "parent": ""
    },
    {
        "id": "F00299",
        "name": "Detrekő utca",
        "lat": "47.517349",
        "lon": "19.012433",
        "parent": ""
    },
    {
        "id": "F00300",
        "name": "Balogvár utca",
        "lat": "47.515396",
        "lon": "19.014549",
        "parent": ""
    },
    {
        "id": "F00301",
        "name": "Ruszti út",
        "lat": "47.514993",
        "lon": "19.014572",
        "parent": ""
    },
    {
        "id": "F00302",
        "name": "Rókushegyi lépcső",
        "lat": "47.512889",
        "lon": "19.017056",
        "parent": ""
    },
    {
        "id": "F00303",
        "name": "Lorántffy Zsuzsanna út",
        "lat": "47.512574",
        "lon": "19.017388",
        "parent": ""
    },
    {
        "id": "F00304",
        "name": "Ezredes utca",
        "lat": "47.510452",
        "lon": "19.021067",
        "parent": "CSF00304"
    },
    {
        "id": "F00305",
        "name": "Fény utcai piac",
        "lat": "47.508285",
        "lon": "19.023750",
        "parent": "CS008087"
    },
    {
        "id": "F00306",
        "name": "Széna tér",
        "lat": "47.508484",
        "lon": "19.026989",
        "parent": "CSF00308"
    },
    {
        "id": "F00307",
        "name": "Széna tér",
        "lat": "47.508159",
        "lon": "19.026805",
        "parent": "CSF00308"
    },
    {
        "id": "F00308",
        "name": "Széna tér",
        "lat": "47.508528",
        "lon": "19.027323",
        "parent": "CSF00308"
    },
    {
        "id": "F00309",
        "name": "Széna tér",
        "lat": "47.508376",
        "lon": "19.027374",
        "parent": "CSF00308"
    },
    {
        "id": "F00310",
        "name": "Kelemen László utca",
        "lat": "47.522421",
        "lon": "18.989152",
        "parent": "CSF00310"
    },
    {
        "id": "F00311",
        "name": "Kelemen László utca",
        "lat": "47.521667",
        "lon": "18.990427",
        "parent": "CSF00310"
    },
    {
        "id": "F00312",
        "name": "Kelemen László utca",
        "lat": "47.521999",
        "lon": "18.990294",
        "parent": "CSF00310"
    },
    {
        "id": "F00313",
        "name": "Kelemen László utca",
        "lat": "47.521622",
        "lon": "18.990600",
        "parent": "CSF00310"
    },
    {
        "id": "F00314",
        "name": "Zuhatag sor",
        "lat": "47.526072",
        "lon": "18.986014",
        "parent": "CSF00315"
    },
    {
        "id": "F00315",
        "name": "Zuhatag sor",
        "lat": "47.526152",
        "lon": "18.985801",
        "parent": "CSF00315"
    },
    {
        "id": "F00316",
        "name": "Nagyhíd",
        "lat": "47.528526",
        "lon": "18.983687",
        "parent": "CSF00316"
    },
    {
        "id": "F00317",
        "name": "Nagyhíd",
        "lat": "47.528274",
        "lon": "18.983860",
        "parent": "CSF00316"
    },
    {
        "id": "F00318",
        "name": "Vadaskerti utca",
        "lat": "47.531798",
        "lon": "18.980987",
        "parent": "CSF00319"
    },
    {
        "id": "F00319",
        "name": "Vadaskerti utca",
        "lat": "47.531858",
        "lon": "18.980793",
        "parent": "CSF00319"
    },
    {
        "id": "F00320",
        "name": "Budenz út",
        "lat": "47.520290",
        "lon": "18.988862",
        "parent": ""
    },
    {
        "id": "F00321",
        "name": "Széher út",
        "lat": "47.525994",
        "lon": "18.976838",
        "parent": ""
    },
    {
        "id": "F00322",
        "name": "Tárogató út",
        "lat": "47.527435",
        "lon": "18.979439",
        "parent": ""
    },
    {
        "id": "F00323",
        "name": "Bölöni György utca",
        "lat": "47.525774",
        "lon": "18.984460",
        "parent": "CSF00324"
    },
    {
        "id": "F00324",
        "name": "Bölöni György utca",
        "lat": "47.525837",
        "lon": "18.984168",
        "parent": "CSF00324"
    },
    {
        "id": "F00325",
        "name": "Szerb Antal utca",
        "lat": "47.528066",
        "lon": "18.981456",
        "parent": "CSF00326"
    },
    {
        "id": "F00326",
        "name": "Szerb Antal utca",
        "lat": "47.528371",
        "lon": "18.980938",
        "parent": "CSF00326"
    },
    {
        "id": "F00327",
        "name": "Lipótmezei út",
        "lat": "47.530529",
        "lon": "18.978770",
        "parent": "CSF00328"
    },
    {
        "id": "F00328",
        "name": "Lipótmezei út",
        "lat": "47.530852",
        "lon": "18.978252",
        "parent": "CSF00328"
    },
    {
        "id": "F00329",
        "name": "Nyéki út",
        "lat": "47.534771",
        "lon": "18.973917",
        "parent": "CSF00329"
    },
    {
        "id": "F00330",
        "name": "Nyéki út",
        "lat": "47.534574",
        "lon": "18.973997",
        "parent": "CSF00329"
    },
    {
        "id": "F00331",
        "name": "Csibor utca",
        "lat": "47.536729",
        "lon": "18.969159",
        "parent": "CSF00331"
    },
    {
        "id": "F00332",
        "name": "Csibor utca",
        "lat": "47.536127",
        "lon": "18.970568",
        "parent": "CSF00331"
    },
    {
        "id": "F00339",
        "name": "Bátori László utca",
        "lat": "47.544676",
        "lon": "18.963581",
        "parent": "CSF00339"
    },
    {
        "id": "F00340",
        "name": "Bátori László utca",
        "lat": "47.544564",
        "lon": "18.963389",
        "parent": "CSF00339"
    },
    {
        "id": "F00345",
        "name": "Heinrich István utca",
        "lat": "47.539321",
        "lon": "18.970935",
        "parent": "CSF00345"
    },
    {
        "id": "F00346",
        "name": "Heinrich István utca",
        "lat": "47.539321",
        "lon": "18.970736",
        "parent": "CSF00345"
    },
    {
        "id": "F00347",
        "name": "Völgy utca",
        "lat": "47.536760",
        "lon": "18.975375",
        "parent": "CSF00347"
    },
    {
        "id": "F00348",
        "name": "Völgy utca",
        "lat": "47.536445",
        "lon": "18.975628",
        "parent": "CSF00347"
    },
    {
        "id": "F00350",
        "name": "Ady lépcső",
        "lat": "47.543555",
        "lon": "18.944839",
        "parent": ""
    },
    {
        "id": "F00351",
        "name": "Adyliget",
        "lat": "47.547236",
        "lon": "18.938309",
        "parent": "CSF00351"
    },
    {
        "id": "F00352",
        "name": "Adyliget",
        "lat": "47.546985",
        "lon": "18.938721",
        "parent": "CSF00351"
    },
    {
        "id": "F00353",
        "name": "Villám utca",
        "lat": "47.545027",
        "lon": "18.952448",
        "parent": "CSF00354"
    },
    {
        "id": "F00354",
        "name": "Villám utca",
        "lat": "47.545244",
        "lon": "18.952753",
        "parent": "CSF00354"
    },
    {
        "id": "F00355",
        "name": "Nagyrét utca",
        "lat": "47.546566",
        "lon": "18.952831",
        "parent": ""
    },
    {
        "id": "F00356",
        "name": "Bükkfa utca",
        "lat": "47.546482",
        "lon": "18.960483",
        "parent": "CSF00357"
    },
    {
        "id": "F00357",
        "name": "Bükkfa utca",
        "lat": "47.546500",
        "lon": "18.959978",
        "parent": "CSF00357"
    },
    {
        "id": "F00358",
        "name": "Hunyadi János utca",
        "lat": "47.548581",
        "lon": "18.964717",
        "parent": "CSF00358"
    },
    {
        "id": "F00359",
        "name": "Hunyadi János utca",
        "lat": "47.548077",
        "lon": "18.964625",
        "parent": "CSF00358"
    },
    {
        "id": "F00360",
        "name": "Kossuth Lajos utca",
        "lat": "47.552142",
        "lon": "18.964273",
        "parent": "CSF00360"
    },
    {
        "id": "F00361",
        "name": "Kossuth Lajos utca",
        "lat": "47.552079",
        "lon": "18.964114",
        "parent": "CSF00360"
    },
    {
        "id": "F00362",
        "name": "Kerényi Frigyes utca",
        "lat": "47.553066",
        "lon": "18.949338",
        "parent": "CSF00363"
    },
    {
        "id": "F00363",
        "name": "Kerényi Frigyes utca",
        "lat": "47.553079",
        "lon": "18.949186",
        "parent": "CSF00363"
    },
    {
        "id": "F00364",
        "name": "Ábránd utca",
        "lat": "47.551310",
        "lon": "18.947242",
        "parent": "CSF00365"
    },
    {
        "id": "F00365",
        "name": "Ábránd utca",
        "lat": "47.551598",
        "lon": "18.947002",
        "parent": "CSF00365"
    },
    {
        "id": "F00366",
        "name": "Turul utca",
        "lat": "47.548119",
        "lon": "18.949719",
        "parent": "CSF00371"
    },
    {
        "id": "F00367",
        "name": "Turul utca",
        "lat": "47.548308",
        "lon": "18.949360",
        "parent": "CSF00371"
    },
    {
        "id": "F00368",
        "name": "Széchenyi utca",
        "lat": "47.547718",
        "lon": "18.954423",
        "parent": "CSF00368"
    },
    {
        "id": "F00369",
        "name": "Széchenyi utca",
        "lat": "47.547530",
        "lon": "18.954715",
        "parent": "CSF00368"
    },
    {
        "id": "F00370",
        "name": "Turul utca (kishíd)",
        "lat": "47.548985",
        "lon": "18.951763",
        "parent": "CSF00371"
    },
    {
        "id": "F00371",
        "name": "Turul utca (kishíd)",
        "lat": "47.549200",
        "lon": "18.951431",
        "parent": "CSF00371"
    },
    {
        "id": "F00372",
        "name": "Gondozási Központ",
        "lat": "47.514299",
        "lon": "19.015664",
        "parent": "CSF00372"
    },
    {
        "id": "F00373",
        "name": "Gondozási Központ",
        "lat": "47.514121",
        "lon": "19.015622",
        "parent": "CSF00372"
    },
    {
        "id": "F00374",
        "name": "Arany János utca",
        "lat": "47.554736",
        "lon": "18.946079",
        "parent": "CSF00375"
    },
    {
        "id": "F00375",
        "name": "Arany János utca",
        "lat": "47.554853",
        "lon": "18.945907",
        "parent": "CSF00375"
    },
    {
        "id": "F00376",
        "name": "Szirom utca",
        "lat": "47.557960",
        "lon": "18.940333",
        "parent": "CSF00376"
    },
    {
        "id": "F00377",
        "name": "Szirom utca",
        "lat": "47.557682",
        "lon": "18.940706",
        "parent": "CSF00376"
    },
    {
        "id": "F00378",
        "name": "Kerekhegyi utca",
        "lat": "47.559859",
        "lon": "18.941910",
        "parent": "CSF00379"
    },
    {
        "id": "F00379",
        "name": "Kerekhegyi utca",
        "lat": "47.560372",
        "lon": "18.942016",
        "parent": "CSF00379"
    },
    {
        "id": "F00380",
        "name": "Máriaremetei kegytemplom",
        "lat": "47.562786",
        "lon": "18.946090",
        "parent": "CSF00380"
    },
    {
        "id": "F00381",
        "name": "Máriaremetei kegytemplom",
        "lat": "47.562408",
        "lon": "18.945732",
        "parent": "CSF00380"
    },
    {
        "id": "F00382",
        "name": "Köztársaság utca",
        "lat": "47.566112",
        "lon": "18.942934",
        "parent": "CSF00383"
    },
    {
        "id": "F00383",
        "name": "Köztársaság utca",
        "lat": "47.566417",
        "lon": "18.942349",
        "parent": "CSF00383"
    },
    {
        "id": "F00384",
        "name": "Honfoglalás utca",
        "lat": "47.568772",
        "lon": "18.940391",
        "parent": "CSF00385"
    },
    {
        "id": "F00385",
        "name": "Honfoglalás utca",
        "lat": "47.568852",
        "lon": "18.940151",
        "parent": "CSF00385"
    },
    {
        "id": "F00387",
        "name": "Budaliget, Géza fejedelem útja",
        "lat": "47.567706",
        "lon": "18.936260",
        "parent": "CSF00387"
    },
    {
        "id": "F00388",
        "name": "Csatlós utca",
        "lat": "47.558264",
        "lon": "18.948823",
        "parent": "CSF00389"
    },
    {
        "id": "F00389",
        "name": "Csatlós utca",
        "lat": "47.558804",
        "lon": "18.948596",
        "parent": "CSF00389"
    },
    {
        "id": "F00390",
        "name": "Máriaremetei kegytemplom",
        "lat": "47.562590",
        "lon": "18.947579",
        "parent": "CSF00380"
    },
    {
        "id": "F00391",
        "name": "Máriaremetei kegytemplom",
        "lat": "47.562194",
        "lon": "18.947553",
        "parent": "CSF00380"
    },
    {
        "id": "F00392",
        "name": "Bölény utca",
        "lat": "47.564975",
        "lon": "18.949980",
        "parent": "CSF00393"
    },
    {
        "id": "F00393",
        "name": "Bölény utca",
        "lat": "47.565345",
        "lon": "18.950405",
        "parent": "CSF00393"
    },
    {
        "id": "F00394",
        "name": "Solymári elágazás",
        "lat": "47.566797",
        "lon": "18.955293",
        "parent": "CSF00395"
    },
    {
        "id": "F00395",
        "name": "Solymári elágazás",
        "lat": "47.566841",
        "lon": "18.954920",
        "parent": "CSF00395"
    },
    {
        "id": "F00396",
        "name": "Szarvashegy utca",
        "lat": "47.569301",
        "lon": "18.948723",
        "parent": "CSF00396"
    },
    {
        "id": "F00397",
        "name": "Szarvashegy utca",
        "lat": "47.569274",
        "lon": "18.948523",
        "parent": "CSF00396"
    },
    {
        "id": "F00398",
        "name": "Örökzöld utca",
        "lat": "47.572355",
        "lon": "18.944424",
        "parent": "CSF00398"
    },
    {
        "id": "F00399",
        "name": "Örökzöld utca",
        "lat": "47.571879",
        "lon": "18.944704",
        "parent": "CSF00398"
    },
    {
        "id": "F00400",
        "name": "Templom utca (Kultúrkúria)",
        "lat": "47.564588",
        "lon": "18.960187",
        "parent": "CSF00401"
    },
    {
        "id": "F00401",
        "name": "Templom utca (Kultúrkúria)",
        "lat": "47.564624",
        "lon": "18.959629",
        "parent": "CSF00401"
    },
    {
        "id": "F00402",
        "name": "Községház utca",
        "lat": "47.562459",
        "lon": "18.963260",
        "parent": "CSF00403"
    },
    {
        "id": "F00403",
        "name": "Községház utca",
        "lat": "47.562962",
        "lon": "18.962741",
        "parent": "CSF00403"
    },
    {
        "id": "F00404",
        "name": "Mikszáth Kálmán utca",
        "lat": "47.559195",
        "lon": "18.965671",
        "parent": "CSF00405"
    },
    {
        "id": "F00405",
        "name": "Mikszáth Kálmán utca",
        "lat": "47.559762",
        "lon": "18.965098",
        "parent": "CSF00405"
    },
    {
        "id": "F00406",
        "name": "Kölcsey utca",
        "lat": "47.555310",
        "lon": "18.965903",
        "parent": "CSF00407"
    },
    {
        "id": "F00407",
        "name": "Kölcsey utca",
        "lat": "47.555697",
        "lon": "18.965929",
        "parent": "CSF00407"
    },
    {
        "id": "F00408",
        "name": "Szent János Kórház",
        "lat": "47.509631",
        "lon": "19.010022",
        "parent": "CSF00159"
    },
    {
        "id": "F00409",
        "name": "Szent János Kórház",
        "lat": "47.509784",
        "lon": "19.009783",
        "parent": "CSF00159"
    },
    {
        "id": "F00410",
        "name": "Szent János Kórház",
        "lat": "47.509874",
        "lon": "19.009836",
        "parent": "CSF00159"
    },
    {
        "id": "F00411",
        "name": "Szent János Kórház",
        "lat": "47.509837",
        "lon": "19.009411",
        "parent": "CSF00159"
    },
    {
        "id": "F00412",
        "name": "Széll Kálmán tér M",
        "lat": "47.507673",
        "lon": "19.024615",
        "parent": "CS073099"
    },
    {
        "id": "F00414",
        "name": "Kelemen László utca",
        "lat": "47.522260",
        "lon": "18.990825",
        "parent": "CSF00310"
    },
    {
        "id": "F00415",
        "name": "Kelemen László utca",
        "lat": "47.522278",
        "lon": "18.990599",
        "parent": "CSF00310"
    },
    {
        "id": "F00416",
        "name": "Széher út 16.",
        "lat": "47.521951",
        "lon": "18.984624",
        "parent": ""
    },
    {
        "id": "F00417",
        "name": "Bölöni György utca \/ Széher út",
        "lat": "47.524126",
        "lon": "18.980545",
        "parent": ""
    },
    {
        "id": "F00422",
        "name": "Széll Kálmán tér M",
        "lat": "47.507457",
        "lon": "19.023859",
        "parent": "CS073099"
    },
    {
        "id": "F00423",
        "name": "Vöröstorony utca",
        "lat": "47.528570",
        "lon": "18.999862",
        "parent": "CSF00423"
    },
    {
        "id": "F00424",
        "name": "Vöröstorony utca",
        "lat": "47.528471",
        "lon": "18.999995",
        "parent": "CSF00423"
    },
    {
        "id": "F00425",
        "name": "Nyúl utca",
        "lat": "47.508761",
        "lon": "19.018041",
        "parent": "CSF00427"
    },
    {
        "id": "F00426",
        "name": "Nyúl utca",
        "lat": "47.508725",
        "lon": "19.017908",
        "parent": "CSF00427"
    },
    {
        "id": "F00427",
        "name": "Nyúl utca",
        "lat": "47.509030",
        "lon": "19.017019",
        "parent": "CSF00427"
    },
    {
        "id": "F00428",
        "name": "Nyúl utca",
        "lat": "47.508680",
        "lon": "19.018864",
        "parent": "CSF00427"
    },
    {
        "id": "F00429",
        "name": "Akadémia",
        "lat": "47.519545",
        "lon": "18.993431",
        "parent": "CSF00429"
    },
    {
        "id": "F00430",
        "name": "Akadémia",
        "lat": "47.519375",
        "lon": "18.993856",
        "parent": "CSF00429"
    },
    {
        "id": "F00431",
        "name": "Akadémia",
        "lat": "47.518943",
        "lon": "18.994122",
        "parent": "CSF00429"
    },
    {
        "id": "F00432",
        "name": "Akadémia",
        "lat": "47.519294",
        "lon": "18.994121",
        "parent": "CSF00429"
    },
    {
        "id": "F00433",
        "name": "Tücsök utca",
        "lat": "47.585487",
        "lon": "18.997590",
        "parent": "CSF00433"
    },
    {
        "id": "F00434",
        "name": "Tücsök utca",
        "lat": "47.585460",
        "lon": "18.997430",
        "parent": "CSF00433"
    },
    {
        "id": "F00435",
        "name": "Pusztadombi utca",
        "lat": "47.602488",
        "lon": "19.056793",
        "parent": ""
    },
    {
        "id": "F00436",
        "name": "Égető utca",
        "lat": "47.604054",
        "lon": "19.052418",
        "parent": ""
    },
    {
        "id": "F00437",
        "name": "Táncsics Mihály utca",
        "lat": "47.602723",
        "lon": "19.051234",
        "parent": ""
    },
    {
        "id": "F00438",
        "name": "Gulácsy Lajos utca",
        "lat": "47.602642",
        "lon": "19.048242",
        "parent": "CSF00438"
    },
    {
        "id": "F00439",
        "name": "Gulácsy Lajos utca",
        "lat": "47.602534",
        "lon": "19.048003",
        "parent": "CSF00438"
    },
    {
        "id": "F00440",
        "name": "Szőlőkert utca",
        "lat": "47.554889",
        "lon": "19.040682",
        "parent": "CSF00441"
    },
    {
        "id": "F00441",
        "name": "Szőlőkert utca",
        "lat": "47.555330",
        "lon": "19.041001",
        "parent": "CSF00441"
    },
    {
        "id": "F00442",
        "name": "Donát utca",
        "lat": "47.604207",
        "lon": "19.043933",
        "parent": ""
    },
    {
        "id": "F00443",
        "name": "Bojtár utca 49.",
        "lat": "47.559440",
        "lon": "19.039791",
        "parent": "CSF00444"
    },
    {
        "id": "F00444",
        "name": "Bojtár utca 49.",
        "lat": "47.559530",
        "lon": "19.038303",
        "parent": "CSF00444"
    },
    {
        "id": "F00445",
        "name": "Templom utca",
        "lat": "47.600312",
        "lon": "19.046620",
        "parent": "CSF00445"
    },
    {
        "id": "F00446",
        "name": "Templom utca",
        "lat": "47.600123",
        "lon": "19.046354",
        "parent": "CSF00445"
    },
    {
        "id": "F00447",
        "name": "Hősök tere",
        "lat": "47.598153",
        "lon": "19.043987",
        "parent": "CSF00447"
    },
    {
        "id": "F00448",
        "name": "Hősök tere",
        "lat": "47.597839",
        "lon": "19.044652",
        "parent": "CSF00447"
    },
    {
        "id": "F00449",
        "name": "Tamás utca",
        "lat": "47.599601",
        "lon": "19.041154",
        "parent": "CSF00449"
    },
    {
        "id": "F00450",
        "name": "Tamás utca",
        "lat": "47.599385",
        "lon": "19.041447",
        "parent": "CSF00449"
    },
    {
        "id": "F00451",
        "name": "Pince köz",
        "lat": "47.601598",
        "lon": "19.036100",
        "parent": ""
    },
    {
        "id": "F00452",
        "name": "Hősök tere",
        "lat": "47.597596",
        "lon": "19.045662",
        "parent": "CSF00447"
    },
    {
        "id": "F00453",
        "name": "Hősök tere",
        "lat": "47.598063",
        "lon": "19.045569",
        "parent": "CSF00447"
    },
    {
        "id": "F00454",
        "name": "Zemplén Győző utca",
        "lat": "47.596121",
        "lon": "19.045530",
        "parent": "CSF00454"
    },
    {
        "id": "F00455",
        "name": "Zemplén Győző utca",
        "lat": "47.595419",
        "lon": "19.045317",
        "parent": "CSF00454"
    },
    {
        "id": "F00456",
        "name": "Nád utca",
        "lat": "47.593989",
        "lon": "19.049120",
        "parent": "CSF00457"
    },
    {
        "id": "F00457",
        "name": "Nád utca",
        "lat": "47.594115",
        "lon": "19.048442",
        "parent": "CSF00457"
    },
    {
        "id": "F00458",
        "name": "Pünkösdfürdő utca",
        "lat": "47.595005",
        "lon": "19.051713",
        "parent": "CS044130"
    },
    {
        "id": "F00459",
        "name": "Pünkösdfürdő utca",
        "lat": "47.594915",
        "lon": "19.051819",
        "parent": "CS044130"
    },
    {
        "id": "F00460",
        "name": "Békásmegyer H",
        "lat": "47.598126",
        "lon": "19.054266",
        "parent": "CS008940"
    },
    {
        "id": "F00461",
        "name": "Békásmegyer H",
        "lat": "47.597883",
        "lon": "19.054080",
        "parent": "CS008940"
    },
    {
        "id": "F00462",
        "name": "Szolgáltatóház",
        "lat": "47.601241",
        "lon": "19.058143",
        "parent": "CSF00462"
    },
    {
        "id": "F00463",
        "name": "Szolgáltatóház",
        "lat": "47.601229",
        "lon": "19.057897",
        "parent": "CSF00462"
    },
    {
        "id": "F00464",
        "name": "Hímző utca",
        "lat": "47.597200",
        "lon": "19.058734",
        "parent": "CSF00464"
    },
    {
        "id": "F00465",
        "name": "Hímző utca",
        "lat": "47.597047",
        "lon": "19.059505",
        "parent": "CSF00464"
    },
    {
        "id": "F00466",
        "name": "Medgyessy Ferenc utca",
        "lat": "47.594899",
        "lon": "19.058175",
        "parent": "CSF00467"
    },
    {
        "id": "F00467",
        "name": "Medgyessy Ferenc utca",
        "lat": "47.595131",
        "lon": "19.056792",
        "parent": "CSF00467"
    },
    {
        "id": "F00468",
        "name": "Békásmegyer H",
        "lat": "47.597527",
        "lon": "19.056227",
        "parent": "CS008940"
    },
    {
        "id": "F00469",
        "name": "Békásmegyer H",
        "lat": "47.598207",
        "lon": "19.055835",
        "parent": "CS008940"
    },
    {
        "id": "F00470",
        "name": "Békásmegyer H",
        "lat": "47.597191",
        "lon": "19.055356",
        "parent": "CS008940"
    },
    {
        "id": "F00471",
        "name": "Békásmegyer",
        "lat": "47.598594",
        "lon": "19.055064",
        "parent": "CSF00471"
    },
    {
        "id": "F00472",
        "name": "Békásmegyer",
        "lat": "47.597587",
        "lon": "19.054133",
        "parent": "CSF00471"
    },
    {
        "id": "F00473",
        "name": "Madzsar József utca \/ Pünkösdfürdő utca",
        "lat": "47.595284",
        "lon": "19.054399",
        "parent": "CS044130"
    },
    {
        "id": "F00474",
        "name": "Madzsar József utca \/ Pünkösdfürdő utca",
        "lat": "47.595176",
        "lon": "19.054598",
        "parent": "CS044130"
    },
    {
        "id": "F00475",
        "name": "Madzsar József utca \/ Pünkösdfürdő utca",
        "lat": "47.594861",
        "lon": "19.053747",
        "parent": "CS044130"
    },
    {
        "id": "F00476",
        "name": "Madzsar József utca \/ Pünkösdfürdő utca",
        "lat": "47.594690",
        "lon": "19.052790",
        "parent": "CS044130"
    },
    {
        "id": "F00477",
        "name": "Szent István utca",
        "lat": "47.592415",
        "lon": "19.052111",
        "parent": ""
    },
    {
        "id": "F00478",
        "name": "Csillaghegy H",
        "lat": "47.585804",
        "lon": "19.047125",
        "parent": "CS009392"
    },
    {
        "id": "F00479",
        "name": "Csillaghegy H",
        "lat": "47.586110",
        "lon": "19.045371",
        "parent": "CS009392"
    },
    {
        "id": "F00480",
        "name": "Csillaghegy",
        "lat": "47.585948",
        "lon": "19.044932",
        "parent": "CSF00481"
    },
    {
        "id": "F00481",
        "name": "Csillaghegy",
        "lat": "47.586272",
        "lon": "19.045078",
        "parent": "CSF00481"
    },
    {
        "id": "F00482",
        "name": "Szent István utca",
        "lat": "47.590814",
        "lon": "19.049851",
        "parent": ""
    },
    {
        "id": "F00483",
        "name": "Aquincum",
        "lat": "47.567968",
        "lon": "19.048641",
        "parent": "CSF00483"
    },
    {
        "id": "F00484",
        "name": "Aquincum",
        "lat": "47.566541",
        "lon": "19.048814",
        "parent": "CSF00483"
    },
    {
        "id": "F00485",
        "name": "Római tér",
        "lat": "47.569821",
        "lon": "19.048481",
        "parent": ""
    },
    {
        "id": "F00486",
        "name": "Monostori út",
        "lat": "47.573140",
        "lon": "19.050621",
        "parent": ""
    },
    {
        "id": "F00487",
        "name": "Rómaifürdő",
        "lat": "47.576225",
        "lon": "19.048721",
        "parent": "CSF00487"
    },
    {
        "id": "F00488",
        "name": "Rómaifürdő",
        "lat": "47.575145",
        "lon": "19.048415",
        "parent": "CSF00487"
    },
    {
        "id": "F00489",
        "name": "Rómaifürdő H",
        "lat": "47.575622",
        "lon": "19.049013",
        "parent": ""
    },
    {
        "id": "F00490",
        "name": "Czetz János köz",
        "lat": "47.578653",
        "lon": "19.050502",
        "parent": "CSF00492"
    },
    {
        "id": "F00491",
        "name": "Czetz János köz",
        "lat": "47.578761",
        "lon": "19.050156",
        "parent": "CSF00492"
    },
    {
        "id": "F00492",
        "name": "Czetz János köz",
        "lat": "47.578998",
        "lon": "19.048961",
        "parent": "CSF00492"
    },
    {
        "id": "F00493",
        "name": "Attila utca",
        "lat": "47.579328",
        "lon": "19.052762",
        "parent": "CSF00494"
    },
    {
        "id": "F00494",
        "name": "Attila utca",
        "lat": "47.579697",
        "lon": "19.052895",
        "parent": "CSF00494"
    },
    {
        "id": "F00495",
        "name": "Huba utca",
        "lat": "47.581342",
        "lon": "19.054477",
        "parent": "CSF00496"
    },
    {
        "id": "F00496",
        "name": "Huba utca",
        "lat": "47.581657",
        "lon": "19.054543",
        "parent": "CSF00496"
    },
    {
        "id": "F00497",
        "name": "Hunyadi utca",
        "lat": "47.584949",
        "lon": "19.056099",
        "parent": "CSF00497"
    },
    {
        "id": "F00498",
        "name": "Hunyadi utca",
        "lat": "47.584805",
        "lon": "19.055900",
        "parent": "CSF00497"
    },
    {
        "id": "F00499",
        "name": "Pók utca",
        "lat": "47.565278",
        "lon": "19.057970",
        "parent": ""
    },
    {
        "id": "F00500",
        "name": "Dósa utca",
        "lat": "47.575820",
        "lon": "19.056616",
        "parent": "CSF00500"
    },
    {
        "id": "F00501",
        "name": "Dósa utca",
        "lat": "47.575640",
        "lon": "19.057666",
        "parent": "CSF00500"
    },
    {
        "id": "F00502",
        "name": "Kadosa utca",
        "lat": "47.571260",
        "lon": "19.054130",
        "parent": ""
    },
    {
        "id": "F00504",
        "name": "Sujtás utca",
        "lat": "47.563461",
        "lon": "19.050927",
        "parent": ""
    },
    {
        "id": "F00505",
        "name": "Záhony utca",
        "lat": "47.561375",
        "lon": "19.048229",
        "parent": "CSF00506"
    },
    {
        "id": "F00506",
        "name": "Záhony utca",
        "lat": "47.562238",
        "lon": "19.048136",
        "parent": "CSF00506"
    },
    {
        "id": "F00507",
        "name": "Záhony utca",
        "lat": "47.560997",
        "lon": "19.047139",
        "parent": "CSF00506"
    },
    {
        "id": "F00508",
        "name": "Kaszásdűlő H",
        "lat": "47.557129",
        "lon": "19.046116",
        "parent": "CSF00508"
    },
    {
        "id": "F00509",
        "name": "Kaszásdűlő H",
        "lat": "47.556598",
        "lon": "19.045585",
        "parent": "CSF00508"
    },
    {
        "id": "F00510",
        "name": "Kaszásdűlő",
        "lat": "47.556508",
        "lon": "19.045133",
        "parent": "CSF00511"
    },
    {
        "id": "F00511",
        "name": "Kaszásdűlő",
        "lat": "47.557039",
        "lon": "19.045372",
        "parent": "CSF00511"
    },
    {
        "id": "F00512",
        "name": "Kaszásdűlő utca",
        "lat": "47.557642",
        "lon": "19.041678",
        "parent": "CSF00513"
    },
    {
        "id": "F00513",
        "name": "Kaszásdűlő utca",
        "lat": "47.558289",
        "lon": "19.042063",
        "parent": "CSF00513"
    },
    {
        "id": "F00514",
        "name": "Dinamó utca",
        "lat": "47.564009",
        "lon": "19.036309",
        "parent": ""
    },
    {
        "id": "F00515",
        "name": "Kunigunda útja",
        "lat": "47.560105",
        "lon": "19.033545",
        "parent": "CSF00516"
    },
    {
        "id": "F00516",
        "name": "Kunigunda útja",
        "lat": "47.560357",
        "lon": "19.034994",
        "parent": "CSF00516"
    },
    {
        "id": "F00517",
        "name": "Kunigunda útja",
        "lat": "47.559962",
        "lon": "19.035539",
        "parent": "CSF00516"
    },
    {
        "id": "F00518",
        "name": "Orbán Balázs út",
        "lat": "47.555850",
        "lon": "19.026850",
        "parent": "CSF00519"
    },
    {
        "id": "F00519",
        "name": "Orbán Balázs út",
        "lat": "47.556425",
        "lon": "19.026385",
        "parent": "CSF00519"
    },
    {
        "id": "F00520",
        "name": "Bojtár utca (Bécsi út)",
        "lat": "47.560122",
        "lon": "19.024642",
        "parent": "CSF00520"
    },
    {
        "id": "F00521",
        "name": "Bojtár utca",
        "lat": "47.559829",
        "lon": "19.024539",
        "parent": "CSF00520"
    },
    {
        "id": "F00522",
        "name": "Óbudai temető",
        "lat": "47.566004",
        "lon": "19.022035",
        "parent": "CSF00522"
    },
    {
        "id": "F00523",
        "name": "Óbudai temető",
        "lat": "47.565923",
        "lon": "19.023258",
        "parent": "CSF00522"
    },
    {
        "id": "F00524",
        "name": "Óbudai temető",
        "lat": "47.565770",
        "lon": "19.022846",
        "parent": "CSF00522"
    },
    {
        "id": "F00530",
        "name": "Ürömhegyi út",
        "lat": "47.577568",
        "lon": "19.010637",
        "parent": "CSF00531"
    },
    {
        "id": "F00531",
        "name": "Ürömhegyi út",
        "lat": "47.577738",
        "lon": "19.010013",
        "parent": "CSF00531"
    },
    {
        "id": "F00532",
        "name": "Üröm vasúti megállóhely",
        "lat": "47.581522",
        "lon": "19.002246",
        "parent": "CSF00533"
    },
    {
        "id": "F00533",
        "name": "Üröm vasúti megállóhely",
        "lat": "47.581684",
        "lon": "19.001794",
        "parent": "CSF00533"
    },
    {
        "id": "F00534",
        "name": "Királyhelmec utca",
        "lat": "47.553016",
        "lon": "19.022440",
        "parent": "CSF00536"
    },
    {
        "id": "F00535",
        "name": "Farkastorki út",
        "lat": "47.553969",
        "lon": "19.020978",
        "parent": ""
    },
    {
        "id": "F00536",
        "name": "Királyhelmec utca",
        "lat": "47.553510",
        "lon": "19.021868",
        "parent": "CSF00536"
    },
    {
        "id": "F00537",
        "name": "Judit utca",
        "lat": "47.556280",
        "lon": "19.018067",
        "parent": "CSF00537"
    },
    {
        "id": "F00538",
        "name": "Judit utca",
        "lat": "47.556082",
        "lon": "19.018173",
        "parent": "CSF00537"
    },
    {
        "id": "F00539",
        "name": "Laborc utca",
        "lat": "47.557853",
        "lon": "19.015475",
        "parent": "CSF00539"
    },
    {
        "id": "F00540",
        "name": "Laborc utca",
        "lat": "47.557745",
        "lon": "19.015462",
        "parent": "CSF00539"
    },
    {
        "id": "F00541",
        "name": "Jablonka út 53.",
        "lat": "47.558914",
        "lon": "19.013322",
        "parent": "CSF00542"
    },
    {
        "id": "F00542",
        "name": "Jablonka út 58.",
        "lat": "47.559147",
        "lon": "19.012723",
        "parent": "CSF00542"
    },
    {
        "id": "F00543",
        "name": "Jablonka út 73.",
        "lat": "47.560613",
        "lon": "19.010929",
        "parent": "CSF00543"
    },
    {
        "id": "F00544",
        "name": "Jablonka út 74.",
        "lat": "47.560487",
        "lon": "19.010902",
        "parent": "CSF00543"
    },
    {
        "id": "F00545",
        "name": "Jablonka út",
        "lat": "47.562231",
        "lon": "19.008110",
        "parent": ""
    },
    {
        "id": "F00546",
        "name": "Erdőalja út",
        "lat": "47.559451",
        "lon": "19.006597",
        "parent": ""
    },
    {
        "id": "F00547",
        "name": "Áldomás utca",
        "lat": "47.562120",
        "lon": "19.035658",
        "parent": "CSF00547"
    },
    {
        "id": "F00548",
        "name": "Áldomás utca",
        "lat": "47.562066",
        "lon": "19.035512",
        "parent": "CSF00547"
    },
    {
        "id": "F00549",
        "name": "Kubik utca",
        "lat": "47.562595",
        "lon": "19.023565",
        "parent": "CSF00549"
    },
    {
        "id": "F00550",
        "name": "Kubik utca",
        "lat": "47.561381",
        "lon": "19.023964",
        "parent": "CSF00549"
    },
    {
        "id": "F00551",
        "name": "Hedvig utca",
        "lat": "47.556084",
        "lon": "19.011267",
        "parent": "CSF00552"
    },
    {
        "id": "F00552",
        "name": "Hedvig utca",
        "lat": "47.556093",
        "lon": "19.011108",
        "parent": "CSF00552"
    },
    {
        "id": "F00553",
        "name": "Erdőalja út 43.",
        "lat": "47.553513",
        "lon": "19.014006",
        "parent": ""
    },
    {
        "id": "F00554",
        "name": "Viharhegyi út",
        "lat": "47.552654",
        "lon": "19.014442",
        "parent": "CSF00555"
    },
    {
        "id": "F00555",
        "name": "Viharhegyi út",
        "lat": "47.553113",
        "lon": "19.014349",
        "parent": "CSF00555"
    },
    {
        "id": "F00556",
        "name": "Körtvélyes köz",
        "lat": "47.553338",
        "lon": "19.017351",
        "parent": "CSF00556"
    },
    {
        "id": "F00557",
        "name": "Körtvélyes utca",
        "lat": "47.553217",
        "lon": "19.017367",
        "parent": "CSF00556"
    },
    {
        "id": "F00558",
        "name": "Óbudai temető",
        "lat": "47.564466",
        "lon": "19.022581",
        "parent": "CSF00522"
    },
    {
        "id": "F00559",
        "name": "Iskola",
        "lat": "47.550401",
        "lon": "19.016067",
        "parent": "CSF00559"
    },
    {
        "id": "F00560",
        "name": "Iskola",
        "lat": "47.550168",
        "lon": "19.016306",
        "parent": "CSF00559"
    },
    {
        "id": "F00561",
        "name": "Királylaki út",
        "lat": "47.549056",
        "lon": "19.014843",
        "parent": "CSF00561"
    },
    {
        "id": "F00562",
        "name": "Királylaki út",
        "lat": "47.548813",
        "lon": "19.015122",
        "parent": "CSF00561"
    },
    {
        "id": "F00563",
        "name": "Máramaros út",
        "lat": "47.546619",
        "lon": "19.017129",
        "parent": ""
    },
    {
        "id": "F00564",
        "name": "Táborhegyi út",
        "lat": "47.550156",
        "lon": "19.025896",
        "parent": "CSF00564"
    },
    {
        "id": "F00565",
        "name": "Táborhegyi út",
        "lat": "47.549661",
        "lon": "19.026454",
        "parent": "CSF00564"
    },
    {
        "id": "F00566",
        "name": "Bécsi út \/ Vörösvári út",
        "lat": "47.548681",
        "lon": "19.027796",
        "parent": "CSF00571"
    },
    {
        "id": "F00567",
        "name": "Bécsi út \/ Vörösvári út",
        "lat": "47.547902",
        "lon": "19.029636",
        "parent": "CSF00571"
    },
    {
        "id": "F00568",
        "name": "Bécsi út \/ Vörösvári út",
        "lat": "47.548475",
        "lon": "19.029018",
        "parent": "CSF00571"
    },
    {
        "id": "F00569",
        "name": "Bécsi út \/ Vörösvári út",
        "lat": "47.548766",
        "lon": "19.029370",
        "parent": "CSF00571"
    },
    {
        "id": "F00570",
        "name": "Bécsi út \/ Vörösvári út",
        "lat": "47.548421",
        "lon": "19.029603",
        "parent": "CSF00571"
    },
    {
        "id": "F00571",
        "name": "Bécsi út (Vörösvári út)",
        "lat": "47.550319",
        "lon": "19.028686",
        "parent": "CSF00571"
    },
    {
        "id": "F00573",
        "name": "Óbuda, Bogdáni út",
        "lat": "47.550725",
        "lon": "19.041825",
        "parent": "CS003118"
    },
    {
        "id": "F00574",
        "name": "Óbuda, Bogdáni út",
        "lat": "47.550539",
        "lon": "19.042058",
        "parent": "CS003118"
    },
    {
        "id": "F00575",
        "name": "Óbuda, Bogdáni út",
        "lat": "47.550212",
        "lon": "19.041985",
        "parent": "CS003118"
    },
    {
        "id": "F00576",
        "name": "Bogdáni út",
        "lat": "47.550212",
        "lon": "19.043938",
        "parent": "CS003118"
    },
    {
        "id": "F00577",
        "name": "Bogdáni út",
        "lat": "47.548434",
        "lon": "19.043134",
        "parent": ""
    },
    {
        "id": "F00578",
        "name": "Filatorigát",
        "lat": "47.551858",
        "lon": "19.046356",
        "parent": "CSF00579"
    },
    {
        "id": "F00579",
        "name": "Filatorigát",
        "lat": "47.551948",
        "lon": "19.046130",
        "parent": "CSF00579"
    },
    {
        "id": "F00580",
        "name": "Raktár utca",
        "lat": "47.545328",
        "lon": "19.042809",
        "parent": "CSF00580"
    },
    {
        "id": "F00581",
        "name": "Raktár utca",
        "lat": "47.544986",
        "lon": "19.042729",
        "parent": "CSF00580"
    },
    {
        "id": "F00582",
        "name": "Raktár utca",
        "lat": "47.545085",
        "lon": "19.042331",
        "parent": "CSF00580"
    },
    {
        "id": "F00583",
        "name": "Raktár utca",
        "lat": "47.544647",
        "lon": "19.042231",
        "parent": "CSF00580"
    },
    {
        "id": "F00584",
        "name": "Óbudai rendelőintézet",
        "lat": "47.546721",
        "lon": "19.032633",
        "parent": "CSF00584"
    },
    {
        "id": "F00585",
        "name": "Óbudai rendelőintézet",
        "lat": "47.545493",
        "lon": "19.033634",
        "parent": "CSF00584"
    },
    {
        "id": "F00586",
        "name": "Óbudai rendelőintézet",
        "lat": "47.545957",
        "lon": "19.033456",
        "parent": "CSF00584"
    },
    {
        "id": "F00587",
        "name": "Óbudai rendelőintézet",
        "lat": "47.544878",
        "lon": "19.034772",
        "parent": "CSF00584"
    },
    {
        "id": "F00588",
        "name": "Vihar utca",
        "lat": "47.543987",
        "lon": "19.036393",
        "parent": ""
    },
    {
        "id": "F00589",
        "name": "Szőlő utca",
        "lat": "47.543529",
        "lon": "19.036473",
        "parent": ""
    },
    {
        "id": "F00590",
        "name": "Váradi utca",
        "lat": "47.543549",
        "lon": "19.029943",
        "parent": "CSF00591"
    },
    {
        "id": "F00591",
        "name": "Váradi utca",
        "lat": "47.543846",
        "lon": "19.029943",
        "parent": "CSF00591"
    },
    {
        "id": "F00592",
        "name": "Váradi utca",
        "lat": "47.543510",
        "lon": "19.031491",
        "parent": "CSF00591"
    },
    {
        "id": "F00594",
        "name": "Szent Margit Kórház",
        "lat": "47.540641",
        "lon": "19.030881",
        "parent": "CSF00594"
    },
    {
        "id": "F00595",
        "name": "Szent Margit Kórház",
        "lat": "47.540308",
        "lon": "19.030961",
        "parent": "CSF00594"
    },
    {
        "id": "F00596",
        "name": "Szent Margit Kórház",
        "lat": "47.539939",
        "lon": "19.031320",
        "parent": "CSF00594"
    },
    {
        "id": "F00597",
        "name": "Szent Margit Kórház",
        "lat": "47.540457",
        "lon": "19.030724",
        "parent": "CSF00594"
    },
    {
        "id": "F00598",
        "name": "Katinyi mártírok parkja",
        "lat": "47.532636",
        "lon": "19.036488",
        "parent": "CSF00598"
    },
    {
        "id": "F00599",
        "name": "Katinyi mártírok parkja",
        "lat": "47.532339",
        "lon": "19.036754",
        "parent": "CSF00598"
    },
    {
        "id": "F00600",
        "name": "Katinyi mártírok parkja",
        "lat": "47.532525",
        "lon": "19.036716",
        "parent": "CSF00598"
    },
    {
        "id": "F00601",
        "name": "Katinyi mártírok parkja",
        "lat": "47.532399",
        "lon": "19.036450",
        "parent": "CSF00598"
    },
    {
        "id": "F00602",
        "name": "Galagonya utca",
        "lat": "47.530106",
        "lon": "19.039346",
        "parent": ""
    },
    {
        "id": "F00603",
        "name": "Nagyszombat utca",
        "lat": "47.531863",
        "lon": "19.040021",
        "parent": ""
    },
    {
        "id": "F00604",
        "name": "Tímár utca",
        "lat": "47.535173",
        "lon": "19.039901",
        "parent": "CSF00604"
    },
    {
        "id": "F00605",
        "name": "Tímár utca",
        "lat": "47.534339",
        "lon": "19.039748",
        "parent": "CSF00604"
    },
    {
        "id": "F00606",
        "name": "Kiscelli utca",
        "lat": "47.538753",
        "lon": "19.040459",
        "parent": "CSF00607"
    },
    {
        "id": "F00607",
        "name": "Kiscelli utca",
        "lat": "47.539260",
        "lon": "19.040425",
        "parent": "CSF00607"
    },
    {
        "id": "F00608",
        "name": "Remetehegyi út",
        "lat": "47.535342",
        "lon": "19.027243",
        "parent": ""
    },
    {
        "id": "F00609",
        "name": "Mikoviny utca",
        "lat": "47.532140",
        "lon": "19.029051",
        "parent": ""
    },
    {
        "id": "F00610",
        "name": "Kőzet utca",
        "lat": "47.532878",
        "lon": "19.028453",
        "parent": ""
    },
    {
        "id": "F00611",
        "name": "Flórián tér",
        "lat": "47.542989",
        "lon": "19.042251",
        "parent": "CSF00611"
    },
    {
        "id": "F00612",
        "name": "Flórián tér",
        "lat": "47.542003",
        "lon": "19.041222",
        "parent": "CSF00611"
    },
    {
        "id": "F00613",
        "name": "Flórián tér",
        "lat": "47.541676",
        "lon": "19.040073",
        "parent": "CSF00611"
    },
    {
        "id": "F00614",
        "name": "Flórián tér",
        "lat": "47.541517",
        "lon": "19.039960",
        "parent": "CSF00611"
    },
    {
        "id": "F00615",
        "name": "Flórián tér",
        "lat": "47.541109",
        "lon": "19.040538",
        "parent": "CSF00611"
    },
    {
        "id": "F00616",
        "name": "Flórián tér",
        "lat": "47.541739",
        "lon": "19.039183",
        "parent": "CSF00611"
    },
    {
        "id": "F00617",
        "name": "ATI",
        "lat": "47.570446",
        "lon": "19.018391",
        "parent": "CSF00617"
    },
    {
        "id": "F00618",
        "name": "ATI",
        "lat": "47.569628",
        "lon": "19.018923",
        "parent": "CSF00617"
    },
    {
        "id": "F00619",
        "name": "Szentlélek tér H",
        "lat": "47.539904",
        "lon": "19.045878",
        "parent": "CSF00621"
    },
    {
        "id": "F00620",
        "name": "Szentlélek tér H",
        "lat": "47.539787",
        "lon": "19.046303",
        "parent": "CSF00621"
    },
    {
        "id": "F00621",
        "name": "Szentlélek tér H",
        "lat": "47.540210",
        "lon": "19.045904",
        "parent": "CSF00621"
    },
    {
        "id": "F00622",
        "name": "Szentlélek tér H",
        "lat": "47.540165",
        "lon": "19.046263",
        "parent": "CSF00621"
    },
    {
        "id": "F00623",
        "name": "Szentlélek tér H",
        "lat": "47.540120",
        "lon": "19.046502",
        "parent": "CSF00621"
    },
    {
        "id": "F00624",
        "name": "Szentlélek tér",
        "lat": "47.539541",
        "lon": "19.047207",
        "parent": "CSF00625"
    },
    {
        "id": "F00625",
        "name": "Szentlélek tér",
        "lat": "47.539730",
        "lon": "19.047114",
        "parent": "CSF00625"
    },
    {
        "id": "F00626",
        "name": "Szentlélek tér H",
        "lat": "47.539593",
        "lon": "19.045207",
        "parent": "CSF00621"
    },
    {
        "id": "F00627",
        "name": "Szentlélek tér H",
        "lat": "47.539715",
        "lon": "19.045758",
        "parent": "CSF00621"
    },
    {
        "id": "F00628",
        "name": "Szentlélek tér H",
        "lat": "47.539239",
        "lon": "19.045692",
        "parent": "CSF00621"
    },
    {
        "id": "F00629",
        "name": "Szentlélek tér H",
        "lat": "47.539377",
        "lon": "19.045937",
        "parent": "CSF00621"
    },
    {
        "id": "F00630",
        "name": "Bóbita utca",
        "lat": "47.572856",
        "lon": "19.016290",
        "parent": "CSF00630"
    },
    {
        "id": "F00631",
        "name": "Bóbita utca",
        "lat": "47.571957",
        "lon": "19.016968",
        "parent": "CSF00630"
    },
    {
        "id": "F00632",
        "name": "Tímár utca",
        "lat": "47.534328",
        "lon": "19.045068",
        "parent": "CSF00632"
    },
    {
        "id": "F00633",
        "name": "Tímár utca",
        "lat": "47.533599",
        "lon": "19.044218",
        "parent": "CSF00632"
    },
    {
        "id": "F00634",
        "name": "Szélvész utca",
        "lat": "47.531391",
        "lon": "19.020769",
        "parent": "CSF00635"
    },
    {
        "id": "F00635",
        "name": "Szélvész utca",
        "lat": "47.531401",
        "lon": "19.020379",
        "parent": "CSF00635"
    },
    {
        "id": "F00636",
        "name": "Madzsar József utca \/ Hadrianus utca",
        "lat": "47.603073",
        "lon": "19.059334",
        "parent": "CSF00637"
    },
    {
        "id": "F00637",
        "name": "Madzsar József utca \/ Hadrianus utca",
        "lat": "47.604044",
        "lon": "19.060052",
        "parent": "CSF00637"
    },
    {
        "id": "F00638",
        "name": "Hadrianus utca",
        "lat": "47.604062",
        "lon": "19.063324",
        "parent": "CSF00638"
    },
    {
        "id": "F00639",
        "name": "Hadrianus utca",
        "lat": "47.603928",
        "lon": "19.062990",
        "parent": "CSF00638"
    },
    {
        "id": "F00641",
        "name": "Békásmegyer, Újmegyeri tér",
        "lat": "47.603082",
        "lon": "19.066341",
        "parent": "CSF00641"
    },
    {
        "id": "F00642",
        "name": "Békásmegyer, Újmegyeri tér",
        "lat": "47.602606",
        "lon": "19.065956",
        "parent": "CSF00641"
    },
    {
        "id": "F00644",
        "name": "Békásmegyer, Újmegyeri tér",
        "lat": "47.602767",
        "lon": "19.066315",
        "parent": "CSF00641"
    },
    {
        "id": "F00645",
        "name": "Bálint György utca",
        "lat": "47.599277",
        "lon": "19.064971",
        "parent": "CSF00646"
    },
    {
        "id": "F00646",
        "name": "Bálint György utca",
        "lat": "47.600042",
        "lon": "19.065144",
        "parent": "CSF00646"
    },
    {
        "id": "F00649",
        "name": "Hatvany Lajos utca \/ Juhász Gyula utca",
        "lat": "47.597174",
        "lon": "19.063294",
        "parent": "CSF00649"
    },
    {
        "id": "F00650",
        "name": "Hatvany Lajos utca \/ Juhász Gyula utca",
        "lat": "47.596857",
        "lon": "19.062550",
        "parent": "CSF00649"
    },
    {
        "id": "F00653",
        "name": "Boglár utca",
        "lat": "47.594879",
        "lon": "19.060568",
        "parent": "CSF00653"
    },
    {
        "id": "F00654",
        "name": "Pünkösdfürdő",
        "lat": "47.594473",
        "lon": "19.065847",
        "parent": "CSF00654"
    },
    {
        "id": "F00655",
        "name": "Pünkösdfürdő",
        "lat": "47.594347",
        "lon": "19.066352",
        "parent": "CSF00654"
    },
    {
        "id": "F00656",
        "name": "Sinkovits Imre utca",
        "lat": "47.589526",
        "lon": "19.065593",
        "parent": "CSF00657"
    },
    {
        "id": "F00657",
        "name": "Sinkovits Imre utca",
        "lat": "47.590057",
        "lon": "19.065527",
        "parent": "CSF00657"
    },
    {
        "id": "F00658",
        "name": "Mátyás király út",
        "lat": "47.584822",
        "lon": "19.065046",
        "parent": "CSF00659"
    },
    {
        "id": "F00659",
        "name": "Mátyás király út",
        "lat": "47.585110",
        "lon": "19.064927",
        "parent": "CSF00659"
    },
    {
        "id": "F00660",
        "name": "Szent János utca",
        "lat": "47.579884",
        "lon": "19.064141",
        "parent": "CSF00660"
    },
    {
        "id": "F00661",
        "name": "Szent János utca",
        "lat": "47.578922",
        "lon": "19.063742",
        "parent": "CSF00660"
    },
    {
        "id": "F00662",
        "name": "Nimród utca",
        "lat": "47.575657",
        "lon": "19.062784",
        "parent": "CSF00662"
    },
    {
        "id": "F00663",
        "name": "Nimród utca",
        "lat": "47.575585",
        "lon": "19.062903",
        "parent": "CSF00662"
    },
    {
        "id": "F00664",
        "name": "Nánási út",
        "lat": "47.570279",
        "lon": "19.061613",
        "parent": ""
    },
    {
        "id": "F00665",
        "name": "Silvanus sétány",
        "lat": "47.567193",
        "lon": "19.061506",
        "parent": ""
    },
    {
        "id": "F00666",
        "name": "Aquincum H",
        "lat": "47.567347",
        "lon": "19.049359",
        "parent": "CSF00667"
    },
    {
        "id": "F00667",
        "name": "Aquincum H",
        "lat": "47.567594",
        "lon": "19.048828",
        "parent": "CSF00667"
    },
    {
        "id": "F00668",
        "name": "Aquincum H",
        "lat": "47.566439",
        "lon": "19.049771",
        "parent": "CSF00667"
    },
    {
        "id": "F00669",
        "name": "Laborc utca",
        "lat": "47.552288",
        "lon": "19.027861",
        "parent": ""
    },
    {
        "id": "F00670",
        "name": "Csillaghegyi út \/ Bojtár utca",
        "lat": "47.560510",
        "lon": "19.031127",
        "parent": "CSF00671"
    },
    {
        "id": "F00671",
        "name": "Csillaghegyi út \/ Bojtár utca",
        "lat": "47.560950",
        "lon": "19.029878",
        "parent": "CSF00671"
    },
    {
        "id": "F00672",
        "name": "Zúzmara utca",
        "lat": "47.552215",
        "lon": "19.023782",
        "parent": "CSF00672"
    },
    {
        "id": "F00673",
        "name": "Zúzmara utca",
        "lat": "47.551793",
        "lon": "19.024022",
        "parent": "CSF00672"
    },
    {
        "id": "F00674",
        "name": "Verhovina utca",
        "lat": "47.554535",
        "lon": "19.020420",
        "parent": ""
    },
    {
        "id": "F00676",
        "name": "Szamos utca",
        "lat": "47.582924",
        "lon": "19.064820",
        "parent": "CSF00676"
    },
    {
        "id": "F00677",
        "name": "Szamos utca",
        "lat": "47.582061",
        "lon": "19.064540",
        "parent": "CSF00676"
    },
    {
        "id": "F00678",
        "name": "Óbudai autóbuszgarázs",
        "lat": "47.568014",
        "lon": "19.026276",
        "parent": "CS008360"
    },
    {
        "id": "F00679",
        "name": "Óbudai autóbuszgarázs",
        "lat": "47.568014",
        "lon": "19.026023",
        "parent": "CS008360"
    },
    {
        "id": "F00680",
        "name": "Bécsi út \/ Vörösvári út",
        "lat": "47.550094",
        "lon": "19.028805",
        "parent": "CSF00571"
    },
    {
        "id": "F00681",
        "name": "Kisbojtár utca",
        "lat": "47.559888",
        "lon": "19.026769",
        "parent": "CSF00520"
    },
    {
        "id": "F00682",
        "name": "Bercsényi utca",
        "lat": "47.585543",
        "lon": "19.051486",
        "parent": "CSF00682"
    },
    {
        "id": "F00683",
        "name": "Bercsényi utca",
        "lat": "47.585399",
        "lon": "19.051925",
        "parent": "CSF00682"
    },
    {
        "id": "F00684",
        "name": "Selmeci utca",
        "lat": "47.535829",
        "lon": "19.033632",
        "parent": "CSF00686"
    },
    {
        "id": "F00685",
        "name": "Selmeci utca",
        "lat": "47.536027",
        "lon": "19.033406",
        "parent": "CSF00686"
    },
    {
        "id": "F00686",
        "name": "Selmeci utca",
        "lat": "47.536311",
        "lon": "19.033395",
        "parent": "CSF00686"
    },
    {
        "id": "F00687",
        "name": "Selmeci utca",
        "lat": "47.535505",
        "lon": "19.033659",
        "parent": "CSF00686"
    },
    {
        "id": "F00688",
        "name": "Kolostor út",
        "lat": "47.533228",
        "lon": "19.025770",
        "parent": ""
    },
    {
        "id": "F00690",
        "name": "Magnólia utca",
        "lat": "47.564746",
        "lon": "19.030740",
        "parent": ""
    },
    {
        "id": "F00691",
        "name": "Madridi utca",
        "lat": "47.546519",
        "lon": "19.097433",
        "parent": "CSF00692"
    },
    {
        "id": "F00692",
        "name": "Madridi utca",
        "lat": "47.546636",
        "lon": "19.097633",
        "parent": "CSF00692"
    },
    {
        "id": "F00693",
        "name": "Angyalföld kocsiszín (Madridi utca)",
        "lat": "47.551158",
        "lon": "19.091727",
        "parent": "CSF00693"
    },
    {
        "id": "F00697",
        "name": "Fóti út",
        "lat": "47.582435",
        "lon": "19.081610",
        "parent": "CSF00698"
    },
    {
        "id": "F00698",
        "name": "Fóti út",
        "lat": "47.583613",
        "lon": "19.081930",
        "parent": "CSF00698"
    },
    {
        "id": "F00699",
        "name": "Újpest, Fóti út",
        "lat": "47.582654",
        "lon": "19.082339",
        "parent": "CSF00698"
    },
    {
        "id": "F00700",
        "name": "Tímár utca",
        "lat": "47.572325",
        "lon": "19.080806",
        "parent": "CSF00701"
    },
    {
        "id": "F00701",
        "name": "Tímár utca",
        "lat": "47.572379",
        "lon": "19.080952",
        "parent": "CSF00701"
    },
    {
        "id": "F00702",
        "name": "Zsilip utca",
        "lat": "47.567927",
        "lon": "19.080019",
        "parent": "CSF00703"
    },
    {
        "id": "F00703",
        "name": "Zsilip utca",
        "lat": "47.568812",
        "lon": "19.080470",
        "parent": "CSF00703"
    },
    {
        "id": "F00704",
        "name": "Károlyi István utca",
        "lat": "47.565589",
        "lon": "19.079234",
        "parent": "CSF00704"
    },
    {
        "id": "F00705",
        "name": "Károlyi István utca",
        "lat": "47.564953",
        "lon": "19.079213",
        "parent": "CSF00704"
    },
    {
        "id": "F00706",
        "name": "Újpest, Árpád út hajóállomás",
        "lat": "47.562108",
        "lon": "19.078448",
        "parent": "CS044557"
    },
    {
        "id": "F00707",
        "name": "Megyer, Julianus barát utca",
        "lat": "47.584925",
        "lon": "19.086158",
        "parent": ""
    },
    {
        "id": "F00708",
        "name": "Gárdonyi Géza utca",
        "lat": "47.584240",
        "lon": "19.090438",
        "parent": ""
    },
    {
        "id": "F00709",
        "name": "Megyeri temető",
        "lat": "47.582531",
        "lon": "19.090796",
        "parent": "CSF00709"
    },
    {
        "id": "F00710",
        "name": "Megyeri temető",
        "lat": "47.581488",
        "lon": "19.089851",
        "parent": "CSF00709"
    },
    {
        "id": "F00711",
        "name": "Fiumei út",
        "lat": "47.582551",
        "lon": "19.085997",
        "parent": ""
    },
    {
        "id": "F00712",
        "name": "Megyeri út \/ Fóti út",
        "lat": "47.579636",
        "lon": "19.088653",
        "parent": "CSF00709"
    },
    {
        "id": "F00713",
        "name": "Megyeri út \/ Fóti út",
        "lat": "47.579420",
        "lon": "19.087510",
        "parent": "CSF00709"
    },
    {
        "id": "F00714",
        "name": "Megyeri út \/ Fóti út",
        "lat": "47.580346",
        "lon": "19.088667",
        "parent": "CSF00709"
    },
    {
        "id": "F00715",
        "name": "Megyeri út",
        "lat": "47.579680",
        "lon": "19.088999",
        "parent": "CSF00709"
    },
    {
        "id": "F00716",
        "name": "Megyer, Szondi utca",
        "lat": "47.585851",
        "lon": "19.094704",
        "parent": "CSF00718"
    },
    {
        "id": "F00717",
        "name": "Megyer, Szondi utca",
        "lat": "47.585660",
        "lon": "19.094149",
        "parent": "CSF00718"
    },
    {
        "id": "F00718",
        "name": "Megyer, Szondi utca",
        "lat": "47.586289",
        "lon": "19.095027",
        "parent": "CSF00718"
    },
    {
        "id": "F00720",
        "name": "Homoktövis utca",
        "lat": "47.593997",
        "lon": "19.113808",
        "parent": "CS009047"
    },
    {
        "id": "F00721",
        "name": "Megyeri út",
        "lat": "47.593908",
        "lon": "19.113702",
        "parent": ""
    },
    {
        "id": "F00722",
        "name": "Káposztásmegyer, Mogyoródi-patak",
        "lat": "47.598499",
        "lon": "19.121261",
        "parent": "CS009536"
    },
    {
        "id": "F00723",
        "name": "Káposztásmegyer, Megyeri út",
        "lat": "47.593184",
        "lon": "19.120070",
        "parent": "CSF00725"
    },
    {
        "id": "F00724",
        "name": "Megyeri út",
        "lat": "47.593175",
        "lon": "19.120230",
        "parent": "CSF00725"
    },
    {
        "id": "F00725",
        "name": "Káposztásmegyer, Megyeri út",
        "lat": "47.593454",
        "lon": "19.120523",
        "parent": "CSF00725"
    },
    {
        "id": "F00726",
        "name": "Szíjgyártó utca",
        "lat": "47.589230",
        "lon": "19.114919",
        "parent": "CSF00726"
    },
    {
        "id": "F00727",
        "name": "Szíjgyártó utca",
        "lat": "47.588852",
        "lon": "19.114108",
        "parent": "CSF00726"
    },
    {
        "id": "F00728",
        "name": "Homoktövis utca",
        "lat": "47.589417",
        "lon": "19.118310",
        "parent": "CSF00729"
    },
    {
        "id": "F00729",
        "name": "Homoktövis utca (Óvoda)",
        "lat": "47.590047",
        "lon": "19.117354",
        "parent": "CSF00729"
    },
    {
        "id": "F00730",
        "name": "Gimnázium",
        "lat": "47.582749",
        "lon": "19.106177",
        "parent": "CSF00730"
    },
    {
        "id": "F00731",
        "name": "Gimnázium",
        "lat": "47.582677",
        "lon": "19.105938",
        "parent": "CSF00730"
    },
    {
        "id": "F00732",
        "name": "Művelődési Központ",
        "lat": "47.579780",
        "lon": "19.109258",
        "parent": "CSF00732"
    },
    {
        "id": "F00733",
        "name": "Művelődési Központ",
        "lat": "47.579717",
        "lon": "19.109072",
        "parent": "CSF00732"
    },
    {
        "id": "F00734",
        "name": "Járműtelep utca",
        "lat": "47.582932",
        "lon": "19.116746",
        "parent": "CSF00734"
    },
    {
        "id": "F00735",
        "name": "Járműtelep utca",
        "lat": "47.582563",
        "lon": "19.116998",
        "parent": "CSF00734"
    },
    {
        "id": "F00736",
        "name": "Járműtelep utca",
        "lat": "47.582141",
        "lon": "19.116931",
        "parent": "CSF00734"
    },
    {
        "id": "F00737",
        "name": "Járműtelep utca",
        "lat": "47.581898",
        "lon": "19.116665",
        "parent": "CSF00734"
    },
    {
        "id": "F00738",
        "name": "Galopp utca",
        "lat": "47.580648",
        "lon": "19.116597",
        "parent": ""
    },
    {
        "id": "F00739",
        "name": "Hajló utca",
        "lat": "47.578779",
        "lon": "19.112367",
        "parent": "CSF00739"
    },
    {
        "id": "F00740",
        "name": "Hajló utca",
        "lat": "47.578644",
        "lon": "19.112633",
        "parent": "CSF00739"
    },
    {
        "id": "F00741",
        "name": "Óceán-árok utca",
        "lat": "47.577995",
        "lon": "19.115942",
        "parent": "CSF00745"
    },
    {
        "id": "F00742",
        "name": "Káposztásmegyer, Szilas-patak",
        "lat": "47.577699",
        "lon": "19.115144",
        "parent": "CSF00859"
    },
    {
        "id": "F00743",
        "name": "Óceán-árok utca",
        "lat": "47.578130",
        "lon": "19.116088",
        "parent": "CSF00745"
    },
    {
        "id": "F00744",
        "name": "Óceán-árok utca",
        "lat": "47.577716",
        "lon": "19.115915",
        "parent": "CSF00745"
    },
    {
        "id": "F00745",
        "name": "Óceán-árok utca",
        "lat": "47.578382",
        "lon": "19.115756",
        "parent": "CSF00745"
    },
    {
        "id": "F00746",
        "name": "Káposztásmegyer, Szilas-patak",
        "lat": "47.577348",
        "lon": "19.114452",
        "parent": "CSF00859"
    },
    {
        "id": "F00747",
        "name": "Ugró Gyula utca",
        "lat": "47.580363",
        "lon": "19.099139",
        "parent": ""
    },
    {
        "id": "F00748",
        "name": "Erdősor út",
        "lat": "47.577937",
        "lon": "19.106757",
        "parent": "CSF00748"
    },
    {
        "id": "F00749",
        "name": "Erdősor út",
        "lat": "47.577901",
        "lon": "19.106557",
        "parent": "CSF00748"
    },
    {
        "id": "F00750",
        "name": "Újpest, Erdősor út",
        "lat": "47.577842",
        "lon": "19.105730",
        "parent": "CSF00748"
    },
    {
        "id": "F00751",
        "name": "Iglói utca",
        "lat": "47.573648",
        "lon": "19.103004",
        "parent": "CSF00751"
    },
    {
        "id": "F00752",
        "name": "Vadgesztenye utca",
        "lat": "47.575378",
        "lon": "19.104398",
        "parent": ""
    },
    {
        "id": "F00753",
        "name": "Fóti út",
        "lat": "47.577840",
        "lon": "19.093498",
        "parent": "CSF00753"
    },
    {
        "id": "F00754",
        "name": "Baross utca \/ Fóti út",
        "lat": "47.577637",
        "lon": "19.092799",
        "parent": "CSF00753"
    },
    {
        "id": "F00755",
        "name": "Baross utca \/ Fóti út",
        "lat": "47.577044",
        "lon": "19.092812",
        "parent": "CSF00753"
    },
    {
        "id": "F00756",
        "name": "Baross utca",
        "lat": "47.577268",
        "lon": "19.093796",
        "parent": "CSF00753"
    },
    {
        "id": "F00757",
        "name": "Bucka utca",
        "lat": "47.575036",
        "lon": "19.098380",
        "parent": ""
    },
    {
        "id": "F00758",
        "name": "Nádor utca",
        "lat": "47.575054",
        "lon": "19.098061",
        "parent": "CSF00758"
    },
    {
        "id": "F00759",
        "name": "Nádor utca",
        "lat": "47.574485",
        "lon": "19.098330",
        "parent": "CSF00758"
    },
    {
        "id": "F00760",
        "name": "Iglói utca",
        "lat": "47.572794",
        "lon": "19.103176",
        "parent": "CSF00751"
    },
    {
        "id": "F00761",
        "name": "Iglói utca",
        "lat": "47.573085",
        "lon": "19.103000",
        "parent": "CSF00751"
    },
    {
        "id": "F00762",
        "name": "Leiningen Károly utca",
        "lat": "47.573001",
        "lon": "19.102378",
        "parent": ""
    },
    {
        "id": "F00764",
        "name": "Szilágyi utca",
        "lat": "47.570445",
        "lon": "19.112566",
        "parent": "CS008289"
    },
    {
        "id": "F00767",
        "name": "Szusza Ferenc Stadion",
        "lat": "47.576030",
        "lon": "19.083852",
        "parent": "CSF00767"
    },
    {
        "id": "F00768",
        "name": "Irányi Dániel utca",
        "lat": "47.577055",
        "lon": "19.086658",
        "parent": ""
    },
    {
        "id": "F00769",
        "name": "Irányi Dániel utca \/ Baross utca",
        "lat": "47.575671",
        "lon": "19.091227",
        "parent": "CSF00753"
    },
    {
        "id": "F00770",
        "name": "Irányi Dániel utca \/ Baross utca",
        "lat": "47.574727",
        "lon": "19.090482",
        "parent": "CSF00753"
    },
    {
        "id": "F00771",
        "name": "Baross utca",
        "lat": "47.575003",
        "lon": "19.090431",
        "parent": "CSF00753"
    },
    {
        "id": "F00772",
        "name": "Vécsey Károly utca",
        "lat": "47.571975",
        "lon": "19.095847",
        "parent": "CS009557"
    },
    {
        "id": "F00773",
        "name": "Vécsey Károly utca",
        "lat": "47.569749",
        "lon": "19.099644",
        "parent": "CSF00774"
    },
    {
        "id": "F00774",
        "name": "Leiningen Károly utca",
        "lat": "47.570050",
        "lon": "19.099476",
        "parent": "CSF00774"
    },
    {
        "id": "F00775",
        "name": "Vécsey Károly utca",
        "lat": "47.569507",
        "lon": "19.099222",
        "parent": "CSF00774"
    },
    {
        "id": "F00776",
        "name": "Nádor utca",
        "lat": "47.569416",
        "lon": "19.093563",
        "parent": "CSF00778"
    },
    {
        "id": "F00777",
        "name": "Türr István utca \/ Nádor utca",
        "lat": "47.569461",
        "lon": "19.093018",
        "parent": "CSF00778"
    },
    {
        "id": "F00778",
        "name": "Türr István utca \/ Nádor utca",
        "lat": "47.569758",
        "lon": "19.092846",
        "parent": "CSF00778"
    },
    {
        "id": "F00779",
        "name": "Szent László tér",
        "lat": "47.567009",
        "lon": "19.097867",
        "parent": "CSF00780"
    },
    {
        "id": "F00780",
        "name": "Szent László tér",
        "lat": "47.567961",
        "lon": "19.097759",
        "parent": "CSF00780"
    },
    {
        "id": "F00781",
        "name": "Szent László tér",
        "lat": "47.567886",
        "lon": "19.096871",
        "parent": "CSF00780"
    },
    {
        "id": "F00782",
        "name": "Illek Vince utca",
        "lat": "47.565658",
        "lon": "19.088271",
        "parent": "CSF00783"
    },
    {
        "id": "F00783",
        "name": "Illek Vince utca",
        "lat": "47.565730",
        "lon": "19.088510",
        "parent": "CSF00783"
    },
    {
        "id": "F00784",
        "name": "Csokonai utca",
        "lat": "47.565032",
        "lon": "19.090527",
        "parent": "CSF00784"
    },
    {
        "id": "F00785",
        "name": "Csokonai utca",
        "lat": "47.564938",
        "lon": "19.090782",
        "parent": "CSF00784"
    },
    {
        "id": "F00786",
        "name": "Kiss Ernő utca",
        "lat": "47.564985",
        "lon": "19.094009",
        "parent": "CSF00786"
    },
    {
        "id": "F00787",
        "name": "Kiss Ernő utca",
        "lat": "47.564860",
        "lon": "19.092600",
        "parent": "CSF00786"
    },
    {
        "id": "F00788",
        "name": "Kiss Ernő utca",
        "lat": "47.564949",
        "lon": "19.094606",
        "parent": "CSF00786"
    },
    {
        "id": "F00789",
        "name": "Újpesti rendelőintézet",
        "lat": "47.565788",
        "lon": "19.099859",
        "parent": "CSF00789"
    },
    {
        "id": "F00790",
        "name": "Újpesti rendelőintézet",
        "lat": "47.565194",
        "lon": "19.100660",
        "parent": "CSF00789"
    },
    {
        "id": "F00791",
        "name": "Újpesti rendelőintézet",
        "lat": "47.565478",
        "lon": "19.100055",
        "parent": "CSF00789"
    },
    {
        "id": "F00792",
        "name": "Újpesti rendelőintézet",
        "lat": "47.565077",
        "lon": "19.099863",
        "parent": "CSF00789"
    },
    {
        "id": "F00793",
        "name": "Újpesti piac",
        "lat": "47.563077",
        "lon": "19.088375",
        "parent": "CSF00796"
    },
    {
        "id": "F00794",
        "name": "Templom utca",
        "lat": "47.563396",
        "lon": "19.087310",
        "parent": ""
    },
    {
        "id": "F00795",
        "name": "Szent István tér (Újpesti piac)",
        "lat": "47.562815",
        "lon": "19.090594",
        "parent": "CSF00796"
    },
    {
        "id": "F00796",
        "name": "Szent István tér (Újpesti piac)",
        "lat": "47.563175",
        "lon": "19.090767",
        "parent": "CSF00796"
    },
    {
        "id": "F00797",
        "name": "Újpest-Központ M",
        "lat": "47.560180",
        "lon": "19.089755",
        "parent": "CSF00910"
    },
    {
        "id": "F00798",
        "name": "Újpest-Központ M",
        "lat": "47.560684",
        "lon": "19.089795",
        "parent": "CSF00910"
    },
    {
        "id": "F00799",
        "name": "Újpest-Központ M",
        "lat": "47.560612",
        "lon": "19.088347",
        "parent": "CSF00910"
    },
    {
        "id": "F00800",
        "name": "Újpest-Központ M",
        "lat": "47.560233",
        "lon": "19.090924",
        "parent": "CSF00910"
    },
    {
        "id": "F00801",
        "name": "Újpest-Központ M",
        "lat": "47.560270",
        "lon": "19.090672",
        "parent": "CSF00910"
    },
    {
        "id": "F00802",
        "name": "Újpest-Központ M",
        "lat": "47.560315",
        "lon": "19.090326",
        "parent": "CSF00910"
    },
    {
        "id": "F00803",
        "name": "Újpest-Központ M",
        "lat": "47.560472",
        "lon": "19.090271",
        "parent": "CSF00910"
    },
    {
        "id": "F00804",
        "name": "Újpest-Központ M",
        "lat": "47.561052",
        "lon": "19.090207",
        "parent": "CSF00910"
    },
    {
        "id": "F00805",
        "name": "Újpest-Központ M",
        "lat": "47.560350",
        "lon": "19.090791",
        "parent": "CSF00910"
    },
    {
        "id": "F00806",
        "name": "Újpest-Központ M",
        "lat": "47.559919",
        "lon": "19.089396",
        "parent": "CSF00910"
    },
    {
        "id": "F00808",
        "name": "Árpád út",
        "lat": "47.561128",
        "lon": "19.079523",
        "parent": ""
    },
    {
        "id": "F00809",
        "name": "Újpest-Városkapu M",
        "lat": "47.560569",
        "lon": "19.083310",
        "parent": "CSF00810"
    },
    {
        "id": "F00810",
        "name": "Újpest-Városkapu M",
        "lat": "47.560695",
        "lon": "19.083005",
        "parent": "CSF00810"
    },
    {
        "id": "F00811",
        "name": "Újpest-Városkapu M (Temesvári utca)",
        "lat": "47.559670",
        "lon": "19.082379",
        "parent": "CSF00810"
    },
    {
        "id": "F00812",
        "name": "Csányi László utca",
        "lat": "47.558041",
        "lon": "19.085421",
        "parent": ""
    },
    {
        "id": "F00813",
        "name": "Aradi utca",
        "lat": "47.556539",
        "lon": "19.084371",
        "parent": ""
    },
    {
        "id": "F00814",
        "name": "Újpest-Központ M (Munkásotthon utca)",
        "lat": "47.559325",
        "lon": "19.089595",
        "parent": "CSF00910"
    },
    {
        "id": "F00815",
        "name": "Újpest-Központ M (Munkásotthon utca)",
        "lat": "47.559155",
        "lon": "19.089143",
        "parent": "CSF00910"
    },
    {
        "id": "F00816",
        "name": "Tél utca \/ Pozsonyi utca",
        "lat": "47.555613",
        "lon": "19.090316",
        "parent": "CSF00861"
    },
    {
        "id": "F00817",
        "name": "Tél utca \/ Pozsonyi utca",
        "lat": "47.555458",
        "lon": "19.090283",
        "parent": "CSF00861"
    },
    {
        "id": "F00818",
        "name": "Tél utca \/ Pozsonyi utca",
        "lat": "47.556259",
        "lon": "19.088835",
        "parent": "CSF00861"
    },
    {
        "id": "F00819",
        "name": "Tél utca \/ Pozsonyi utca",
        "lat": "47.555026",
        "lon": "19.089644",
        "parent": "CSF00861"
    },
    {
        "id": "F00820",
        "name": "Angyalföld kocsiszín",
        "lat": "47.553154",
        "lon": "19.092659",
        "parent": "CSF00821"
    },
    {
        "id": "F00821",
        "name": "Angyalföld kocsiszín",
        "lat": "47.553154",
        "lon": "19.091490",
        "parent": "CSF00821"
    },
    {
        "id": "F00822",
        "name": "Angyalföld kocsiszín",
        "lat": "47.553055",
        "lon": "19.091623",
        "parent": "CSF00821"
    },
    {
        "id": "F00823",
        "name": "Angyalföld kocsiszín",
        "lat": "47.552965",
        "lon": "19.091795",
        "parent": "CSF00821"
    },
    {
        "id": "F00824",
        "name": "Bőröndös utca",
        "lat": "47.585091",
        "lon": "19.116908",
        "parent": "CSF00826"
    },
    {
        "id": "F00825",
        "name": "Bőröndös utca",
        "lat": "47.585460",
        "lon": "19.117201",
        "parent": "CSF00826"
    },
    {
        "id": "F00826",
        "name": "Bőröndös utca",
        "lat": "47.585657",
        "lon": "19.117481",
        "parent": "CSF00826"
    },
    {
        "id": "F00827",
        "name": "Bőröndös utca",
        "lat": "47.585262",
        "lon": "19.117228",
        "parent": "CSF00826"
    },
    {
        "id": "F00828",
        "name": "Újpesti Erőmű",
        "lat": "47.555187",
        "lon": "19.099789",
        "parent": "CSF00828"
    },
    {
        "id": "F00829",
        "name": "Újpesti Erőmű",
        "lat": "47.555033",
        "lon": "19.100852",
        "parent": "CSF00828"
    },
    {
        "id": "F00830",
        "name": "Elem utca",
        "lat": "47.554840",
        "lon": "19.104552",
        "parent": ""
    },
    {
        "id": "F00831",
        "name": "Istvántelki út",
        "lat": "47.554579",
        "lon": "19.104286",
        "parent": ""
    },
    {
        "id": "F00832",
        "name": "Munkásotthon utca",
        "lat": "47.559115",
        "lon": "19.099335",
        "parent": ""
    },
    {
        "id": "F00833",
        "name": "Árpád üzletház",
        "lat": "47.561076",
        "lon": "19.098898",
        "parent": "CSF00833"
    },
    {
        "id": "F00834",
        "name": "Árpád üzletház",
        "lat": "47.561049",
        "lon": "19.099031",
        "parent": "CSF00833"
    },
    {
        "id": "F00835",
        "name": "Árpád üzletház",
        "lat": "47.560145",
        "lon": "19.098017",
        "parent": "CSF00833"
    },
    {
        "id": "F00836",
        "name": "Árpád üzletház",
        "lat": "47.560482",
        "lon": "19.099788",
        "parent": "CSF00833"
    },
    {
        "id": "F00837",
        "name": "Víztorony",
        "lat": "47.562241",
        "lon": "19.106646",
        "parent": "CSF00837"
    },
    {
        "id": "F00838",
        "name": "Víztorony",
        "lat": "47.562169",
        "lon": "19.106846",
        "parent": "CSF00837"
    },
    {
        "id": "F00840",
        "name": "Árpád út",
        "lat": "47.562079",
        "lon": "19.107749",
        "parent": ""
    },
    {
        "id": "F00841",
        "name": "Kiss János utca",
        "lat": "47.563436",
        "lon": "19.109744",
        "parent": ""
    },
    {
        "id": "F00842",
        "name": "Árpád út",
        "lat": "47.563220",
        "lon": "19.110302",
        "parent": ""
    },
    {
        "id": "F00843",
        "name": "Rákospalota-Újpest vasútállomás",
        "lat": "47.564380",
        "lon": "19.110768",
        "parent": "CS009515"
    },
    {
        "id": "F00844",
        "name": "Rákospalota-Újpest vasútállomás",
        "lat": "47.564339",
        "lon": "19.110592",
        "parent": "CS009515"
    },
    {
        "id": "F00845",
        "name": "Rákospalota-Újpest vasútállomás",
        "lat": "47.566277",
        "lon": "19.111754",
        "parent": "CS009515"
    },
    {
        "id": "F00846",
        "name": "Rákospalota-Újpest vasútállomás",
        "lat": "47.565900",
        "lon": "19.111501",
        "parent": "CS009515"
    },
    {
        "id": "F00847",
        "name": "Rákospalota-Újpest vasútállomás",
        "lat": "47.565099",
        "lon": "19.111075",
        "parent": "CS009515"
    },
    {
        "id": "F00848",
        "name": "Mildenberger utca",
        "lat": "47.572435",
        "lon": "19.087981",
        "parent": "CSF00848"
    },
    {
        "id": "F00849",
        "name": "Mildenberger utca",
        "lat": "47.572080",
        "lon": "19.088541",
        "parent": "CSF00848"
    },
    {
        "id": "F00850",
        "name": "Mildenberger utca",
        "lat": "47.572071",
        "lon": "19.087784",
        "parent": "CSF00848"
    },
    {
        "id": "F00851",
        "name": "Attila utca",
        "lat": "47.564086",
        "lon": "19.082303",
        "parent": "CSF00851"
    },
    {
        "id": "F00852",
        "name": "Attila utca",
        "lat": "47.563978",
        "lon": "19.082316",
        "parent": "CSF00851"
    },
    {
        "id": "F00853",
        "name": "Görgey Artúr út",
        "lat": "47.565092",
        "lon": "19.107872",
        "parent": ""
    },
    {
        "id": "F00854",
        "name": "Erzsébet utca",
        "lat": "47.559755",
        "lon": "19.095242",
        "parent": "CSF00855"
    },
    {
        "id": "F00855",
        "name": "Erzsébet utca",
        "lat": "47.559931",
        "lon": "19.093818",
        "parent": "CSF00855"
    },
    {
        "id": "F00856",
        "name": "Homoktövis iskola",
        "lat": "47.596838",
        "lon": "19.116046",
        "parent": "CS008911"
    },
    {
        "id": "F00859",
        "name": "Káposztásmegyer, Szilas-patak",
        "lat": "47.577798",
        "lon": "19.114772",
        "parent": "CSF00859"
    },
    {
        "id": "F00861",
        "name": "Tél utca \/ Pozsonyi utca",
        "lat": "47.556843",
        "lon": "19.088875",
        "parent": "CSF00861"
    },
    {
        "id": "F00862",
        "name": "Tél utca \/ Pozsonyi utca",
        "lat": "47.556798",
        "lon": "19.088490",
        "parent": "CSF00861"
    },
    {
        "id": "F00863",
        "name": "Brüsszeli utca",
        "lat": "47.549334",
        "lon": "19.098578",
        "parent": "CSF00863"
    },
    {
        "id": "F00864",
        "name": "Brüsszeli utca",
        "lat": "47.548960",
        "lon": "19.098528",
        "parent": "CSF00863"
    },
    {
        "id": "F00867",
        "name": "Béla utca",
        "lat": "47.580771",
        "lon": "19.081635",
        "parent": "CSF00867"
    },
    {
        "id": "F00868",
        "name": "Béla utca",
        "lat": "47.580321",
        "lon": "19.081462",
        "parent": "CSF00867"
    },
    {
        "id": "F00869",
        "name": "Tungsram",
        "lat": "47.576580",
        "lon": "19.081327",
        "parent": "CSF00869"
    },
    {
        "id": "F00870",
        "name": "Tungsram",
        "lat": "47.576247",
        "lon": "19.081141",
        "parent": "CSF00869"
    },
    {
        "id": "F00871",
        "name": "Dunakeszi utca",
        "lat": "47.585527",
        "lon": "19.109052",
        "parent": "CSF00871"
    },
    {
        "id": "F00872",
        "name": "Dunakeszi utca",
        "lat": "47.584709",
        "lon": "19.107894",
        "parent": "CSF00871"
    },
    {
        "id": "F00873",
        "name": "Zombori utca",
        "lat": "47.572001",
        "lon": "19.105740",
        "parent": "CSF00873"
    },
    {
        "id": "F00874",
        "name": "Zombori utca",
        "lat": "47.571911",
        "lon": "19.106591",
        "parent": "CSF00873"
    },
    {
        "id": "F00875",
        "name": "Pajtás utca",
        "lat": "47.571451",
        "lon": "19.108238",
        "parent": ""
    },
    {
        "id": "F00876",
        "name": "Deák Ferenc utca \/ Rózsa utca",
        "lat": "47.564223",
        "lon": "19.100124",
        "parent": "CSF00876"
    },
    {
        "id": "F00877",
        "name": "Deák Ferenc utca \/ Rózsa utca",
        "lat": "47.563247",
        "lon": "19.099588",
        "parent": "CSF00876"
    },
    {
        "id": "F00878",
        "name": "Nap utca",
        "lat": "47.555396",
        "lon": "19.094807",
        "parent": "CSF00878"
    },
    {
        "id": "F00879",
        "name": "Nap utca",
        "lat": "47.555171",
        "lon": "19.095152",
        "parent": "CSF00878"
    },
    {
        "id": "F00880",
        "name": "Szülőotthon",
        "lat": "47.565248",
        "lon": "19.105973",
        "parent": "CSF00881"
    },
    {
        "id": "F00881",
        "name": "Szülőotthon",
        "lat": "47.565324",
        "lon": "19.106401",
        "parent": "CSF00881"
    },
    {
        "id": "F00884",
        "name": "Izzó utca",
        "lat": "47.579991",
        "lon": "19.095754",
        "parent": ""
    },
    {
        "id": "F00885",
        "name": "Árpád Kórház",
        "lat": "47.561382",
        "lon": "19.103755",
        "parent": "CSF00885"
    },
    {
        "id": "F00886",
        "name": "Árpád Kórház",
        "lat": "47.561083",
        "lon": "19.102924",
        "parent": "CSF00885"
    },
    {
        "id": "F00887",
        "name": "Ősz utca",
        "lat": "47.557798",
        "lon": "19.105858",
        "parent": "CSF00887"
    },
    {
        "id": "F00888",
        "name": "Ősz utca",
        "lat": "47.557286",
        "lon": "19.105737",
        "parent": "CSF00887"
    },
    {
        "id": "F00889",
        "name": "Elem utca",
        "lat": "47.554342",
        "lon": "19.101479",
        "parent": ""
    },
    {
        "id": "F00890",
        "name": "Berlini utca",
        "lat": "47.554598",
        "lon": "19.101469",
        "parent": ""
    },
    {
        "id": "F00891",
        "name": "Ősz utca",
        "lat": "47.557311",
        "lon": "19.100685",
        "parent": "CSF00892"
    },
    {
        "id": "F00892",
        "name": "Ősz utca",
        "lat": "47.557554",
        "lon": "19.100247",
        "parent": "CSF00892"
    },
    {
        "id": "F00893",
        "name": "Langlet Waldemár utca",
        "lat": "47.567180",
        "lon": "19.082637",
        "parent": "CSF00893"
    },
    {
        "id": "F00894",
        "name": "Langlet Waldemár utca",
        "lat": "47.566928",
        "lon": "19.082530",
        "parent": "CSF00893"
    },
    {
        "id": "F00895",
        "name": "Perényi Zsigmond utca",
        "lat": "47.570093",
        "lon": "19.085775",
        "parent": ""
    },
    {
        "id": "F00896",
        "name": "Tinódi utca",
        "lat": "47.570003",
        "lon": "19.085536",
        "parent": ""
    },
    {
        "id": "F00897",
        "name": "Újpest-Városkapu",
        "lat": "47.559495",
        "lon": "19.081099",
        "parent": "CSF00897"
    },
    {
        "id": "F00898",
        "name": "Újpest-Városkapu",
        "lat": "47.559146",
        "lon": "19.079567",
        "parent": "CSF00897"
    },
    {
        "id": "F00899",
        "name": "Káposztásmegyer, Mogyoródi-patak",
        "lat": "47.598688",
        "lon": "19.121700",
        "parent": "CS009536"
    },
    {
        "id": "F00900",
        "name": "Kordován tér",
        "lat": "47.587783",
        "lon": "19.112578",
        "parent": "CSF00900"
    },
    {
        "id": "F00901",
        "name": "Kordován tér",
        "lat": "47.587334",
        "lon": "19.111646",
        "parent": "CSF00900"
    },
    {
        "id": "F00902",
        "name": "Bőrfestő utca",
        "lat": "47.586961",
        "lon": "19.117655",
        "parent": "CSF00903"
    },
    {
        "id": "F00903",
        "name": "Bőrfestő utca",
        "lat": "47.587834",
        "lon": "19.118135",
        "parent": "CSF00903"
    },
    {
        "id": "F00904",
        "name": "Bőrfestő utca",
        "lat": "47.587825",
        "lon": "19.118348",
        "parent": "CSF00903"
    },
    {
        "id": "F00905",
        "name": "Bőrfestő utca",
        "lat": "47.587456",
        "lon": "19.118121",
        "parent": "CSF00903"
    },
    {
        "id": "F00906",
        "name": "Székpatak utca",
        "lat": "47.596197",
        "lon": "19.121111",
        "parent": "CSF00906"
    },
    {
        "id": "F00907",
        "name": "Székpatak utca",
        "lat": "47.595882",
        "lon": "19.121191",
        "parent": "CSF00906"
    },
    {
        "id": "F00908",
        "name": "Sárpatak utca",
        "lat": "47.593348",
        "lon": "19.117251",
        "parent": "CSF00908"
    },
    {
        "id": "F00909",
        "name": "Sárpatak utca",
        "lat": "47.592909",
        "lon": "19.118680",
        "parent": "CSF00908"
    },
    {
        "id": "F00910",
        "name": "Újpest-Központ M",
        "lat": "47.561547",
        "lon": "19.089955",
        "parent": "CSF00910"
    },
    {
        "id": "F00912",
        "name": "Újpest-Központ",
        "lat": "47.560144",
        "lon": "19.091319",
        "parent": "CSF00913"
    },
    {
        "id": "F00913",
        "name": "Újpest-Központ",
        "lat": "47.560437",
        "lon": "19.089760",
        "parent": "CSF00913"
    },
    {
        "id": "F00916",
        "name": "Vízművek lakótelep",
        "lat": "47.597723",
        "lon": "19.091460",
        "parent": "CS008708"
    },
    {
        "id": "F00918",
        "name": "Fővám tér M",
        "lat": "47.486754",
        "lon": "19.056841",
        "parent": "CSF00922"
    },
    {
        "id": "F00919",
        "name": "Fővám tér M",
        "lat": "47.486862",
        "lon": "19.056602",
        "parent": "CSF00922"
    },
    {
        "id": "F00921",
        "name": "Fővám tér M",
        "lat": "47.486934",
        "lon": "19.057226",
        "parent": "CSF00922"
    },
    {
        "id": "F00922",
        "name": "Fővám tér M",
        "lat": "47.487213",
        "lon": "19.057810",
        "parent": "CSF00922"
    },
    {
        "id": "F00923",
        "name": "Fővám tér M",
        "lat": "47.486916",
        "lon": "19.057611",
        "parent": "CSF00922"
    },
    {
        "id": "F00924",
        "name": "Petőfi tér",
        "lat": "47.493222",
        "lon": "19.050565",
        "parent": "CS044591"
    },
    {
        "id": "F00925",
        "name": "Jászai Mari tér",
        "lat": "47.513136",
        "lon": "19.048149",
        "parent": "CSF02511"
    },
    {
        "id": "F00926",
        "name": "Jászai Mari tér",
        "lat": "47.512884",
        "lon": "19.048787",
        "parent": "CSF02511"
    },
    {
        "id": "F00929",
        "name": "Jászai Mari tér",
        "lat": "47.512536",
        "lon": "19.050134",
        "parent": "CSF02511"
    },
    {
        "id": "F00930",
        "name": "Jászai Mari tér",
        "lat": "47.512488",
        "lon": "19.049557",
        "parent": "CSF02511"
    },
    {
        "id": "F00931",
        "name": "Szent István körút",
        "lat": "47.511907",
        "lon": "19.050532",
        "parent": "CSF00932"
    },
    {
        "id": "F00932",
        "name": "Szent István körút",
        "lat": "47.512120",
        "lon": "19.052318",
        "parent": "CSF00932"
    },
    {
        "id": "F00933",
        "name": "Nyugati pályaudvar M",
        "lat": "47.510266",
        "lon": "19.056141",
        "parent": "CSF01023"
    },
    {
        "id": "F00934",
        "name": "Nyugati pályaudvar M",
        "lat": "47.509941",
        "lon": "19.056248",
        "parent": "CSF01023"
    },
    {
        "id": "F00935",
        "name": "Nyugati pályaudvar M",
        "lat": "47.509952",
        "lon": "19.056633",
        "parent": "CSF01023"
    },
    {
        "id": "F00936",
        "name": "Nyugati pályaudvar",
        "lat": "47.511720",
        "lon": "19.056873",
        "parent": "CSLM3NYA"
    },
    {
        "id": "F00937",
        "name": "Nyugati pályaudvar",
        "lat": "47.510828",
        "lon": "19.055952",
        "parent": "CSLM3NYA"
    },
    {
        "id": "F00938",
        "name": "Báthory utca \/ Bajcsy-Zsilinszky út",
        "lat": "47.507091",
        "lon": "19.054336",
        "parent": "CSF00940"
    },
    {
        "id": "F00939",
        "name": "Báthory utca \/ Bajcsy-Zsilinszky út",
        "lat": "47.506552",
        "lon": "19.055769",
        "parent": "CSF00940"
    },
    {
        "id": "F00940",
        "name": "Báthory utca \/ Bajcsy-Zsilinszky út",
        "lat": "47.507252",
        "lon": "19.055823",
        "parent": "CSF00940"
    },
    {
        "id": "F00941",
        "name": "Báthory utca \/ Bajcsy-Zsilinszky út",
        "lat": "47.506156",
        "lon": "19.054933",
        "parent": "CSF00940"
    },
    {
        "id": "F00942",
        "name": "Arany János utca M",
        "lat": "47.503269",
        "lon": "19.054959",
        "parent": "CSF00942"
    },
    {
        "id": "F00943",
        "name": "Arany János utca M",
        "lat": "47.502927",
        "lon": "19.054800",
        "parent": "CSF00942"
    },
    {
        "id": "F00944",
        "name": "Bajcsy-Zsilinszky út M",
        "lat": "47.499950",
        "lon": "19.055543",
        "parent": "CSF00945"
    },
    {
        "id": "F00945",
        "name": "Bajcsy-Zsilinszky út M",
        "lat": "47.500363",
        "lon": "19.055954",
        "parent": "CSF00945"
    },
    {
        "id": "F00946",
        "name": "Deák Ferenc tér M",
        "lat": "47.496972",
        "lon": "19.055543",
        "parent": "CS038717"
    },
    {
        "id": "F00947",
        "name": "Deák Ferenc tér M",
        "lat": "47.496855",
        "lon": "19.056976",
        "parent": "CS038717"
    },
    {
        "id": "F00950",
        "name": "Deák Ferenc tér M",
        "lat": "47.496846",
        "lon": "19.055835",
        "parent": "CS038717"
    },
    {
        "id": "F00951",
        "name": "Ferenciek tere M",
        "lat": "47.492970",
        "lon": "19.055356",
        "parent": "CSF01004"
    },
    {
        "id": "F00952",
        "name": "Ferenciek tere",
        "lat": "47.492808",
        "lon": "19.056091",
        "parent": "CSLM3FT1"
    },
    {
        "id": "F00953",
        "name": "Ferenciek tere",
        "lat": "47.491820",
        "lon": "19.056789",
        "parent": "CSLM3FT1"
    },
    {
        "id": "F00954",
        "name": "Deák Ferenc tér",
        "lat": "47.498660",
        "lon": "19.054545",
        "parent": "CSF00960"
    },
    {
        "id": "F00955",
        "name": "Deák Ferenc tér",
        "lat": "47.497591",
        "lon": "19.054525",
        "parent": "CSF00960"
    },
    {
        "id": "F00956",
        "name": "Arany János utca",
        "lat": "47.504733",
        "lon": "19.054679",
        "parent": "CSF00956"
    },
    {
        "id": "F00957",
        "name": "Arany János utca",
        "lat": "47.503670",
        "lon": "19.054513",
        "parent": "CSF00956"
    },
    {
        "id": "F00960",
        "name": "Deák Ferenc tér",
        "lat": "47.498843",
        "lon": "19.053605",
        "parent": "CSF00960"
    },
    {
        "id": "F00961",
        "name": "Deák Ferenc tér",
        "lat": "47.497600",
        "lon": "19.053863",
        "parent": "CSF00960"
    },
    {
        "id": "F00962",
        "name": "Deák Ferenc tér",
        "lat": "47.497720",
        "lon": "19.053670",
        "parent": "CSF00960"
    },
    {
        "id": "F00963",
        "name": "Deák Ferenc tér",
        "lat": "47.497728",
        "lon": "19.054142",
        "parent": "CSF00960"
    },
    {
        "id": "F00964",
        "name": "Vörösmarty tér",
        "lat": "47.496671",
        "lon": "19.050193",
        "parent": "CSLM1VTV"
    },
    {
        "id": "F00965",
        "name": "Vörösmarty tér",
        "lat": "47.496737",
        "lon": "19.050593",
        "parent": "CSLM1VTV"
    },
    {
        "id": "F00966",
        "name": "Vigadó tér",
        "lat": "47.495569",
        "lon": "19.048402",
        "parent": "CSF00977"
    },
    {
        "id": "F00967",
        "name": "Vigadó tér",
        "lat": "47.495614",
        "lon": "19.048322",
        "parent": "CSF00977"
    },
    {
        "id": "F00968",
        "name": "Országház, látogatóközpont",
        "lat": "47.509214",
        "lon": "19.046756",
        "parent": "CSF00968"
    },
    {
        "id": "F00969",
        "name": "Országház, látogatóközpont",
        "lat": "47.508909",
        "lon": "19.046610",
        "parent": "CSF00968"
    },
    {
        "id": "F00970",
        "name": "Kossuth Lajos tér M",
        "lat": "47.505950",
        "lon": "19.049320",
        "parent": "CSF00970"
    },
    {
        "id": "F00971",
        "name": "Kossuth Lajos tér M",
        "lat": "47.505742",
        "lon": "19.046809",
        "parent": "CSF00970"
    },
    {
        "id": "F00972",
        "name": "Kossuth Lajos tér M",
        "lat": "47.505706",
        "lon": "19.047326",
        "parent": "CSF00970"
    },
    {
        "id": "F00973",
        "name": "Széchenyi István tér",
        "lat": "47.500660",
        "lon": "19.046080",
        "parent": "CSF00974"
    },
    {
        "id": "F00974",
        "name": "Széchenyi István tér",
        "lat": "47.500732",
        "lon": "19.046145",
        "parent": "CSF00974"
    },
    {
        "id": "F00975",
        "name": "Eötvös tér",
        "lat": "47.497872",
        "lon": "19.047142",
        "parent": "CSF00976"
    },
    {
        "id": "F00976",
        "name": "Eötvös tér",
        "lat": "47.497980",
        "lon": "19.047062",
        "parent": "CSF00976"
    },
    {
        "id": "F00977",
        "name": "Vigadó tér",
        "lat": "47.497170",
        "lon": "19.048269",
        "parent": "CSF00977"
    },
    {
        "id": "F00979",
        "name": "József nádor tér",
        "lat": "47.498933",
        "lon": "19.051999",
        "parent": ""
    },
    {
        "id": "F00980",
        "name": "Erzsébet tér",
        "lat": "47.498645",
        "lon": "19.051534",
        "parent": ""
    },
    {
        "id": "F00981",
        "name": "Hild tér",
        "lat": "47.498987",
        "lon": "19.050950",
        "parent": ""
    },
    {
        "id": "F00985",
        "name": "Deák Ferenc tér M",
        "lat": "47.497638",
        "lon": "19.053021",
        "parent": "CS038717"
    },
    {
        "id": "F00986",
        "name": "Zrínyi utca",
        "lat": "47.499689",
        "lon": "19.049464",
        "parent": ""
    },
    {
        "id": "F00990",
        "name": "Markó utca",
        "lat": "47.509178",
        "lon": "19.051176",
        "parent": "CSF00990"
    },
    {
        "id": "F00991",
        "name": "Markó utca",
        "lat": "47.509052",
        "lon": "19.049570",
        "parent": "CSF00990"
    },
    {
        "id": "F00994",
        "name": "Arany János utca M",
        "lat": "47.502999",
        "lon": "19.054096",
        "parent": "CSF00942"
    },
    {
        "id": "F00995",
        "name": "Arany János utca M",
        "lat": "47.503251",
        "lon": "19.054056",
        "parent": "CSF00942"
    },
    {
        "id": "F00996",
        "name": "Bajcsy-Zsilinszky út",
        "lat": "47.499841",
        "lon": "19.055259",
        "parent": "CSF00997"
    },
    {
        "id": "F00997",
        "name": "Bajcsy-Zsilinszky út",
        "lat": "47.499937",
        "lon": "19.055655",
        "parent": "CSF00997"
    },
    {
        "id": "F00999",
        "name": "Március 15. tér",
        "lat": "47.490892",
        "lon": "19.051601",
        "parent": "CS062518"
    },
    {
        "id": "F01000",
        "name": "Március 15. tér",
        "lat": "47.490712",
        "lon": "19.051654",
        "parent": "CS062518"
    },
    {
        "id": "F01001",
        "name": "Március 15. tér",
        "lat": "47.490865",
        "lon": "19.051654",
        "parent": "CS062518"
    },
    {
        "id": "F01004",
        "name": "Ferenciek tere M",
        "lat": "47.492979",
        "lon": "19.054534",
        "parent": "CSF01004"
    },
    {
        "id": "F01005",
        "name": "Kálvin tér M",
        "lat": "47.489245",
        "lon": "19.061367",
        "parent": "CSF01010"
    },
    {
        "id": "F01006",
        "name": "Kálvin tér M",
        "lat": "47.489446",
        "lon": "19.061559",
        "parent": "CSF01010"
    },
    {
        "id": "F01007",
        "name": "Kálvin tér M",
        "lat": "47.489083",
        "lon": "19.062787",
        "parent": "CSF01010"
    },
    {
        "id": "F01010",
        "name": "Kálvin tér M",
        "lat": "47.489983",
        "lon": "19.061991",
        "parent": "CSF01010"
    },
    {
        "id": "F01012",
        "name": "Astoria M",
        "lat": "47.494570",
        "lon": "19.059749",
        "parent": "CS056426"
    },
    {
        "id": "F01013",
        "name": "Astoria M",
        "lat": "47.494120",
        "lon": "19.060134",
        "parent": "CS056426"
    },
    {
        "id": "F01014",
        "name": "Astoria M",
        "lat": "47.493707",
        "lon": "19.060094",
        "parent": "CS056426"
    },
    {
        "id": "F01016",
        "name": "Astoria M",
        "lat": "47.494417",
        "lon": "19.060997",
        "parent": "CS056426"
    },
    {
        "id": "F01017",
        "name": "Astoria M",
        "lat": "47.494606",
        "lon": "19.060718",
        "parent": "CS056426"
    },
    {
        "id": "F01018",
        "name": "Astoria",
        "lat": "47.494594",
        "lon": "19.060933",
        "parent": "CSF01019"
    },
    {
        "id": "F01019",
        "name": "Astoria",
        "lat": "47.494825",
        "lon": "19.062457",
        "parent": "CSF01019"
    },
    {
        "id": "F01020",
        "name": "Széchenyi utca",
        "lat": "47.503170",
        "lon": "19.048508",
        "parent": ""
    },
    {
        "id": "F01021",
        "name": "Hercegprímás utca",
        "lat": "47.502282",
        "lon": "19.052032",
        "parent": ""
    },
    {
        "id": "F01022",
        "name": "Hold utca",
        "lat": "47.505005",
        "lon": "19.052450",
        "parent": ""
    },
    {
        "id": "F01023",
        "name": "Nyugati pályaudvar M",
        "lat": "47.511580",
        "lon": "19.056699",
        "parent": "CSF01023"
    },
    {
        "id": "F01024",
        "name": "Nyugati pályaudvar M",
        "lat": "47.511290",
        "lon": "19.056490",
        "parent": "CSF01023"
    },
    {
        "id": "F01025",
        "name": "Nyugati pályaudvar M",
        "lat": "47.511049",
        "lon": "19.056288",
        "parent": "CSF01023"
    },
    {
        "id": "F01027",
        "name": "Nyugati pályaudvar M",
        "lat": "47.511061",
        "lon": "19.056520",
        "parent": "CSF01023"
    },
    {
        "id": "F01028",
        "name": "Nyugati pályaudvar M",
        "lat": "47.510788",
        "lon": "19.056327",
        "parent": "CSF01023"
    },
    {
        "id": "F01029",
        "name": "Nyugati pályaudvar M",
        "lat": "47.509862",
        "lon": "19.057177",
        "parent": "CSF01023"
    },
    {
        "id": "F01030",
        "name": "Nyugati pályaudvar M (Podmaniczky utca)",
        "lat": "47.509169",
        "lon": "19.058624",
        "parent": "CSF01023"
    },
    {
        "id": "F01031",
        "name": "Nyugati pályaudvar M (Podmaniczky utca)",
        "lat": "47.509295",
        "lon": "19.058624",
        "parent": "CSF01023"
    },
    {
        "id": "F01032",
        "name": "Akácfa utca",
        "lat": "47.502054",
        "lon": "19.062989",
        "parent": "CSF01033"
    },
    {
        "id": "F01033",
        "name": "Akácfa utca",
        "lat": "47.502162",
        "lon": "19.062976",
        "parent": "CSF01033"
    },
    {
        "id": "F01034",
        "name": "Király utca \/ Erzsébet körút",
        "lat": "47.503591",
        "lon": "19.065897",
        "parent": "CSF01034"
    },
    {
        "id": "F01035",
        "name": "Király utca \/ Erzsébet körút",
        "lat": "47.503249",
        "lon": "19.065830",
        "parent": "CSF01034"
    },
    {
        "id": "F01036",
        "name": "Király utca \/ Erzsébet körút",
        "lat": "47.503187",
        "lon": "19.065379",
        "parent": "CSF01034"
    },
    {
        "id": "F01037",
        "name": "Király utca \/ Erzsébet körút",
        "lat": "47.502809",
        "lon": "19.066202",
        "parent": "CSF01034"
    },
    {
        "id": "F01038",
        "name": "Király utca \/ Erzsébet körút",
        "lat": "47.503091",
        "lon": "19.066142",
        "parent": "CSF01034"
    },
    {
        "id": "F01039",
        "name": "Király utca \/ Erzsébet körút",
        "lat": "47.502926",
        "lon": "19.065910",
        "parent": "CSF01034"
    },
    {
        "id": "F01040",
        "name": "Izabella utca \/ Király utca",
        "lat": "47.505524",
        "lon": "19.070185",
        "parent": "CSF01042"
    },
    {
        "id": "F01041",
        "name": "Izabella utca \/ Király utca",
        "lat": "47.505480",
        "lon": "19.069070",
        "parent": "CSF01042"
    },
    {
        "id": "F01042",
        "name": "Izabella utca \/ Király utca",
        "lat": "47.506136",
        "lon": "19.069522",
        "parent": "CSF01042"
    },
    {
        "id": "F01043",
        "name": "Izabella utca \/ Király utca",
        "lat": "47.505318",
        "lon": "19.069004",
        "parent": "CSF01042"
    },
    {
        "id": "F01044",
        "name": "Lövölde tér",
        "lat": "47.506981",
        "lon": "19.071805",
        "parent": "CSF01045"
    },
    {
        "id": "F01045",
        "name": "Lövölde tér",
        "lat": "47.507314",
        "lon": "19.072124",
        "parent": "CSF01045"
    },
    {
        "id": "F01046",
        "name": "Reformáció park",
        "lat": "47.508249",
        "lon": "19.075390",
        "parent": "CSF01046"
    },
    {
        "id": "F01047",
        "name": "Reformáció park",
        "lat": "47.507862",
        "lon": "19.076054",
        "parent": "CSF01046"
    },
    {
        "id": "F01048",
        "name": "Benczúr utca",
        "lat": "47.513240",
        "lon": "19.078260",
        "parent": ""
    },
    {
        "id": "F01050",
        "name": "Hősök tere M",
        "lat": "47.514131",
        "lon": "19.076535",
        "parent": "CSF01056"
    },
    {
        "id": "F01051",
        "name": "Hősök tere M",
        "lat": "47.515597",
        "lon": "19.075885",
        "parent": "CSF01056"
    },
    {
        "id": "F01053",
        "name": "Gundel Károly út",
        "lat": "47.516614",
        "lon": "19.075594",
        "parent": ""
    },
    {
        "id": "F01054",
        "name": "Honvédkórház (Hősök tere M)",
        "lat": "47.515975",
        "lon": "19.074531",
        "parent": "CSF01056"
    },
    {
        "id": "F01055",
        "name": "Hősök tere M",
        "lat": "47.515732",
        "lon": "19.075527",
        "parent": "CSF01056"
    },
    {
        "id": "F01056",
        "name": "Honvédkórház (Hősök tere M)",
        "lat": "47.516074",
        "lon": "19.074491",
        "parent": "CSF01056"
    },
    {
        "id": "F01057",
        "name": "Vágány utca \/ Dózsa György út",
        "lat": "47.518755",
        "lon": "19.072713",
        "parent": "CSF02620"
    },
    {
        "id": "F01058",
        "name": "Vágány utca \/ Dózsa György út",
        "lat": "47.518762",
        "lon": "19.073124",
        "parent": "CSF02620"
    },
    {
        "id": "F01059",
        "name": "Vágány utca \/ Dózsa György út",
        "lat": "47.518989",
        "lon": "19.071997",
        "parent": "CSF02620"
    },
    {
        "id": "F01060",
        "name": "Vágány utca \/ Dózsa György út",
        "lat": "47.519196",
        "lon": "19.071585",
        "parent": "CSF02620"
    },
    {
        "id": "F01061",
        "name": "Dévai utca",
        "lat": "47.518514",
        "lon": "19.064680",
        "parent": "CSF01062"
    },
    {
        "id": "F01062",
        "name": "Dévai utca",
        "lat": "47.518757",
        "lon": "19.065251",
        "parent": "CSF01062"
    },
    {
        "id": "F01063",
        "name": "Dévai utca",
        "lat": "47.518703",
        "lon": "19.064853",
        "parent": "CSF01062"
    },
    {
        "id": "F01064",
        "name": "Dévai utca",
        "lat": "47.518658",
        "lon": "19.065238",
        "parent": "CSF01062"
    },
    {
        "id": "F01065",
        "name": "Lehel tér M",
        "lat": "47.516832",
        "lon": "19.061852",
        "parent": "CSF02612"
    },
    {
        "id": "F01066",
        "name": "Csanády utca (Lehel tér M)",
        "lat": "47.515348",
        "lon": "19.060139",
        "parent": "CSF02612"
    },
    {
        "id": "F01067",
        "name": "Csanády utca (Lehel tér M)",
        "lat": "47.515987",
        "lon": "19.058625",
        "parent": "CSF02612"
    },
    {
        "id": "F01068",
        "name": "Ferdinánd híd (Izabella utca)",
        "lat": "47.510149",
        "lon": "19.062354",
        "parent": "CSF01069"
    },
    {
        "id": "F01069",
        "name": "Ferdinánd híd (Izabella utca)",
        "lat": "47.511696",
        "lon": "19.062674",
        "parent": "CSF01069"
    },
    {
        "id": "F01070",
        "name": "Ferdinánd híd (Izabella utca)",
        "lat": "47.511579",
        "lon": "19.062700",
        "parent": "CSF01069"
    },
    {
        "id": "F01071",
        "name": "Ferdinánd híd (Izabella utca)",
        "lat": "47.511147",
        "lon": "19.062740",
        "parent": "CSF01069"
    },
    {
        "id": "F01072",
        "name": "Ferdinánd híd (Izabella utca)",
        "lat": "47.511066",
        "lon": "19.062673",
        "parent": "CSF01069"
    },
    {
        "id": "F01073",
        "name": "Munkácsy Mihály utca",
        "lat": "47.515156",
        "lon": "19.069976",
        "parent": ""
    },
    {
        "id": "F01074",
        "name": "Rippl-Rónai utca",
        "lat": "47.514960",
        "lon": "19.072260",
        "parent": ""
    },
    {
        "id": "F01075",
        "name": "Andrássy út (Opera M)",
        "lat": "47.503151",
        "lon": "19.060839",
        "parent": "CSF01076"
    },
    {
        "id": "F01076",
        "name": "Andrássy út (Opera M)",
        "lat": "47.503448",
        "lon": "19.060242",
        "parent": "CSF01076"
    },
    {
        "id": "F01077",
        "name": "Opera M",
        "lat": "47.503142",
        "lon": "19.060149",
        "parent": "CSF01076"
    },
    {
        "id": "F01078",
        "name": "Opera M",
        "lat": "47.502657",
        "lon": "19.059631",
        "parent": "CSF01076"
    },
    {
        "id": "F01079",
        "name": "Opera",
        "lat": "47.502197",
        "lon": "19.058761",
        "parent": "CSLM1OPV"
    },
    {
        "id": "F01080",
        "name": "Opera",
        "lat": "47.502305",
        "lon": "19.059161",
        "parent": "CSLM1OPV"
    },
    {
        "id": "F01081",
        "name": "Oktogon M",
        "lat": "47.505583",
        "lon": "19.062877",
        "parent": "CSF01084"
    },
    {
        "id": "F01082",
        "name": "Oktogon M",
        "lat": "47.505993",
        "lon": "19.062393",
        "parent": "CSF01084"
    },
    {
        "id": "F01083",
        "name": "Oktogon M",
        "lat": "47.505894",
        "lon": "19.062738",
        "parent": "CSF01084"
    },
    {
        "id": "F01084",
        "name": "Aradi utca (Oktogon M)",
        "lat": "47.506227",
        "lon": "19.061769",
        "parent": "CSF01084"
    },
    {
        "id": "F01085",
        "name": "Oktogon",
        "lat": "47.504923",
        "lon": "19.062823",
        "parent": "CSLM1OKV"
    },
    {
        "id": "F01086",
        "name": "Oktogon",
        "lat": "47.505023",
        "lon": "19.063233",
        "parent": "CSLM1OKV"
    },
    {
        "id": "F01087",
        "name": "Oktogon M",
        "lat": "47.504620",
        "lon": "19.063886",
        "parent": "CSF01084"
    },
    {
        "id": "F01088",
        "name": "Oktogon M",
        "lat": "47.504818",
        "lon": "19.062652",
        "parent": "CSF01084"
    },
    {
        "id": "F01089",
        "name": "Oktogon M",
        "lat": "47.504180",
        "lon": "19.061935",
        "parent": "CSF01084"
    },
    {
        "id": "F01090",
        "name": "Andrássy út (Vörösmarty utca M)",
        "lat": "47.508286",
        "lon": "19.066403",
        "parent": "CSF01090"
    },
    {
        "id": "F01091",
        "name": "Andrássy út (Vörösmarty utca M)",
        "lat": "47.507468",
        "lon": "19.067757",
        "parent": "CSF01090"
    },
    {
        "id": "F01092",
        "name": "Vörösmarty utca",
        "lat": "47.507149",
        "lon": "19.066118",
        "parent": "CSF01093"
    },
    {
        "id": "F01093",
        "name": "Vörösmarty utca",
        "lat": "47.507238",
        "lon": "19.066529",
        "parent": "CSF01093"
    },
    {
        "id": "F01094",
        "name": "Kodály körönd M",
        "lat": "47.509518",
        "lon": "19.069616",
        "parent": "CSF01097"
    },
    {
        "id": "F01095",
        "name": "Kodály körönd",
        "lat": "47.509175",
        "lon": "19.069116",
        "parent": "CSF01096"
    },
    {
        "id": "F01096",
        "name": "Kodály körönd",
        "lat": "47.509261",
        "lon": "19.069544",
        "parent": "CSF01096"
    },
    {
        "id": "F01097",
        "name": "Kodály körönd M",
        "lat": "47.509896",
        "lon": "19.070413",
        "parent": "CSF01097"
    },
    {
        "id": "F01098",
        "name": "Bajza utca M",
        "lat": "47.511568",
        "lon": "19.072936",
        "parent": "CSF01098"
    },
    {
        "id": "F01099",
        "name": "Bajza utca M",
        "lat": "47.510921",
        "lon": "19.071727",
        "parent": "CSF01098"
    },
    {
        "id": "F01100",
        "name": "Bajza utca",
        "lat": "47.511237",
        "lon": "19.072271",
        "parent": "CSF01101"
    },
    {
        "id": "F01101",
        "name": "Bajza utca",
        "lat": "47.511342",
        "lon": "19.072662",
        "parent": "CSF01101"
    },
    {
        "id": "F01102",
        "name": "Hősök tere",
        "lat": "47.514055",
        "lon": "19.076439",
        "parent": "CSLM1HTV"
    },
    {
        "id": "F01103",
        "name": "Hősök tere",
        "lat": "47.514110",
        "lon": "19.076883",
        "parent": "CSLM1HTV"
    },
    {
        "id": "F01104",
        "name": "Bajza utca",
        "lat": "47.514556",
        "lon": "19.068224",
        "parent": "CSF01105"
    },
    {
        "id": "F01105",
        "name": "Bajza utca",
        "lat": "47.514897",
        "lon": "19.068264",
        "parent": "CSF01105"
    },
    {
        "id": "F01106",
        "name": "Szinyei Merse utca",
        "lat": "47.513189",
        "lon": "19.065117",
        "parent": "CSF01106"
    },
    {
        "id": "F01107",
        "name": "Szinyei Merse utca",
        "lat": "47.513084",
        "lon": "19.065229",
        "parent": "CSF01106"
    },
    {
        "id": "F01108",
        "name": "Károly körút (Astoria M)",
        "lat": "47.495488",
        "lon": "19.060187",
        "parent": "CS056426"
    },
    {
        "id": "F01109",
        "name": "Nyár utca",
        "lat": "47.498554",
        "lon": "19.065510",
        "parent": ""
    },
    {
        "id": "F01110",
        "name": "Nagy Diófa utca",
        "lat": "47.496261",
        "lon": "19.065616",
        "parent": ""
    },
    {
        "id": "F01111",
        "name": "Wesselényi utca \/ Erzsébet körút",
        "lat": "47.500353",
        "lon": "19.068922",
        "parent": "CSF01115"
    },
    {
        "id": "F01112",
        "name": "Wesselényi utca \/ Erzsébet körút",
        "lat": "47.499840",
        "lon": "19.069187",
        "parent": "CSF01115"
    },
    {
        "id": "F01113",
        "name": "Wesselényi utca \/ Erzsébet körút",
        "lat": "47.500259",
        "lon": "19.069096",
        "parent": "CSF01115"
    },
    {
        "id": "F01114",
        "name": "Wesselényi utca \/ Erzsébet körút",
        "lat": "47.500141",
        "lon": "19.068839",
        "parent": "CSF01115"
    },
    {
        "id": "F01115",
        "name": "Wesselényi utca \/ Erzsébet körút",
        "lat": "47.500928",
        "lon": "19.069254",
        "parent": "CSF01115"
    },
    {
        "id": "F01116",
        "name": "Blaha Lujza tér M",
        "lat": "47.498320",
        "lon": "19.069651",
        "parent": "CSF01116"
    },
    {
        "id": "F01117",
        "name": "Wesselényi utca \/ Izabella utca",
        "lat": "47.502852",
        "lon": "19.073529",
        "parent": ""
    },
    {
        "id": "F01118",
        "name": "Almássy tér",
        "lat": "47.502573",
        "lon": "19.072108",
        "parent": ""
    },
    {
        "id": "F01119",
        "name": "Dob utca",
        "lat": "47.503923",
        "lon": "19.072454",
        "parent": ""
    },
    {
        "id": "F01120",
        "name": "Rózsa utca",
        "lat": "47.503797",
        "lon": "19.074459",
        "parent": ""
    },
    {
        "id": "F01121",
        "name": "Rottenbiller utca \/ István utca",
        "lat": "47.502824",
        "lon": "19.077392",
        "parent": "CSF01122"
    },
    {
        "id": "F01122",
        "name": "Rottenbiller utca \/ István utca",
        "lat": "47.503058",
        "lon": "19.076516",
        "parent": "CSF01122"
    },
    {
        "id": "F01123",
        "name": "Bethlen Gábor utca",
        "lat": "47.506396",
        "lon": "19.076624",
        "parent": ""
    },
    {
        "id": "F01124",
        "name": "Nefelejcs utca \/ Damjanich utca",
        "lat": "47.507187",
        "lon": "19.077753",
        "parent": "CSF01126"
    },
    {
        "id": "F01125",
        "name": "Nefelejcs utca \/ Damjanich utca",
        "lat": "47.507475",
        "lon": "19.077965",
        "parent": "CSF01126"
    },
    {
        "id": "F01126",
        "name": "Nefelejcs utca \/ Damjanich utca",
        "lat": "47.507681",
        "lon": "19.078191",
        "parent": "CSF01126"
    },
    {
        "id": "F01127",
        "name": "Bethlen Gábor tér",
        "lat": "47.504560",
        "lon": "19.078415",
        "parent": ""
    },
    {
        "id": "F01128",
        "name": "Nefelejcs utca",
        "lat": "47.505936",
        "lon": "19.079239",
        "parent": "CSF01128"
    },
    {
        "id": "F01129",
        "name": "Nefelejcs utca \/ István utca",
        "lat": "47.504515",
        "lon": "19.080393",
        "parent": "CSF01128"
    },
    {
        "id": "F01130",
        "name": "Nefelejcs utca \/ István utca",
        "lat": "47.504586",
        "lon": "19.081203",
        "parent": "CSF01128"
    },
    {
        "id": "F01131",
        "name": "Keleti pályaudvar M (Garay utca)",
        "lat": "47.501807",
        "lon": "19.081891",
        "parent": "CSF01131"
    },
    {
        "id": "F01134",
        "name": "Damjanich utca \/ Dózsa György út",
        "lat": "47.509767",
        "lon": "19.082281",
        "parent": "CSF01134"
    },
    {
        "id": "F01135",
        "name": "Damjanich utca \/ Dózsa György út",
        "lat": "47.509434",
        "lon": "19.082042",
        "parent": "CSF01134"
    },
    {
        "id": "F01136",
        "name": "Damjanich utca \/ Dózsa György út",
        "lat": "47.509147",
        "lon": "19.081643",
        "parent": "CSF01134"
    },
    {
        "id": "F01137",
        "name": "Damjanich utca \/ Dózsa György út",
        "lat": "47.509398",
        "lon": "19.083077",
        "parent": "CSF01134"
    },
    {
        "id": "F01138",
        "name": "Dembinszky utca",
        "lat": "47.508372",
        "lon": "19.083780",
        "parent": "CSF01138"
    },
    {
        "id": "F01139",
        "name": "Dembinszky utca",
        "lat": "47.508031",
        "lon": "19.083753",
        "parent": "CSF01138"
    },
    {
        "id": "F01140",
        "name": "Ötvenhatosok tere",
        "lat": "47.506519",
        "lon": "19.086195",
        "parent": "CSF02710"
    },
    {
        "id": "F01141",
        "name": "Ötvenhatosok tere",
        "lat": "47.506285",
        "lon": "19.086261",
        "parent": "CSF02710"
    },
    {
        "id": "F01142",
        "name": "Ötvenhatosok tere (István utca)",
        "lat": "47.506312",
        "lon": "19.084974",
        "parent": "CSF02710"
    },
    {
        "id": "F01143",
        "name": "Cserhát utca",
        "lat": "47.503766",
        "lon": "19.085954",
        "parent": ""
    },
    {
        "id": "F01144",
        "name": "Reiner Frigyes park",
        "lat": "47.504350",
        "lon": "19.088370",
        "parent": "CSF01144"
    },
    {
        "id": "F01145",
        "name": "Reiner Frigyes park",
        "lat": "47.504206",
        "lon": "19.089193",
        "parent": "CSF01144"
    },
    {
        "id": "F01146",
        "name": "Reiner Frigyes park",
        "lat": "47.503559",
        "lon": "19.088211",
        "parent": "CSF01144"
    },
    {
        "id": "F01149",
        "name": "Reiner Frigyes park",
        "lat": "47.503594",
        "lon": "19.089379",
        "parent": "CSF01144"
    },
    {
        "id": "F01150",
        "name": "Verseny utca",
        "lat": "47.501804",
        "lon": "19.090731",
        "parent": "CSF01151"
    },
    {
        "id": "F01151",
        "name": "Verseny utca",
        "lat": "47.501903",
        "lon": "19.090426",
        "parent": "CSF01151"
    },
    {
        "id": "F01154",
        "name": "Keleti pályaudvar M",
        "lat": "47.501598",
        "lon": "19.084849",
        "parent": "CSF01131"
    },
    {
        "id": "F01159",
        "name": "Keleti pályaudvar M",
        "lat": "47.500521",
        "lon": "19.081930",
        "parent": "CSF01131"
    },
    {
        "id": "F01160",
        "name": "Keleti pályaudvar M",
        "lat": "47.500880",
        "lon": "19.082143",
        "parent": "CSF01131"
    },
    {
        "id": "F01161",
        "name": "Huszár utca",
        "lat": "47.499181",
        "lon": "19.077748",
        "parent": "CSF01162"
    },
    {
        "id": "F01162",
        "name": "Huszár utca",
        "lat": "47.499217",
        "lon": "19.078319",
        "parent": "CSF01162"
    },
    {
        "id": "F01163",
        "name": "Kiss József utca",
        "lat": "47.497662",
        "lon": "19.073991",
        "parent": ""
    },
    {
        "id": "F01164",
        "name": "Blaha Lujza tér M",
        "lat": "47.496772",
        "lon": "19.069836",
        "parent": "CSF01116"
    },
    {
        "id": "F01165",
        "name": "Blaha Lujza tér M",
        "lat": "47.496871",
        "lon": "19.070141",
        "parent": "CSF01116"
    },
    {
        "id": "F01166",
        "name": "Blaha Lujza tér M",
        "lat": "47.497492",
        "lon": "19.071549",
        "parent": "CSF01116"
    },
    {
        "id": "F01167",
        "name": "Blaha Lujza tér M",
        "lat": "47.497513",
        "lon": "19.070626",
        "parent": "CSF01116"
    },
    {
        "id": "F01168",
        "name": "Blaha Lujza tér M",
        "lat": "47.496772",
        "lon": "19.070659",
        "parent": "CSF01116"
    },
    {
        "id": "F01169",
        "name": "Blaha Lujza tér M",
        "lat": "47.496251",
        "lon": "19.070726",
        "parent": "CSF01116"
    },
    {
        "id": "F01170",
        "name": "Uránia",
        "lat": "47.495577",
        "lon": "19.065191",
        "parent": "CSF01171"
    },
    {
        "id": "F01171",
        "name": "Uránia",
        "lat": "47.495649",
        "lon": "19.065045",
        "parent": "CSF01171"
    },
    {
        "id": "F01172",
        "name": "Munkás utca",
        "lat": "47.500233",
        "lon": "19.079222",
        "parent": "CSF01172"
    },
    {
        "id": "F01173",
        "name": "Szövetség utca",
        "lat": "47.500316",
        "lon": "19.072970",
        "parent": ""
    },
    {
        "id": "F01174",
        "name": "Szentkirályi utca",
        "lat": "47.488993",
        "lon": "19.065773",
        "parent": "CSF01175"
    },
    {
        "id": "F01175",
        "name": "Szentkirályi utca",
        "lat": "47.489154",
        "lon": "19.066874",
        "parent": "CSF01175"
    },
    {
        "id": "F01176",
        "name": "Muzsikus cigányok parkja",
        "lat": "47.489269",
        "lon": "19.079640",
        "parent": "CSF01176"
    },
    {
        "id": "F01177",
        "name": "Muzsikus cigányok parkja",
        "lat": "47.488963",
        "lon": "19.081112",
        "parent": "CSF01176"
    },
    {
        "id": "F01178",
        "name": "Kőbányai út 21.",
        "lat": "47.488858",
        "lon": "19.095936",
        "parent": "CSF01180"
    },
    {
        "id": "F01180",
        "name": "Kőbányai út 21.",
        "lat": "47.489020",
        "lon": "19.095790",
        "parent": "CSF01180"
    },
    {
        "id": "F01181",
        "name": "Kőbányai út 21.",
        "lat": "47.488957",
        "lon": "19.095472",
        "parent": "CSF01180"
    },
    {
        "id": "F01182",
        "name": "Gumigyár",
        "lat": "47.499688",
        "lon": "19.095784",
        "parent": "CSF01182"
    },
    {
        "id": "F01183",
        "name": "Gumigyár",
        "lat": "47.499462",
        "lon": "19.096846",
        "parent": "CSF01182"
    },
    {
        "id": "F01184",
        "name": "Magdolna utca",
        "lat": "47.491928",
        "lon": "19.089011",
        "parent": "CS009702"
    },
    {
        "id": "F01185",
        "name": "Üllői út",
        "lat": "47.487202",
        "lon": "19.068254",
        "parent": ""
    },
    {
        "id": "F01186",
        "name": "Orczy tér",
        "lat": "47.489385",
        "lon": "19.090051",
        "parent": "CSF01217"
    },
    {
        "id": "F01187",
        "name": "Orczy tér",
        "lat": "47.489436",
        "lon": "19.090575",
        "parent": "CSF01217"
    },
    {
        "id": "F01188",
        "name": "Corvin-negyed",
        "lat": "47.485424",
        "lon": "19.070866",
        "parent": "CSLM3CNJ"
    },
    {
        "id": "F01189",
        "name": "Corvin-negyed",
        "lat": "47.484862",
        "lon": "19.072242",
        "parent": "CSLM3CNJ"
    },
    {
        "id": "F01190",
        "name": "Corvin-negyed M",
        "lat": "47.486467",
        "lon": "19.070356",
        "parent": "CSF01190"
    },
    {
        "id": "F01191",
        "name": "Corvin-negyed M",
        "lat": "47.485556",
        "lon": "19.069898",
        "parent": "CSF01190"
    },
    {
        "id": "F01192",
        "name": "Corvin-negyed M",
        "lat": "47.485395",
        "lon": "19.070880",
        "parent": "CSF01190"
    },
    {
        "id": "F01193",
        "name": "Corvin-negyed M",
        "lat": "47.485592",
        "lon": "19.070959",
        "parent": "CSF01190"
    },
    {
        "id": "F01194",
        "name": "Corvin-negyed M",
        "lat": "47.486159",
        "lon": "19.070098",
        "parent": "CSF01190"
    },
    {
        "id": "F01195",
        "name": "Corvin-negyed M",
        "lat": "47.485385",
        "lon": "19.069620",
        "parent": "CSF01190"
    },
    {
        "id": "F01196",
        "name": "Harminckettesek tere",
        "lat": "47.489972",
        "lon": "19.070882",
        "parent": "CSF01199"
    },
    {
        "id": "F01197",
        "name": "Harminckettesek tere",
        "lat": "47.489604",
        "lon": "19.070630",
        "parent": "CSF01199"
    },
    {
        "id": "F01198",
        "name": "Harminckettesek tere",
        "lat": "47.489999",
        "lon": "19.070564",
        "parent": "CSF01199"
    },
    {
        "id": "F01199",
        "name": "Harminckettesek tere",
        "lat": "47.490350",
        "lon": "19.070803",
        "parent": "CSF01199"
    },
    {
        "id": "F01200",
        "name": "Rákóczi tér M",
        "lat": "47.492860",
        "lon": "19.071175",
        "parent": "CSF01200"
    },
    {
        "id": "F01201",
        "name": "Rákóczi tér M",
        "lat": "47.492383",
        "lon": "19.071016",
        "parent": "CSF01200"
    },
    {
        "id": "F01202",
        "name": "Rákóczi tér M",
        "lat": "47.492722",
        "lon": "19.071274",
        "parent": "CSF01200"
    },
    {
        "id": "F01203",
        "name": "Rákóczi tér M",
        "lat": "47.492684",
        "lon": "19.070945",
        "parent": "CSF01200"
    },
    {
        "id": "F01204",
        "name": "Harminckettesek tere",
        "lat": "47.489531",
        "lon": "19.071333",
        "parent": "CSF01199"
    },
    {
        "id": "F01205",
        "name": "Harminckettesek tere",
        "lat": "47.489450",
        "lon": "19.071625",
        "parent": "CSF01199"
    },
    {
        "id": "F01207",
        "name": "Horváth Mihály tér",
        "lat": "47.489584",
        "lon": "19.076681",
        "parent": "CSF01207"
    },
    {
        "id": "F01208",
        "name": "Horváth Mihály tér",
        "lat": "47.489413",
        "lon": "19.077398",
        "parent": "CSF01207"
    },
    {
        "id": "F01209",
        "name": "Mátyás tér",
        "lat": "47.492345",
        "lon": "19.078647",
        "parent": "CSF01209"
    },
    {
        "id": "F01210",
        "name": "Mátyás tér",
        "lat": "47.492066",
        "lon": "19.079018",
        "parent": "CSF01209"
    },
    {
        "id": "F01211",
        "name": "Teleki László tér (Szerdahelyi utca)",
        "lat": "47.492407",
        "lon": "19.083531",
        "parent": "CSF01330"
    },
    {
        "id": "F01212",
        "name": "Teleki László tér (Szerdahelyi utca)",
        "lat": "47.492281",
        "lon": "19.083423",
        "parent": "CSF01330"
    },
    {
        "id": "F01213",
        "name": "Magdolna utca",
        "lat": "47.492234",
        "lon": "19.087870",
        "parent": "CS009702"
    },
    {
        "id": "F01214",
        "name": "Magdolna utca",
        "lat": "47.491920",
        "lon": "19.088003",
        "parent": "CS009702"
    },
    {
        "id": "F01215",
        "name": "Magdolna utca",
        "lat": "47.492891",
        "lon": "19.087247",
        "parent": "CS009702"
    },
    {
        "id": "F01216",
        "name": "Orczy tér",
        "lat": "47.490138",
        "lon": "19.090563",
        "parent": "CSF01217"
    },
    {
        "id": "F01217",
        "name": "Orczy tér",
        "lat": "47.490354",
        "lon": "19.090138",
        "parent": "CSF01217"
    },
    {
        "id": "F01218",
        "name": "Orczy tér",
        "lat": "47.489229",
        "lon": "19.092168",
        "parent": "CSF01217"
    },
    {
        "id": "F01219",
        "name": "Orczy tér",
        "lat": "47.489832",
        "lon": "19.090589",
        "parent": "CSF01217"
    },
    {
        "id": "F01220",
        "name": "Orczy tér",
        "lat": "47.490273",
        "lon": "19.090204",
        "parent": "CSF01217"
    },
    {
        "id": "F01221",
        "name": "Kálvária tér",
        "lat": "47.489725",
        "lon": "19.086050",
        "parent": "CSF01221"
    },
    {
        "id": "F01222",
        "name": "Kálvária tér",
        "lat": "47.489474",
        "lon": "19.086075",
        "parent": "CSF01221"
    },
    {
        "id": "F01223",
        "name": "Kálvária tér",
        "lat": "47.488916",
        "lon": "19.085134",
        "parent": "CSF01221"
    },
    {
        "id": "F01224",
        "name": "Kálvária tér",
        "lat": "47.488871",
        "lon": "19.085320",
        "parent": "CSF01221"
    },
    {
        "id": "F01225",
        "name": "Csobánc utca",
        "lat": "47.488429",
        "lon": "19.088212",
        "parent": ""
    },
    {
        "id": "F01226",
        "name": "Golgota tér",
        "lat": "47.486449",
        "lon": "19.092882",
        "parent": "CSF01227"
    },
    {
        "id": "F01227",
        "name": "Golgota tér",
        "lat": "47.486494",
        "lon": "19.092537",
        "parent": "CSF01227"
    },
    {
        "id": "F01228",
        "name": "Golgota tér",
        "lat": "47.485028",
        "lon": "19.092894",
        "parent": "CSF01227"
    },
    {
        "id": "F01229",
        "name": "Golgota tér",
        "lat": "47.485504",
        "lon": "19.092881",
        "parent": "CSF01227"
    },
    {
        "id": "F01232",
        "name": "Klinikák",
        "lat": "47.483413",
        "lon": "19.077030",
        "parent": "CSF01232"
    },
    {
        "id": "F01233",
        "name": "Klinikák",
        "lat": "47.482872",
        "lon": "19.078425",
        "parent": "CSF01232"
    },
    {
        "id": "F01234",
        "name": "Klinikák M",
        "lat": "47.482280",
        "lon": "19.080194",
        "parent": "CSF01235"
    },
    {
        "id": "F01235",
        "name": "Klinikák M",
        "lat": "47.482433",
        "lon": "19.079451",
        "parent": "CSF01235"
    },
    {
        "id": "F01236",
        "name": "Elnök utca",
        "lat": "47.481241",
        "lon": "19.093435",
        "parent": "CSF01239"
    },
    {
        "id": "F01237",
        "name": "Elnök utca",
        "lat": "47.481798",
        "lon": "19.093422",
        "parent": "CSF01239"
    },
    {
        "id": "F01239",
        "name": "Elnök utca",
        "lat": "47.482266",
        "lon": "19.093515",
        "parent": "CSF01239"
    },
    {
        "id": "F01240",
        "name": "Bláthy Ottó utca",
        "lat": "47.483577",
        "lon": "19.099620",
        "parent": "CSF01241"
    },
    {
        "id": "F01241",
        "name": "Bláthy Ottó utca",
        "lat": "47.483595",
        "lon": "19.098997",
        "parent": "CSF01241"
    },
    {
        "id": "F01245",
        "name": "Nagyvárad tér M",
        "lat": "47.479344",
        "lon": "19.089731",
        "parent": "CSF01246"
    },
    {
        "id": "F01246",
        "name": "Nagyvárad tér M",
        "lat": "47.479497",
        "lon": "19.090209",
        "parent": "CSF01246"
    },
    {
        "id": "F01247",
        "name": "Nagyvárad tér M",
        "lat": "47.479443",
        "lon": "19.090368",
        "parent": "CSF01246"
    },
    {
        "id": "F01248",
        "name": "Nagyvárad tér M",
        "lat": "47.478741",
        "lon": "19.090580",
        "parent": "CSF01246"
    },
    {
        "id": "F01249",
        "name": "Nagyvárad tér M",
        "lat": "47.478589",
        "lon": "19.088457",
        "parent": "CSF01246"
    },
    {
        "id": "F01250",
        "name": "Arena Plaza",
        "lat": "47.499699",
        "lon": "19.089880",
        "parent": "CSF01250"
    },
    {
        "id": "F01251",
        "name": "Arena Plaza",
        "lat": "47.499474",
        "lon": "19.091274",
        "parent": "CSF01250"
    },
    {
        "id": "F01252",
        "name": "Nagyvárad tér",
        "lat": "47.478999",
        "lon": "19.089768",
        "parent": "CSF01252"
    },
    {
        "id": "F01253",
        "name": "Nagyvárad tér",
        "lat": "47.478365",
        "lon": "19.091071",
        "parent": "CSF01252"
    },
    {
        "id": "F01256",
        "name": "Népliget M",
        "lat": "47.476330",
        "lon": "19.099513",
        "parent": "CS008287"
    },
    {
        "id": "F01257",
        "name": "Vajda Péter utca",
        "lat": "47.481114",
        "lon": "19.102782",
        "parent": "CSF01258"
    },
    {
        "id": "F01258",
        "name": "Vajda Péter utca (Villám utca)",
        "lat": "47.482415",
        "lon": "19.103069",
        "parent": "CSF01258"
    },
    {
        "id": "F01260",
        "name": "Vajda Péter utca (Villám utca)",
        "lat": "47.482352",
        "lon": "19.102618",
        "parent": "CSF01258"
    },
    {
        "id": "F01262",
        "name": "Vajda Péter utca",
        "lat": "47.481608",
        "lon": "19.103685",
        "parent": "CSF01258"
    },
    {
        "id": "F01263",
        "name": "Kőbányai út 31.",
        "lat": "47.487640",
        "lon": "19.103831",
        "parent": "CSF01263"
    },
    {
        "id": "F01264",
        "name": "Kőbányai út 31.",
        "lat": "47.487616",
        "lon": "19.104088",
        "parent": "CSF01263"
    },
    {
        "id": "F01265",
        "name": "Kőbányai út \/ Könyves Kálmán körút",
        "lat": "47.486568",
        "lon": "19.108328",
        "parent": "CSF01267"
    },
    {
        "id": "F01266",
        "name": "Kőbányai út \/ Könyves Kálmán körút",
        "lat": "47.486352",
        "lon": "19.108567",
        "parent": "CSF01267"
    },
    {
        "id": "F01267",
        "name": "Kőbányai út \/ Könyves Kálmán körút",
        "lat": "47.486739",
        "lon": "19.106975",
        "parent": "CSF01267"
    },
    {
        "id": "F01268",
        "name": "Kőbányai út \/ Könyves Kálmán körút",
        "lat": "47.486149",
        "lon": "19.107166",
        "parent": "CSF01267"
    },
    {
        "id": "F01269",
        "name": "Kőbányai út \/ Könyves Kálmán körút",
        "lat": "47.485948",
        "lon": "19.107544",
        "parent": "CSF01267"
    },
    {
        "id": "F01270",
        "name": "Kőbányai út \/ Könyves Kálmán körút",
        "lat": "47.486235",
        "lon": "19.108354",
        "parent": "CSF01267"
    },
    {
        "id": "F01271",
        "name": "Hidegkuti Nándor Stadion",
        "lat": "47.490103",
        "lon": "19.108252",
        "parent": "CSF01275"
    },
    {
        "id": "F01272",
        "name": "Hidegkuti Nándor Stadion",
        "lat": "47.489689",
        "lon": "19.108663",
        "parent": "CSF01275"
    },
    {
        "id": "F01273",
        "name": "Hidegkuti Nándor Stadion",
        "lat": "47.491029",
        "lon": "19.109209",
        "parent": "CSF01275"
    },
    {
        "id": "F01274",
        "name": "Hidegkuti Nándor Stadion",
        "lat": "47.490210",
        "lon": "19.109673",
        "parent": "CSF01275"
    },
    {
        "id": "F01275",
        "name": "Hidegkuti Nándor Stadion",
        "lat": "47.491164",
        "lon": "19.108967",
        "parent": "CSF01275"
    },
    {
        "id": "F01276",
        "name": "Ciprus utca",
        "lat": "47.494024",
        "lon": "19.109239",
        "parent": "CSF01276"
    },
    {
        "id": "F01277",
        "name": "Ciprus utca",
        "lat": "47.492855",
        "lon": "19.108760",
        "parent": "CSF01276"
    },
    {
        "id": "F01278",
        "name": "Asztalos Sándor út",
        "lat": "47.490104",
        "lon": "19.105028",
        "parent": "CSF01278"
    },
    {
        "id": "F01279",
        "name": "Asztalos Sándor út",
        "lat": "47.490050",
        "lon": "19.105479",
        "parent": "CSF01278"
    },
    {
        "id": "F01280",
        "name": "Salgótarjáni utca, temető",
        "lat": "47.491008",
        "lon": "19.096575",
        "parent": "CSF01280"
    },
    {
        "id": "F01281",
        "name": "Salgótarjáni utca, temető",
        "lat": "47.490918",
        "lon": "19.096774",
        "parent": "CSF01280"
    },
    {
        "id": "F01282",
        "name": "Népliget",
        "lat": "47.475479",
        "lon": "19.099291",
        "parent": "CSF01282"
    },
    {
        "id": "F01283",
        "name": "Népliget",
        "lat": "47.474913",
        "lon": "19.100672",
        "parent": "CSF01282"
    },
    {
        "id": "F01284",
        "name": "Népliget M",
        "lat": "47.474870",
        "lon": "19.100169",
        "parent": "CS008287"
    },
    {
        "id": "F01285",
        "name": "Népliget M",
        "lat": "47.475400",
        "lon": "19.099572",
        "parent": "CS008287"
    },
    {
        "id": "F01286",
        "name": "Népliget M",
        "lat": "47.475879",
        "lon": "19.098907",
        "parent": "CS008287"
    },
    {
        "id": "F01289",
        "name": "Kálvin tér",
        "lat": "47.490170",
        "lon": "19.060640",
        "parent": "CSF01289"
    },
    {
        "id": "F01290",
        "name": "Kálvin tér",
        "lat": "47.489490",
        "lon": "19.061920",
        "parent": "CSF01289"
    },
    {
        "id": "F01291",
        "name": "Blaha Lujza tér",
        "lat": "47.496643",
        "lon": "19.068847",
        "parent": "CSLM2BLA"
    },
    {
        "id": "F01292",
        "name": "Blaha Lujza tér",
        "lat": "47.497010",
        "lon": "19.070279",
        "parent": "CSLM2BLA"
    },
    {
        "id": "F01293",
        "name": "Blaha Lujza tér M",
        "lat": "47.496584",
        "lon": "19.070434",
        "parent": "CSF01116"
    },
    {
        "id": "F01294",
        "name": "Blaha Lujza tér M (Népszínház utca)",
        "lat": "47.496170",
        "lon": "19.071177",
        "parent": "CSF01116"
    },
    {
        "id": "F01295",
        "name": "Blaha Lujza tér M (Népszínház utca)",
        "lat": "47.495738",
        "lon": "19.071017",
        "parent": "CSF01116"
    },
    {
        "id": "F01296",
        "name": "Blaha Lujza tér M (Népszínház utca)",
        "lat": "47.496089",
        "lon": "19.071535",
        "parent": "CSF01116"
    },
    {
        "id": "F01297",
        "name": "Blaha Lujza tér M (Népszínház utca)",
        "lat": "47.496071",
        "lon": "19.071336",
        "parent": "CSF01116"
    },
    {
        "id": "F01298",
        "name": "Blaha Lujza tér M (Népszínház utca)",
        "lat": "47.495702",
        "lon": "19.072716",
        "parent": "CSF01116"
    },
    {
        "id": "F01300",
        "name": "II. János Pál pápa tér M",
        "lat": "47.494864",
        "lon": "19.076538",
        "parent": "CSF01300"
    },
    {
        "id": "F01301",
        "name": "II. János Pál pápa tér M",
        "lat": "47.494693",
        "lon": "19.077600",
        "parent": "CSF01300"
    },
    {
        "id": "F01302",
        "name": "II. János Pál pápa tér M",
        "lat": "47.494171",
        "lon": "19.077361",
        "parent": "CSF01300"
    },
    {
        "id": "F01303",
        "name": "II. János Pál pápa tér M",
        "lat": "47.494603",
        "lon": "19.076856",
        "parent": "CSF01300"
    },
    {
        "id": "F01307",
        "name": "Dologház utca",
        "lat": "47.496571",
        "lon": "19.083215",
        "parent": "CSF01307"
    },
    {
        "id": "F01309",
        "name": "Dologház utca",
        "lat": "47.496499",
        "lon": "19.083149",
        "parent": "CSF01307"
    },
    {
        "id": "F01310",
        "name": "Dologház utca",
        "lat": "47.496373",
        "lon": "19.083387",
        "parent": "CSF01307"
    },
    {
        "id": "F01311",
        "name": "Keleti pályaudvar M",
        "lat": "47.499360",
        "lon": "19.082540",
        "parent": "CSF01131"
    },
    {
        "id": "F01314",
        "name": "Keleti pályaudvar M",
        "lat": "47.500341",
        "lon": "19.080934",
        "parent": "CSF01131"
    },
    {
        "id": "F01316",
        "name": "Puskás Ferenc Stadion M",
        "lat": "47.499829",
        "lon": "19.103711",
        "parent": "CS008132"
    },
    {
        "id": "F01317",
        "name": "Puskás Ferenc Stadion M",
        "lat": "47.500170",
        "lon": "19.103539",
        "parent": "CS008132"
    },
    {
        "id": "F01319",
        "name": "Puskás Ferenc Stadion M",
        "lat": "47.500681",
        "lon": "19.107879",
        "parent": "CS008132"
    },
    {
        "id": "F01320",
        "name": "Puskás Ferenc Stadion M",
        "lat": "47.500789",
        "lon": "19.108331",
        "parent": "CS008132"
    },
    {
        "id": "F01321",
        "name": "Puskás Ferenc Stadion M",
        "lat": "47.500158",
        "lon": "19.109511",
        "parent": "CS008132"
    },
    {
        "id": "F01322",
        "name": "Puskás Ferenc Stadion M",
        "lat": "47.500387",
        "lon": "19.108151",
        "parent": "CS008132"
    },
    {
        "id": "F01323",
        "name": "Puskás Ferenc Stadion M",
        "lat": "47.500950",
        "lon": "19.108089",
        "parent": "CS008132"
    },
    {
        "id": "F01324",
        "name": "Puskás Ferenc Stadion",
        "lat": "47.500213",
        "lon": "19.104767",
        "parent": "CSLM2PF1"
    },
    {
        "id": "F01325",
        "name": "Puskás Ferenc Stadion",
        "lat": "47.500174",
        "lon": "19.106381",
        "parent": "CSLM2PF1"
    },
    {
        "id": "F01326",
        "name": "Hős utca",
        "lat": "47.496857",
        "lon": "19.109229",
        "parent": "CSF01326"
    },
    {
        "id": "F01327",
        "name": "Hős utca",
        "lat": "47.496813",
        "lon": "19.108764",
        "parent": "CSF01326"
    },
    {
        "id": "F01328",
        "name": "Hős utca",
        "lat": "47.496282",
        "lon": "19.109135",
        "parent": "CSF01326"
    },
    {
        "id": "F01329",
        "name": "Hős utca",
        "lat": "47.495706",
        "lon": "19.109078",
        "parent": ""
    },
    {
        "id": "F01330",
        "name": "Teleki László tér",
        "lat": "47.493640",
        "lon": "19.081873",
        "parent": "CSF01330"
    },
    {
        "id": "F01331",
        "name": "Teleki László tér",
        "lat": "47.493567",
        "lon": "19.082828",
        "parent": "CSF01330"
    },
    {
        "id": "F01332",
        "name": "Kőris utca",
        "lat": "47.487260",
        "lon": "19.088968",
        "parent": "CSF01332"
    },
    {
        "id": "F01333",
        "name": "Kőris utca",
        "lat": "47.487179",
        "lon": "19.089499",
        "parent": "CSF01332"
    },
    {
        "id": "F01334",
        "name": "Orczy út",
        "lat": "47.488932",
        "lon": "19.091292",
        "parent": "CSF01217"
    },
    {
        "id": "F01335",
        "name": "Keleti pályaudvar",
        "lat": "47.499778",
        "lon": "19.081282",
        "parent": "CSLMXKPB"
    },
    {
        "id": "F01336",
        "name": "Keleti pályaudvar",
        "lat": "47.499683",
        "lon": "19.082881",
        "parent": "CSLMXKPB"
    },
    {
        "id": "F01337",
        "name": "Czuczor utca",
        "lat": "47.484976",
        "lon": "19.062407",
        "parent": ""
    },
    {
        "id": "F01339",
        "name": "Ráday utca",
        "lat": "47.485575",
        "lon": "19.065944",
        "parent": ""
    },
    {
        "id": "F01340",
        "name": "Közraktár utca",
        "lat": "47.483905",
        "lon": "19.062460",
        "parent": ""
    },
    {
        "id": "F01341",
        "name": "Koppány utca",
        "lat": "47.466196",
        "lon": "19.081205",
        "parent": "CSF01341"
    },
    {
        "id": "F01342",
        "name": "Koppány utca",
        "lat": "47.465989",
        "lon": "19.081497",
        "parent": "CSF01341"
    },
    {
        "id": "F01343",
        "name": "Zsil utca",
        "lat": "47.482949",
        "lon": "19.062719",
        "parent": "CSF01346"
    },
    {
        "id": "F01345",
        "name": "Lónyay utca",
        "lat": "47.482436",
        "lon": "19.064762",
        "parent": ""
    },
    {
        "id": "F01346",
        "name": "Zsil utca",
        "lat": "47.483003",
        "lon": "19.062520",
        "parent": "CSF01346"
    },
    {
        "id": "F01347",
        "name": "Timót utca",
        "lat": "47.447304",
        "lon": "19.090754",
        "parent": "CSF01348"
    },
    {
        "id": "F01348",
        "name": "Timót utca",
        "lat": "47.448573",
        "lon": "19.090158",
        "parent": "CSF01348"
    },
    {
        "id": "F01349",
        "name": "Kén utca",
        "lat": "47.457073",
        "lon": "19.089131",
        "parent": "CSF01350"
    },
    {
        "id": "F01350",
        "name": "Kén utca",
        "lat": "47.457325",
        "lon": "19.089104",
        "parent": "CSF01350"
    },
    {
        "id": "F01351",
        "name": "Beöthy utca H",
        "lat": "47.460367",
        "lon": "19.082409",
        "parent": "CSF01352"
    },
    {
        "id": "F01352",
        "name": "Beöthy utca H",
        "lat": "47.460394",
        "lon": "19.082210",
        "parent": "CSF01352"
    },
    {
        "id": "F01353",
        "name": "Beöthy utca",
        "lat": "47.460790",
        "lon": "19.081679",
        "parent": "CSF01353"
    },
    {
        "id": "F01354",
        "name": "Beöthy utca",
        "lat": "47.460556",
        "lon": "19.081958",
        "parent": "CSF01353"
    },
    {
        "id": "F01355",
        "name": "Földváry utca",
        "lat": "47.462797",
        "lon": "19.080195",
        "parent": ""
    },
    {
        "id": "F01356",
        "name": "Koppány utca",
        "lat": "47.465406",
        "lon": "19.078247",
        "parent": ""
    },
    {
        "id": "F01357",
        "name": "Fegyvergyár utca",
        "lat": "47.449069",
        "lon": "19.093613",
        "parent": "CSF01357"
    },
    {
        "id": "F01358",
        "name": "Fegyvergyár utca",
        "lat": "47.448340",
        "lon": "19.094209",
        "parent": "CSF01357"
    },
    {
        "id": "F01359",
        "name": "Timót utca H",
        "lat": "47.448608",
        "lon": "19.090331",
        "parent": "CSF01359"
    },
    {
        "id": "F01360",
        "name": "Timót utca H",
        "lat": "47.447394",
        "lon": "19.090860",
        "parent": "CSF01359"
    },
    {
        "id": "F01363",
        "name": "Börzsöny utca",
        "lat": "47.466966",
        "lon": "19.112033",
        "parent": "CSF01363"
    },
    {
        "id": "F01364",
        "name": "Börzsöny utca",
        "lat": "47.466777",
        "lon": "19.112033",
        "parent": "CSF01363"
    },
    {
        "id": "F01365",
        "name": "Merényi Gusztáv Kórház",
        "lat": "47.467925",
        "lon": "19.101131",
        "parent": "CSF01477"
    },
    {
        "id": "F01366",
        "name": "Epreserdő utca",
        "lat": "47.459725",
        "lon": "19.111706",
        "parent": "CSF01367"
    },
    {
        "id": "F01367",
        "name": "Epreserdő utca",
        "lat": "47.459761",
        "lon": "19.111600",
        "parent": "CSF01367"
    },
    {
        "id": "F01368",
        "name": "Aranyvirág sétány",
        "lat": "47.467714",
        "lon": "19.109845",
        "parent": "CSF01368"
    },
    {
        "id": "F01369",
        "name": "Aranyvirág sétány",
        "lat": "47.467579",
        "lon": "19.109195",
        "parent": "CSF01368"
    },
    {
        "id": "F01370",
        "name": "Nagykőrösi út \/ Határ út",
        "lat": "47.454607",
        "lon": "19.113066",
        "parent": "CS008377"
    },
    {
        "id": "F01371",
        "name": "Nagykőrösi út \/ Határ út",
        "lat": "47.454294",
        "lon": "19.114306",
        "parent": "CS008377"
    },
    {
        "id": "F01372",
        "name": "Boráros tér H",
        "lat": "47.480708",
        "lon": "19.067641",
        "parent": "CSF01516"
    },
    {
        "id": "F01373",
        "name": "Boráros tér H",
        "lat": "47.480118",
        "lon": "19.066108",
        "parent": "CSF01516"
    },
    {
        "id": "F01374",
        "name": "Boráros tér H",
        "lat": "47.480385",
        "lon": "19.066659",
        "parent": "CSF01516"
    },
    {
        "id": "F01375",
        "name": "Boráros tér H",
        "lat": "47.480260",
        "lon": "19.066061",
        "parent": "CSF01516"
    },
    {
        "id": "F01376",
        "name": "Boráros tér H",
        "lat": "47.479611",
        "lon": "19.067256",
        "parent": "CSF01516"
    },
    {
        "id": "F01378",
        "name": "Mester utca \/ Ferenc körút",
        "lat": "47.482210",
        "lon": "19.068504",
        "parent": "CSF01380"
    },
    {
        "id": "F01379",
        "name": "Mester utca \/ Ferenc körút",
        "lat": "47.481652",
        "lon": "19.068663",
        "parent": "CSF01380"
    },
    {
        "id": "F01380",
        "name": "Mester utca \/ Ferenc körút",
        "lat": "47.482777",
        "lon": "19.068822",
        "parent": "CSF01380"
    },
    {
        "id": "F01381",
        "name": "Bokréta utca",
        "lat": "47.479520",
        "lon": "19.072218",
        "parent": "CSF01381"
    },
    {
        "id": "F01382",
        "name": "Bokréta utca",
        "lat": "47.479133",
        "lon": "19.072616",
        "parent": "CSF01381"
    },
    {
        "id": "F01384",
        "name": "Haller utca \/ Soroksári út",
        "lat": "47.474780",
        "lon": "19.070027",
        "parent": "CSF01386"
    },
    {
        "id": "F01386",
        "name": "Haller utca \/ Soroksári út",
        "lat": "47.475617",
        "lon": "19.069695",
        "parent": "CSF01386"
    },
    {
        "id": "F01387",
        "name": "Haller utca \/ Soroksári út",
        "lat": "47.474951",
        "lon": "19.070385",
        "parent": "CSF01386"
    },
    {
        "id": "F01388",
        "name": "Haller utca \/ Soroksári út",
        "lat": "47.475122",
        "lon": "19.070743",
        "parent": "CSF01386"
    },
    {
        "id": "F01390",
        "name": "Haller utca \/ Mester utca",
        "lat": "47.476038",
        "lon": "19.076342",
        "parent": "CSF01395"
    },
    {
        "id": "F01391",
        "name": "Haller utca \/ Mester utca",
        "lat": "47.476083",
        "lon": "19.076793",
        "parent": "CSF01395"
    },
    {
        "id": "F01392",
        "name": "Haller utca \/ Mester utca",
        "lat": "47.476065",
        "lon": "19.075971",
        "parent": "CSF01395"
    },
    {
        "id": "F01393",
        "name": "Haller utca \/ Mester utca",
        "lat": "47.475660",
        "lon": "19.077775",
        "parent": "CSF01395"
    },
    {
        "id": "F01394",
        "name": "Haller utca \/ Mester utca",
        "lat": "47.475906",
        "lon": "19.077636",
        "parent": "CSF01395"
    },
    {
        "id": "F01395",
        "name": "Haller utca \/ Mester utca",
        "lat": "47.476235",
        "lon": "19.078532",
        "parent": "CSF01395"
    },
    {
        "id": "F01396",
        "name": "Millenniumi Kulturális Központ",
        "lat": "47.470993",
        "lon": "19.073235",
        "parent": "CS008240"
    },
    {
        "id": "F01397",
        "name": "Millenniumi Kulturális Központ",
        "lat": "47.471272",
        "lon": "19.073037",
        "parent": "CS008240"
    },
    {
        "id": "F01398",
        "name": "Vágóhíd utca",
        "lat": "47.473438",
        "lon": "19.079923",
        "parent": "CS009146"
    },
    {
        "id": "F01399",
        "name": "Vágóhíd utca",
        "lat": "47.473168",
        "lon": "19.080294",
        "parent": "CS009146"
    },
    {
        "id": "F01400",
        "name": "Török Pál utca",
        "lat": "47.487791",
        "lon": "19.061134",
        "parent": ""
    },
    {
        "id": "F01401",
        "name": "Közvágóhíd H",
        "lat": "47.467574",
        "lon": "19.075887",
        "parent": "CSF01527"
    },
    {
        "id": "F01402",
        "name": "Közvágóhíd H",
        "lat": "47.467565",
        "lon": "19.075847",
        "parent": "CSF01527"
    },
    {
        "id": "F01403",
        "name": "Közvágóhíd H",
        "lat": "47.467925",
        "lon": "19.075781",
        "parent": "CSF01527"
    },
    {
        "id": "F01404",
        "name": "Közvágóhíd H",
        "lat": "47.467682",
        "lon": "19.076497",
        "parent": "CSF01527"
    },
    {
        "id": "F01405",
        "name": "Közvágóhíd",
        "lat": "47.466314",
        "lon": "19.077213",
        "parent": ""
    },
    {
        "id": "F01407",
        "name": "Közvágóhíd H (Kvassay Jenő út)",
        "lat": "47.466252",
        "lon": "19.076231",
        "parent": "CSF01527"
    },
    {
        "id": "F01408",
        "name": "József Attila ltp., Távíró utca",
        "lat": "47.460632",
        "lon": "19.114891",
        "parent": ""
    },
    {
        "id": "F01411",
        "name": "Helyi kikötő út",
        "lat": "47.463167",
        "lon": "19.072701",
        "parent": "CSF01412"
    },
    {
        "id": "F01412",
        "name": "Helyi kikötő út",
        "lat": "47.463464",
        "lon": "19.073086",
        "parent": "CSF01412"
    },
    {
        "id": "F01413",
        "name": "Magyar Aszfalt",
        "lat": "47.459718",
        "lon": "19.087873",
        "parent": "CSF01414"
    },
    {
        "id": "F01414",
        "name": "Magyar Aszfalt",
        "lat": "47.459862",
        "lon": "19.087674",
        "parent": "CSF01414"
    },
    {
        "id": "F01415",
        "name": "Kén utca",
        "lat": "47.455068",
        "lon": "19.086397",
        "parent": "CSF01415"
    },
    {
        "id": "F01416",
        "name": "Kén utca",
        "lat": "47.454744",
        "lon": "19.086715",
        "parent": "CSF01415"
    },
    {
        "id": "F01417",
        "name": "Kén utca H (Illatos út)",
        "lat": "47.454861",
        "lon": "19.087524",
        "parent": "CS048474"
    },
    {
        "id": "F01418",
        "name": "Kén utca H",
        "lat": "47.455113",
        "lon": "19.086543",
        "parent": "CS048474"
    },
    {
        "id": "F01419",
        "name": "Kén utca H",
        "lat": "47.454285",
        "lon": "19.087192",
        "parent": "CS048474"
    },
    {
        "id": "F01420",
        "name": "Kén utca H (Illatos út)",
        "lat": "47.454681",
        "lon": "19.087948",
        "parent": "CS048474"
    },
    {
        "id": "F01421",
        "name": "Illatos út",
        "lat": "47.454698",
        "lon": "19.090495",
        "parent": "CS048474"
    },
    {
        "id": "F01422",
        "name": "Gubacsi út",
        "lat": "47.454365",
        "lon": "19.090136",
        "parent": "CSF01422"
    },
    {
        "id": "F01423",
        "name": "Gubacsi út",
        "lat": "47.453888",
        "lon": "19.091966",
        "parent": "CSF01422"
    },
    {
        "id": "F01424",
        "name": "Illatos út",
        "lat": "47.453645",
        "lon": "19.091263",
        "parent": ""
    },
    {
        "id": "F01425",
        "name": "Külső Mester utca",
        "lat": "47.454282",
        "lon": "19.096250",
        "parent": "CSF01426"
    },
    {
        "id": "F01426",
        "name": "Külső Mester utca",
        "lat": "47.454398",
        "lon": "19.097430",
        "parent": "CSF01426"
    },
    {
        "id": "F01427",
        "name": "Timót utca",
        "lat": "47.452107",
        "lon": "19.091938",
        "parent": "CSF01427"
    },
    {
        "id": "F01428",
        "name": "Timót utca",
        "lat": "47.451855",
        "lon": "19.092230",
        "parent": "CSF01427"
    },
    {
        "id": "F01429",
        "name": "Soroksári út 150. (Timót utca)",
        "lat": "47.451631",
        "lon": "19.088649",
        "parent": "CSF01429"
    },
    {
        "id": "F01430",
        "name": "Soroksári út 150. (Timót utca)",
        "lat": "47.450885",
        "lon": "19.088914",
        "parent": "CSF01429"
    },
    {
        "id": "F01431",
        "name": "Szabadkai út",
        "lat": "47.444272",
        "lon": "19.092754",
        "parent": "CSF01431"
    },
    {
        "id": "F01432",
        "name": "Szabadkai út",
        "lat": "47.443525",
        "lon": "19.092952",
        "parent": "CSF01431"
    },
    {
        "id": "F01434",
        "name": "Gubacsi út \/ Határ út",
        "lat": "47.444414",
        "lon": "19.097235",
        "parent": "CSF01435"
    },
    {
        "id": "F01435",
        "name": "Gubacsi út \/ Határ út",
        "lat": "47.444558",
        "lon": "19.097501",
        "parent": "CSF01435"
    },
    {
        "id": "F01436",
        "name": "Gubacsi út \/ Határ út",
        "lat": "47.444108",
        "lon": "19.096983",
        "parent": "CSF01435"
    },
    {
        "id": "F01437",
        "name": "Gubacsi út \/ Határ út",
        "lat": "47.444306",
        "lon": "19.096533",
        "parent": "CSF01435"
    },
    {
        "id": "F01438",
        "name": "Gubacsi út \/ Határ út",
        "lat": "47.444504",
        "lon": "19.097739",
        "parent": "CSF01435"
    },
    {
        "id": "F01439",
        "name": "Gubacsi út \/ Határ út",
        "lat": "47.443632",
        "lon": "19.096532",
        "parent": "CSF01435"
    },
    {
        "id": "F01440",
        "name": "Határ út",
        "lat": "47.442076",
        "lon": "19.094953",
        "parent": ""
    },
    {
        "id": "F01441",
        "name": "Baross utca",
        "lat": "47.441618",
        "lon": "19.095112",
        "parent": ""
    },
    {
        "id": "F01442",
        "name": "Ősz utca",
        "lat": "47.446050",
        "lon": "19.100220",
        "parent": "CSF01443"
    },
    {
        "id": "F01443",
        "name": "Ősz utca",
        "lat": "47.446113",
        "lon": "19.100194",
        "parent": "CSF01443"
    },
    {
        "id": "F01444",
        "name": "Jókai Mór utca \/ Határ út",
        "lat": "47.448980",
        "lon": "19.104480",
        "parent": "CSF01444"
    },
    {
        "id": "F01445",
        "name": "Jókai Mór utca \/ Határ út",
        "lat": "47.448657",
        "lon": "19.104135",
        "parent": "CSF01444"
    },
    {
        "id": "F01446",
        "name": "Jókai Mór utca \/ Határ út",
        "lat": "47.448629",
        "lon": "19.104957",
        "parent": "CSF01444"
    },
    {
        "id": "F01447",
        "name": "Mártírok útja \/ Határ út",
        "lat": "47.452039",
        "lon": "19.109095",
        "parent": "CSF01447"
    },
    {
        "id": "F01448",
        "name": "Mártírok útja \/ Határ út",
        "lat": "47.451910",
        "lon": "19.108992",
        "parent": "CSF01447"
    },
    {
        "id": "F01449",
        "name": "Mártírok útja \/ Határ út",
        "lat": "47.450866",
        "lon": "19.110635",
        "parent": "CSF01447"
    },
    {
        "id": "F01450",
        "name": "Mártírok útja \/ Határ út",
        "lat": "47.451811",
        "lon": "19.109482",
        "parent": "CSF01447"
    },
    {
        "id": "F01451",
        "name": "Nagykőrösi út \/ Határ út",
        "lat": "47.455469",
        "lon": "19.114632",
        "parent": "CS008377"
    },
    {
        "id": "F01452",
        "name": "Nagykőrösi út \/ Határ út",
        "lat": "47.455443",
        "lon": "19.114062",
        "parent": "CS008377"
    },
    {
        "id": "F01453",
        "name": "Nagykőrösi út \/ Határ út",
        "lat": "47.455740",
        "lon": "19.113664",
        "parent": "CS008377"
    },
    {
        "id": "F01454",
        "name": "Nagykőrösi út \/ Határ út",
        "lat": "47.455568",
        "lon": "19.114407",
        "parent": "CS008377"
    },
    {
        "id": "F01455",
        "name": "Mészáros Lőrinc utca",
        "lat": "47.459675",
        "lon": "19.120844",
        "parent": "CSF01458"
    },
    {
        "id": "F01456",
        "name": "Mészáros Lőrinc utca",
        "lat": "47.459289",
        "lon": "19.120075",
        "parent": "CSF01458"
    },
    {
        "id": "F01457",
        "name": "Mészáros Lőrinc utca",
        "lat": "47.459585",
        "lon": "19.120261",
        "parent": "CSF01458"
    },
    {
        "id": "F01458",
        "name": "Mészáros Lőrinc utca",
        "lat": "47.459756",
        "lon": "19.120380",
        "parent": "CSF01458"
    },
    {
        "id": "F01459",
        "name": "Határ út M",
        "lat": "47.464432",
        "lon": "19.126299",
        "parent": "CSF03930"
    },
    {
        "id": "F01460",
        "name": "Határ út M",
        "lat": "47.464765",
        "lon": "19.125980",
        "parent": "CSF03930"
    },
    {
        "id": "F01461",
        "name": "Határ út M",
        "lat": "47.465054",
        "lon": "19.126164",
        "parent": "CSF03930"
    },
    {
        "id": "F01462",
        "name": "Határ út M",
        "lat": "47.465042",
        "lon": "19.126051",
        "parent": "CSF03930"
    },
    {
        "id": "F01463",
        "name": "Kőér utcai uszoda",
        "lat": "47.466517",
        "lon": "19.126213",
        "parent": "CSF01464"
    },
    {
        "id": "F01464",
        "name": "Kőér utcai uszoda",
        "lat": "47.466644",
        "lon": "19.126500",
        "parent": "CSF01464"
    },
    {
        "id": "F01465",
        "name": "Pöttyös utca M",
        "lat": "47.468798",
        "lon": "19.117434",
        "parent": "CSF01465"
    },
    {
        "id": "F01466",
        "name": "Pöttyös utca M",
        "lat": "47.468789",
        "lon": "19.116784",
        "parent": "CSF01465"
    },
    {
        "id": "F01467",
        "name": "Friss utca",
        "lat": "47.463437",
        "lon": "19.117892",
        "parent": ""
    },
    {
        "id": "F01468",
        "name": "Valéria tér",
        "lat": "47.464994",
        "lon": "19.116050",
        "parent": "CS044128"
    },
    {
        "id": "F01469",
        "name": "Valéria tér",
        "lat": "47.465400",
        "lon": "19.114326",
        "parent": "CS044128"
    },
    {
        "id": "F01470",
        "name": "Lobogó utca",
        "lat": "47.462107",
        "lon": "19.114892",
        "parent": "CSF01470"
    },
    {
        "id": "F01471",
        "name": "Lobogó utca",
        "lat": "47.461711",
        "lon": "19.115515",
        "parent": "CSF01470"
    },
    {
        "id": "F01474",
        "name": "Táblás utca",
        "lat": "47.455349",
        "lon": "19.103280",
        "parent": "CSF01475"
    },
    {
        "id": "F01475",
        "name": "Táblás utca",
        "lat": "47.455528",
        "lon": "19.104964",
        "parent": "CSF01475"
    },
    {
        "id": "F01476",
        "name": "Aszódi utca",
        "lat": "47.463671",
        "lon": "19.100808",
        "parent": "CSF01476"
    },
    {
        "id": "F01477",
        "name": "Merényi Gusztáv Kórház",
        "lat": "47.468168",
        "lon": "19.101011",
        "parent": "CSF01477"
    },
    {
        "id": "F01478",
        "name": "Füleki utca",
        "lat": "47.466296",
        "lon": "19.102243",
        "parent": ""
    },
    {
        "id": "F01479",
        "name": "Gyáli út",
        "lat": "47.464803",
        "lon": "19.103913",
        "parent": "CS008589"
    },
    {
        "id": "F01481",
        "name": "Közterületfenntartó Zrt.",
        "lat": "47.468488",
        "lon": "19.108095",
        "parent": "CSF01481"
    },
    {
        "id": "F01482",
        "name": "Közterületfenntartó Zrt.",
        "lat": "47.467770",
        "lon": "19.106503",
        "parent": "CSF01481"
    },
    {
        "id": "F01483",
        "name": "Közterületfenntartó Zrt.",
        "lat": "47.468462",
        "lon": "19.107286",
        "parent": "CSF01481"
    },
    {
        "id": "F01484",
        "name": "Közterületfenntartó Zrt.",
        "lat": "47.467832",
        "lon": "19.107657",
        "parent": "CSF01481"
    },
    {
        "id": "F01485",
        "name": "Közterületfenntartó Zrt.",
        "lat": "47.468201",
        "lon": "19.107617",
        "parent": "CSF01481"
    },
    {
        "id": "F01486",
        "name": "Közterületfenntartó Zrt.",
        "lat": "47.468083",
        "lon": "19.108281",
        "parent": "CSF01481"
    },
    {
        "id": "F01487",
        "name": "Ifjúmunkás utca",
        "lat": "47.468172",
        "lon": "19.111027",
        "parent": "CSF01488"
    },
    {
        "id": "F01488",
        "name": "Ifjúmunkás utca",
        "lat": "47.468433",
        "lon": "19.110921",
        "parent": "CSF01488"
    },
    {
        "id": "F01489",
        "name": "Ecseri út M",
        "lat": "47.470421",
        "lon": "19.110976",
        "parent": "CSF01495"
    },
    {
        "id": "F01490",
        "name": "Ecseri út M",
        "lat": "47.470511",
        "lon": "19.110751",
        "parent": "CSF01495"
    },
    {
        "id": "F01491",
        "name": "Ecseri út M",
        "lat": "47.471087",
        "lon": "19.109120",
        "parent": "CSF01495"
    },
    {
        "id": "F01492",
        "name": "Péceli utca",
        "lat": "47.469509",
        "lon": "19.099381",
        "parent": ""
    },
    {
        "id": "F01493",
        "name": "Ecseri út",
        "lat": "47.471127",
        "lon": "19.110331",
        "parent": "CSF01493"
    },
    {
        "id": "F01494",
        "name": "Ecseri út",
        "lat": "47.470529",
        "lon": "19.111646",
        "parent": "CSF01493"
    },
    {
        "id": "F01495",
        "name": "Ecseri út M",
        "lat": "47.471213",
        "lon": "19.109319",
        "parent": "CSF01495"
    },
    {
        "id": "F01496",
        "name": "Ecseri út M",
        "lat": "47.471104",
        "lon": "19.111322",
        "parent": "CSF01495"
    },
    {
        "id": "F01497",
        "name": "Ecseri út M",
        "lat": "47.470906",
        "lon": "19.111109",
        "parent": "CSF01495"
    },
    {
        "id": "F01498",
        "name": "Albert Flórián út",
        "lat": "47.472390",
        "lon": "19.095534",
        "parent": "CSF01500"
    },
    {
        "id": "F01499",
        "name": "Albert Flórián út",
        "lat": "47.472723",
        "lon": "19.096118",
        "parent": "CSF01500"
    },
    {
        "id": "F01500",
        "name": "Albert Flórián út",
        "lat": "47.473747",
        "lon": "19.096745",
        "parent": "CSF01500"
    },
    {
        "id": "F01501",
        "name": "Albert Flórián út",
        "lat": "47.473613",
        "lon": "19.097127",
        "parent": "CSF01500"
    },
    {
        "id": "F01502",
        "name": "Ferencváros vasútállomás",
        "lat": "47.470305",
        "lon": "19.089313",
        "parent": "CSF01504"
    },
    {
        "id": "F01503",
        "name": "Ferencváros vasútállomás",
        "lat": "47.470172",
        "lon": "19.088529",
        "parent": "CSF01504"
    },
    {
        "id": "F01504",
        "name": "Ferencváros vasútállomás",
        "lat": "47.470718",
        "lon": "19.090136",
        "parent": "CSF01504"
    },
    {
        "id": "F01505",
        "name": "Ferencváros vasútállomás",
        "lat": "47.470062",
        "lon": "19.088676",
        "parent": "CSF01504"
    },
    {
        "id": "F01506",
        "name": "Mester utca \/ Könyves Kálmán körút",
        "lat": "47.469821",
        "lon": "19.082985",
        "parent": "CSF01507"
    },
    {
        "id": "F01507",
        "name": "Mester utca \/ Könyves Kálmán körút",
        "lat": "47.470226",
        "lon": "19.082760",
        "parent": "CSF01507"
    },
    {
        "id": "F01508",
        "name": "Mester utca \/ Könyves Kálmán körút",
        "lat": "47.469910",
        "lon": "19.084405",
        "parent": "CSF01507"
    },
    {
        "id": "F01509",
        "name": "Mester utca \/ Könyves Kálmán körút",
        "lat": "47.469730",
        "lon": "19.085041",
        "parent": "CSF01507"
    },
    {
        "id": "F01510",
        "name": "Balázs Béla utca",
        "lat": "47.477053",
        "lon": "19.082711",
        "parent": "CSF01510"
    },
    {
        "id": "F01511",
        "name": "Balázs Béla utca",
        "lat": "47.476972",
        "lon": "19.082618",
        "parent": "CSF01510"
    },
    {
        "id": "F01512",
        "name": "Balázs Béla utca",
        "lat": "47.476819",
        "lon": "19.081915",
        "parent": "CSF01510"
    },
    {
        "id": "F01513",
        "name": "Balázs Béla utca",
        "lat": "47.476702",
        "lon": "19.081703",
        "parent": "CSF01510"
    },
    {
        "id": "F01514",
        "name": "Boráros tér H",
        "lat": "47.479953",
        "lon": "19.067495",
        "parent": "CSF01516"
    },
    {
        "id": "F01515",
        "name": "Boráros tér H",
        "lat": "47.479593",
        "lon": "19.067932",
        "parent": "CSF01516"
    },
    {
        "id": "F01516",
        "name": "Boráros tér H (Közraktár utca)",
        "lat": "47.481212",
        "lon": "19.065292",
        "parent": "CSF01516"
    },
    {
        "id": "F01518",
        "name": "Boráros tér H",
        "lat": "47.480043",
        "lon": "19.066075",
        "parent": "CSF01516"
    },
    {
        "id": "F01519",
        "name": "Boráros tér H",
        "lat": "47.479773",
        "lon": "19.066234",
        "parent": "CSF01516"
    },
    {
        "id": "F01520",
        "name": "Boráros tér",
        "lat": "47.479179",
        "lon": "19.066433",
        "parent": ""
    },
    {
        "id": "F01525",
        "name": "Csengettyű utca",
        "lat": "47.463540",
        "lon": "19.109522",
        "parent": "CSF01525"
    },
    {
        "id": "F01526",
        "name": "Csengettyű utca",
        "lat": "47.463486",
        "lon": "19.109642",
        "parent": "CSF01525"
    },
    {
        "id": "F01527",
        "name": "Közvágóhíd H",
        "lat": "47.468933",
        "lon": "19.073752",
        "parent": "CSF01527"
    },
    {
        "id": "F01530",
        "name": "Népliget M",
        "lat": "47.475690",
        "lon": "19.099862",
        "parent": "CS008287"
    },
    {
        "id": "F01531",
        "name": "Balkán utca",
        "lat": "47.474052",
        "lon": "19.116035",
        "parent": "CSF01531"
    },
    {
        "id": "F01532",
        "name": "Balkán utca",
        "lat": "47.473827",
        "lon": "19.115796",
        "parent": "CSF01531"
    },
    {
        "id": "F01533",
        "name": "Sporttelep",
        "lat": "47.478759",
        "lon": "19.113596",
        "parent": "CSF01534"
    },
    {
        "id": "F01534",
        "name": "Sporttelep",
        "lat": "47.478974",
        "lon": "19.112751",
        "parent": "CSF01534"
    },
    {
        "id": "F01535",
        "name": "Fertő utca \/ Bihari utca",
        "lat": "47.476056",
        "lon": "19.119142",
        "parent": "CSF01536"
    },
    {
        "id": "F01536",
        "name": "Fertő utca \/ Bihari utca",
        "lat": "47.476263",
        "lon": "19.118453",
        "parent": "CSF01536"
    },
    {
        "id": "F01537",
        "name": "Fertő utca \/ Bihari utca",
        "lat": "47.475282",
        "lon": "19.120017",
        "parent": "CSF01536"
    },
    {
        "id": "F01538",
        "name": "Fertő utca \/ Bihari utca",
        "lat": "47.475822",
        "lon": "19.118863",
        "parent": "CSF01536"
    },
    {
        "id": "F01539",
        "name": "Basa utca",
        "lat": "47.470654",
        "lon": "19.126471",
        "parent": "CSF01539"
    },
    {
        "id": "F01540",
        "name": "Basa utca",
        "lat": "47.470321",
        "lon": "19.126762",
        "parent": "CSF01539"
    },
    {
        "id": "F01541",
        "name": "Határ út",
        "lat": "47.466285",
        "lon": "19.124821",
        "parent": "CSF01541"
    },
    {
        "id": "F01542",
        "name": "Határ út",
        "lat": "47.465749",
        "lon": "19.126228",
        "parent": "CSF01541"
    },
    {
        "id": "F01543",
        "name": "Kőbánya-Kispest",
        "lat": "47.463930",
        "lon": "19.147412",
        "parent": "CSF01543"
    },
    {
        "id": "F01544",
        "name": "Kőbánya-Kispest",
        "lat": "47.463443",
        "lon": "19.148764",
        "parent": "CSF01543"
    },
    {
        "id": "F01545",
        "name": "Felsőcsatári út",
        "lat": "47.457367",
        "lon": "19.177790",
        "parent": "CS008692"
    },
    {
        "id": "F01546",
        "name": "Hangár utca",
        "lat": "47.461805",
        "lon": "19.166846",
        "parent": "CSF01587"
    },
    {
        "id": "F01547",
        "name": "Gyömrői út 105.",
        "lat": "47.463166",
        "lon": "19.163519",
        "parent": "CSF01548"
    },
    {
        "id": "F01548",
        "name": "Gyömrői út 132.",
        "lat": "47.463654",
        "lon": "19.161982",
        "parent": "CSF01548"
    },
    {
        "id": "F01549",
        "name": "Árpád utca",
        "lat": "47.463583",
        "lon": "19.177912",
        "parent": "CSF01550"
    },
    {
        "id": "F01550",
        "name": "Árpád utca",
        "lat": "47.464116",
        "lon": "19.178130",
        "parent": "CSF01550"
    },
    {
        "id": "F01551",
        "name": "Álmos utca",
        "lat": "47.467639",
        "lon": "19.178598",
        "parent": "CSF01551"
    },
    {
        "id": "F01552",
        "name": "Álmos utca",
        "lat": "47.467009",
        "lon": "19.178769",
        "parent": "CSF01551"
    },
    {
        "id": "F01553",
        "name": "Bogáncsvirág utca",
        "lat": "47.483628",
        "lon": "19.196245",
        "parent": ""
    },
    {
        "id": "F01554",
        "name": "Csillagvirág utca",
        "lat": "47.483538",
        "lon": "19.196298",
        "parent": ""
    },
    {
        "id": "F01555",
        "name": "Kőbánya felső vasútállomás",
        "lat": "47.492542",
        "lon": "19.133630",
        "parent": "CSF01555"
    },
    {
        "id": "F01556",
        "name": "IV. kapu",
        "lat": "47.492041",
        "lon": "19.130524",
        "parent": "CSF01556"
    },
    {
        "id": "F01557",
        "name": "II. kapu",
        "lat": "47.491596",
        "lon": "19.123808",
        "parent": ""
    },
    {
        "id": "F01558",
        "name": "Vásárközpont, főbejárat",
        "lat": "47.493100",
        "lon": "19.121036",
        "parent": ""
    },
    {
        "id": "F01559",
        "name": "Pongrácz úti lakótelep",
        "lat": "47.490806",
        "lon": "19.120887",
        "parent": "CSF01857"
    },
    {
        "id": "F01560",
        "name": "Pongrácz úti lakótelep",
        "lat": "47.490392",
        "lon": "19.121378",
        "parent": "CSF01857"
    },
    {
        "id": "F01561",
        "name": "Őrház",
        "lat": "47.489464",
        "lon": "19.124508",
        "parent": "CSF01562"
    },
    {
        "id": "F01562",
        "name": "Őrház",
        "lat": "47.489499",
        "lon": "19.124959",
        "parent": "CSF01562"
    },
    {
        "id": "F01563",
        "name": "Egészségház",
        "lat": "47.484126",
        "lon": "19.116619",
        "parent": "CSF01563"
    },
    {
        "id": "F01564",
        "name": "Egészségház",
        "lat": "47.483747",
        "lon": "19.117534",
        "parent": "CSF01563"
    },
    {
        "id": "F01565",
        "name": "Egészségház",
        "lat": "47.484089",
        "lon": "19.117322",
        "parent": "CSF01563"
    },
    {
        "id": "F01566",
        "name": "Egészségház",
        "lat": "47.484071",
        "lon": "19.117202",
        "parent": "CSF01563"
    },
    {
        "id": "F01567",
        "name": "Mázsa utca",
        "lat": "47.483195",
        "lon": "19.123384",
        "parent": "CSF01567"
    },
    {
        "id": "F01568",
        "name": "Mázsa utca",
        "lat": "47.483105",
        "lon": "19.123278",
        "parent": "CSF01567"
    },
    {
        "id": "F01569",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.483409",
        "lon": "19.126463",
        "parent": "CSF01800"
    },
    {
        "id": "F01570",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.483499",
        "lon": "19.126251",
        "parent": "CSF01800"
    },
    {
        "id": "F01571",
        "name": "Kőbánya alsó vasútállomás (Mázsa tér)",
        "lat": "47.482879",
        "lon": "19.125786",
        "parent": "CSF01800"
    },
    {
        "id": "F01572",
        "name": "Kőbánya alsó vasútállomás (Mázsa tér)",
        "lat": "47.482609",
        "lon": "19.126077",
        "parent": "CSF01800"
    },
    {
        "id": "F01574",
        "name": "Kőbánya alsó vasútállomás (Mázsa tér)",
        "lat": "47.481699",
        "lon": "19.127018",
        "parent": "CSF01800"
    },
    {
        "id": "F01575",
        "name": "Szállás utca",
        "lat": "47.478698",
        "lon": "19.123418",
        "parent": "CSF01576"
    },
    {
        "id": "F01576",
        "name": "Szállás utca",
        "lat": "47.478913",
        "lon": "19.123869",
        "parent": "CSF01576"
    },
    {
        "id": "F01577",
        "name": "Kőér utca",
        "lat": "47.473780",
        "lon": "19.135133",
        "parent": "CSF01577"
    },
    {
        "id": "F01578",
        "name": "Kőér utca",
        "lat": "47.473733",
        "lon": "19.135046",
        "parent": "CSF01577"
    },
    {
        "id": "F01579",
        "name": "Gyömrői út",
        "lat": "47.471632",
        "lon": "19.141848",
        "parent": ""
    },
    {
        "id": "F01580",
        "name": "Kada utca",
        "lat": "47.471722",
        "lon": "19.142180",
        "parent": ""
    },
    {
        "id": "F01581",
        "name": "Diósgyőri utca",
        "lat": "47.470443",
        "lon": "19.143835",
        "parent": "CSF01582"
    },
    {
        "id": "F01582",
        "name": "Diósgyőri utca",
        "lat": "47.470560",
        "lon": "19.143822",
        "parent": "CSF01582"
    },
    {
        "id": "F01583",
        "name": "Felüljáró",
        "lat": "47.465158",
        "lon": "19.152362",
        "parent": "CSF01584"
    },
    {
        "id": "F01584",
        "name": "Felüljáró (Gyömrői út)",
        "lat": "47.465463",
        "lon": "19.152827",
        "parent": "CSF01584"
    },
    {
        "id": "F01585",
        "name": "Újhegyi út",
        "lat": "47.465457",
        "lon": "19.157542",
        "parent": "CSF01585"
    },
    {
        "id": "F01586",
        "name": "Újhegyi út",
        "lat": "47.464799",
        "lon": "19.158986",
        "parent": "CSF01585"
    },
    {
        "id": "F01587",
        "name": "Hangár utca",
        "lat": "47.462525",
        "lon": "19.165813",
        "parent": "CSF01587"
    },
    {
        "id": "F01588",
        "name": "Újhegyi út, Sportliget",
        "lat": "47.468108",
        "lon": "19.168664",
        "parent": "CSF01589"
    },
    {
        "id": "F01589",
        "name": "Újhegyi út, Sportliget",
        "lat": "47.468305",
        "lon": "19.169341",
        "parent": "CSF01589"
    },
    {
        "id": "F01590",
        "name": "Dolomit utca",
        "lat": "47.469565",
        "lon": "19.169158",
        "parent": ""
    },
    {
        "id": "F01591",
        "name": "Maglódi út",
        "lat": "47.470307",
        "lon": "19.173285",
        "parent": "CSF01592"
    },
    {
        "id": "F01592",
        "name": "Maglódi út",
        "lat": "47.470567",
        "lon": "19.174108",
        "parent": "CSF01592"
    },
    {
        "id": "F01593",
        "name": "Új köztemető",
        "lat": "47.473127",
        "lon": "19.177258",
        "parent": "CSF01866"
    },
    {
        "id": "F01594",
        "name": "Új köztemető",
        "lat": "47.473307",
        "lon": "19.177445",
        "parent": "CSF01866"
    },
    {
        "id": "F01595",
        "name": "Új köztemető",
        "lat": "47.473434",
        "lon": "19.178047",
        "parent": "CSF01866"
    },
    {
        "id": "F01596",
        "name": "Új köztemető",
        "lat": "47.473414",
        "lon": "19.177856",
        "parent": "CSF01866"
    },
    {
        "id": "F01597",
        "name": "Új köztemető",
        "lat": "47.473013",
        "lon": "19.176986",
        "parent": "CSF01866"
    },
    {
        "id": "F01600",
        "name": "Gránátos utca",
        "lat": "47.481276",
        "lon": "19.177504",
        "parent": "CSF01601"
    },
    {
        "id": "F01601",
        "name": "Gránátos utca",
        "lat": "47.481753",
        "lon": "19.177677",
        "parent": "CSF01601"
    },
    {
        "id": "F01602",
        "name": "Kozma utca",
        "lat": "47.487508",
        "lon": "19.179019",
        "parent": "CSF01602"
    },
    {
        "id": "F01603",
        "name": "Kozma utca",
        "lat": "47.486851",
        "lon": "19.179322",
        "parent": "CSF01602"
    },
    {
        "id": "F01604",
        "name": "Athenaeum Nyomda",
        "lat": "47.487047",
        "lon": "19.180517",
        "parent": ""
    },
    {
        "id": "F01605",
        "name": "Kossuth Nyomda",
        "lat": "47.486598",
        "lon": "19.187496",
        "parent": "CSF01605"
    },
    {
        "id": "F01606",
        "name": "Kossuth Nyomda",
        "lat": "47.486537",
        "lon": "19.186664",
        "parent": "CSF01605"
    },
    {
        "id": "F01608",
        "name": "Tarkarét utca",
        "lat": "47.485909",
        "lon": "19.191966",
        "parent": ""
    },
    {
        "id": "F01609",
        "name": "Túzok utca",
        "lat": "47.487051",
        "lon": "19.192712",
        "parent": "CSF01609"
    },
    {
        "id": "F01610",
        "name": "Túzok utca",
        "lat": "47.486924",
        "lon": "19.193242",
        "parent": "CSF01609"
    },
    {
        "id": "F01611",
        "name": "Keresztúri út 102.",
        "lat": "47.490937",
        "lon": "19.168530",
        "parent": "CSF01611"
    },
    {
        "id": "F01612",
        "name": "Keresztúri út 102.",
        "lat": "47.490721",
        "lon": "19.169206",
        "parent": "CSF01611"
    },
    {
        "id": "F01613",
        "name": "Rákos vasútállomás",
        "lat": "47.488305",
        "lon": "19.174150",
        "parent": "CSF01613"
    },
    {
        "id": "F01614",
        "name": "Rákos vasútállomás",
        "lat": "47.488297",
        "lon": "19.173500",
        "parent": "CSF01613"
    },
    {
        "id": "F01615",
        "name": "Maglódi út",
        "lat": "47.490455",
        "lon": "19.149107",
        "parent": "CSF01615"
    },
    {
        "id": "F01616",
        "name": "Maglódi út",
        "lat": "47.490344",
        "lon": "19.149684",
        "parent": "CSF01615"
    },
    {
        "id": "F01617",
        "name": "Jászberényi út \/ Maglódi út",
        "lat": "47.490047",
        "lon": "19.149073",
        "parent": "CSF01615"
    },
    {
        "id": "F01618",
        "name": "Jászberényi út \/ Maglódi út",
        "lat": "47.490252",
        "lon": "19.148627",
        "parent": "CSF01615"
    },
    {
        "id": "F01619",
        "name": "Sörgyár",
        "lat": "47.491787",
        "lon": "19.144683",
        "parent": "CSF01622"
    },
    {
        "id": "F01620",
        "name": "Sörgyár",
        "lat": "47.491958",
        "lon": "19.144352",
        "parent": "CSF01622"
    },
    {
        "id": "F01621",
        "name": "Sörgyár",
        "lat": "47.491300",
        "lon": "19.146010",
        "parent": "CSF01622"
    },
    {
        "id": "F01622",
        "name": "Sörgyár",
        "lat": "47.492051",
        "lon": "19.144505",
        "parent": "CSF01622"
    },
    {
        "id": "F01623",
        "name": "Élessarok",
        "lat": "47.491091",
        "lon": "19.138113",
        "parent": "CSF01628"
    },
    {
        "id": "F01624",
        "name": "Élessarok",
        "lat": "47.491513",
        "lon": "19.138724",
        "parent": "CSF01628"
    },
    {
        "id": "F01625",
        "name": "Élessarok",
        "lat": "47.491828",
        "lon": "19.138287",
        "parent": "CSF01628"
    },
    {
        "id": "F01626",
        "name": "Élessarok",
        "lat": "47.491846",
        "lon": "19.138619",
        "parent": "CSF01628"
    },
    {
        "id": "F01627",
        "name": "Élessarok",
        "lat": "47.491127",
        "lon": "19.137909",
        "parent": "CSF01628"
    },
    {
        "id": "F01628",
        "name": "Élessarok",
        "lat": "47.491935",
        "lon": "19.140166",
        "parent": "CSF01628"
    },
    {
        "id": "F01629",
        "name": "Harmat utca",
        "lat": "47.489707",
        "lon": "19.136824",
        "parent": ""
    },
    {
        "id": "F01630",
        "name": "Kőrösi Csoma Sándor út",
        "lat": "47.488798",
        "lon": "19.137525",
        "parent": ""
    },
    {
        "id": "F01631",
        "name": "Harmat utca",
        "lat": "47.488402",
        "lon": "19.137963",
        "parent": ""
    },
    {
        "id": "F01635",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.483426",
        "lon": "19.128095",
        "parent": "CSF01800"
    },
    {
        "id": "F01636",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.483723",
        "lon": "19.127883",
        "parent": "CSF01800"
    },
    {
        "id": "F01637",
        "name": "Hízlaló tér",
        "lat": "47.472518",
        "lon": "19.123900",
        "parent": "CSF01638"
    },
    {
        "id": "F01638",
        "name": "Hízlaló tér",
        "lat": "47.472662",
        "lon": "19.123542",
        "parent": "CSF01638"
    },
    {
        "id": "F01639",
        "name": "Liget tér",
        "lat": "47.481743",
        "lon": "19.128809",
        "parent": "CSF01642"
    },
    {
        "id": "F01640",
        "name": "Vaspálya utca",
        "lat": "47.481833",
        "lon": "19.128438",
        "parent": "CSF01647"
    },
    {
        "id": "F01641",
        "name": "Liget tér",
        "lat": "47.482777",
        "lon": "19.130345",
        "parent": "CSF01642"
    },
    {
        "id": "F01642",
        "name": "Liget tér",
        "lat": "47.483145",
        "lon": "19.131213",
        "parent": "CSF01642"
    },
    {
        "id": "F01644",
        "name": "Kápolna utca",
        "lat": "47.482004",
        "lon": "19.130543",
        "parent": "CSF01647"
    },
    {
        "id": "F01645",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.482466",
        "lon": "19.128472",
        "parent": "CSF01800"
    },
    {
        "id": "F01646",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.482381",
        "lon": "19.129407",
        "parent": "CSF01800"
    },
    {
        "id": "F01647",
        "name": "Kápolna utca",
        "lat": "47.482246",
        "lon": "19.130535",
        "parent": "CSF01647"
    },
    {
        "id": "F01648",
        "name": "Szent László tér",
        "lat": "47.485277",
        "lon": "19.131424",
        "parent": "CSF01653"
    },
    {
        "id": "F01649",
        "name": "Szent László tér",
        "lat": "47.485045",
        "lon": "19.131581",
        "parent": "CSF01653"
    },
    {
        "id": "F01650",
        "name": "Szent László tér",
        "lat": "47.485351",
        "lon": "19.131727",
        "parent": "CSF01653"
    },
    {
        "id": "F01651",
        "name": "Szent László tér",
        "lat": "47.484934",
        "lon": "19.131747",
        "parent": "CSF01653"
    },
    {
        "id": "F01652",
        "name": "Szent László tér",
        "lat": "47.485924",
        "lon": "19.130726",
        "parent": "CSF01653"
    },
    {
        "id": "F01653",
        "name": "Szent László tér",
        "lat": "47.485987",
        "lon": "19.131151",
        "parent": "CSF01653"
    },
    {
        "id": "F01655",
        "name": "Kápolna utca",
        "lat": "47.481649",
        "lon": "19.135112",
        "parent": "CSF01655"
    },
    {
        "id": "F01658",
        "name": "Gyula utca",
        "lat": "47.461490",
        "lon": "19.169264",
        "parent": ""
    },
    {
        "id": "F01659",
        "name": "Ihász utca",
        "lat": "47.479562",
        "lon": "19.135307",
        "parent": "CSF01659"
    },
    {
        "id": "F01660",
        "name": "Ihász utca",
        "lat": "47.479382",
        "lon": "19.135387",
        "parent": "CSF01659"
    },
    {
        "id": "F01661",
        "name": "Kápolna tér",
        "lat": "47.481406",
        "lon": "19.135769",
        "parent": "CSF01655"
    },
    {
        "id": "F01662",
        "name": "Kápolna tér",
        "lat": "47.481127",
        "lon": "19.136631",
        "parent": "CSF01655"
    },
    {
        "id": "F01664",
        "name": "Kőér utca",
        "lat": "47.477175",
        "lon": "19.139032",
        "parent": "CSF01665"
    },
    {
        "id": "F01665",
        "name": "Kőér utca",
        "lat": "47.477608",
        "lon": "19.138064",
        "parent": "CSF01665"
    },
    {
        "id": "F01666",
        "name": "Óhegy park",
        "lat": "47.480079",
        "lon": "19.140854",
        "parent": "CSF01666"
    },
    {
        "id": "F01667",
        "name": "Óhegy park",
        "lat": "47.479503",
        "lon": "19.141663",
        "parent": "CSF01666"
    },
    {
        "id": "F01668",
        "name": "Ihász utca",
        "lat": "47.485889",
        "lon": "19.142112",
        "parent": ""
    },
    {
        "id": "F01669",
        "name": "Ihász utca",
        "lat": "47.484322",
        "lon": "19.143821",
        "parent": ""
    },
    {
        "id": "F01670",
        "name": "Csősztorony",
        "lat": "47.483710",
        "lon": "19.145040",
        "parent": "CSF01670"
    },
    {
        "id": "F01671",
        "name": "Csősztorony",
        "lat": "47.482980",
        "lon": "19.145862",
        "parent": "CSF01670"
    },
    {
        "id": "F01672",
        "name": "Téglavető utca",
        "lat": "47.483688",
        "lon": "19.149061",
        "parent": ""
    },
    {
        "id": "F01673",
        "name": "Gitár utca",
        "lat": "47.487049",
        "lon": "19.153035",
        "parent": "CSF01675"
    },
    {
        "id": "F01674",
        "name": "Gitár utca",
        "lat": "47.487085",
        "lon": "19.152889",
        "parent": "CSF01675"
    },
    {
        "id": "F01675",
        "name": "Gitár utca",
        "lat": "47.487724",
        "lon": "19.151736",
        "parent": "CSF01675"
    },
    {
        "id": "F01676",
        "name": "Kada utca \/ Maglódi út",
        "lat": "47.482897",
        "lon": "19.158401",
        "parent": "CSF01676"
    },
    {
        "id": "F01677",
        "name": "Kada utca \/ Maglódi út",
        "lat": "47.482538",
        "lon": "19.158095",
        "parent": "CSF01676"
    },
    {
        "id": "F01678",
        "name": "Kada utca \/ Maglódi út",
        "lat": "47.482340",
        "lon": "19.158015",
        "parent": "CSF01676"
    },
    {
        "id": "F01679",
        "name": "Kada utca \/ Maglódi út",
        "lat": "47.482735",
        "lon": "19.158732",
        "parent": "CSF01676"
    },
    {
        "id": "F01680",
        "name": "Kada utca \/ Maglódi út",
        "lat": "47.482501",
        "lon": "19.158758",
        "parent": "CSF01676"
    },
    {
        "id": "F01681",
        "name": "Kada utca \/ Mádi utca",
        "lat": "47.479286",
        "lon": "19.153365",
        "parent": "CSF01682"
    },
    {
        "id": "F01682",
        "name": "Kada utca \/ Mádi utca",
        "lat": "47.479537",
        "lon": "19.153896",
        "parent": "CSF01682"
    },
    {
        "id": "F01683",
        "name": "Kada utca",
        "lat": "47.479392",
        "lon": "19.154798",
        "parent": "CSF01682"
    },
    {
        "id": "F01684",
        "name": "Kada utca \/ Harmat utca",
        "lat": "47.477983",
        "lon": "19.151451",
        "parent": "CSF01682"
    },
    {
        "id": "F01685",
        "name": "Kada utca",
        "lat": "47.477866",
        "lon": "19.152261",
        "parent": "CSF01682"
    },
    {
        "id": "F01686",
        "name": "Márga utca",
        "lat": "47.477756",
        "lon": "19.144247",
        "parent": "CSF01686"
    },
    {
        "id": "F01687",
        "name": "Márga utca",
        "lat": "47.477683",
        "lon": "19.144512",
        "parent": "CSF01686"
    },
    {
        "id": "F01688",
        "name": "Kemence utca",
        "lat": "47.475890",
        "lon": "19.148064",
        "parent": "CSF01688"
    },
    {
        "id": "F01689",
        "name": "Kemence utca",
        "lat": "47.475774",
        "lon": "19.147639",
        "parent": "CSF01688"
    },
    {
        "id": "F01690",
        "name": "Kada utca",
        "lat": "47.473933",
        "lon": "19.144399",
        "parent": ""
    },
    {
        "id": "F01691",
        "name": "Gergely utca",
        "lat": "47.473429",
        "lon": "19.144517",
        "parent": ""
    },
    {
        "id": "F01692",
        "name": "Noszlopy utca",
        "lat": "47.471852",
        "lon": "19.148362",
        "parent": "CS009225"
    },
    {
        "id": "F01693",
        "name": "Gergely utca (Sibrik Miklós út)",
        "lat": "47.468652",
        "lon": "19.155890",
        "parent": "CS009289"
    },
    {
        "id": "F01694",
        "name": "Gergely utca (Sibrik Miklós út)",
        "lat": "47.467870",
        "lon": "19.154841",
        "parent": "CS009289"
    },
    {
        "id": "F01695",
        "name": "Mélytó utca",
        "lat": "47.467862",
        "lon": "19.163423",
        "parent": "CSF01696"
    },
    {
        "id": "F01696",
        "name": "Mélytó utca",
        "lat": "47.468589",
        "lon": "19.164831",
        "parent": "CSF01696"
    },
    {
        "id": "F01697",
        "name": "Szövőszék utca",
        "lat": "47.471905",
        "lon": "19.159253",
        "parent": "CSF01698"
    },
    {
        "id": "F01698",
        "name": "Szövőszék utca",
        "lat": "47.472291",
        "lon": "19.159878",
        "parent": "CSF01698"
    },
    {
        "id": "F01699",
        "name": "Sibrik Miklós út",
        "lat": "47.473576",
        "lon": "19.160438",
        "parent": ""
    },
    {
        "id": "F01700",
        "name": "Sibrik Miklós út",
        "lat": "47.472693",
        "lon": "19.162041",
        "parent": ""
    },
    {
        "id": "F01701",
        "name": "Lavotta utca",
        "lat": "47.475235",
        "lon": "19.157098",
        "parent": ""
    },
    {
        "id": "F01703",
        "name": "Lavotta utca",
        "lat": "47.476879",
        "lon": "19.159025",
        "parent": ""
    },
    {
        "id": "F01704",
        "name": "Mádi utca",
        "lat": "47.473537",
        "lon": "19.163953",
        "parent": ""
    },
    {
        "id": "F01705",
        "name": "Mádi utca",
        "lat": "47.475059",
        "lon": "19.162086",
        "parent": ""
    },
    {
        "id": "F01706",
        "name": "Venyige utca",
        "lat": "47.477666",
        "lon": "19.165215",
        "parent": "CSF01706"
    },
    {
        "id": "F01707",
        "name": "Venyige utca",
        "lat": "47.477457",
        "lon": "19.165740",
        "parent": "CSF01706"
    },
    {
        "id": "F01708",
        "name": "Venyige utca",
        "lat": "47.477439",
        "lon": "19.165872",
        "parent": "CSF01706"
    },
    {
        "id": "F01709",
        "name": "Venyige utca",
        "lat": "47.477260",
        "lon": "19.165931",
        "parent": "CSF01706"
    },
    {
        "id": "F01710",
        "name": "Sírkert út",
        "lat": "47.474431",
        "lon": "19.169461",
        "parent": "CSF01710"
    },
    {
        "id": "F01711",
        "name": "Sírkert út",
        "lat": "47.473801",
        "lon": "19.170805",
        "parent": "CSF01710"
    },
    {
        "id": "F01712",
        "name": "Sírkert út",
        "lat": "47.473754",
        "lon": "19.171794",
        "parent": "CSF01710"
    },
    {
        "id": "F01713",
        "name": "Sírkert út",
        "lat": "47.473862",
        "lon": "19.171250",
        "parent": "CSF01710"
    },
    {
        "id": "F01714",
        "name": "Tavas utca",
        "lat": "47.470019",
        "lon": "19.165312",
        "parent": "CSF01845"
    },
    {
        "id": "F01715",
        "name": "Legényrózsa utca",
        "lat": "47.486386",
        "lon": "19.199318",
        "parent": "CSF01715"
    },
    {
        "id": "F01716",
        "name": "Legényrózsa utca",
        "lat": "47.486277",
        "lon": "19.199597",
        "parent": "CSF01715"
    },
    {
        "id": "F01717",
        "name": "Határmalom utca",
        "lat": "47.488932",
        "lon": "19.218424",
        "parent": "CSF01717"
    },
    {
        "id": "F01718",
        "name": "Határmalom utca",
        "lat": "47.488911",
        "lon": "19.220439",
        "parent": "CSF01717"
    },
    {
        "id": "F01719",
        "name": "501. utca",
        "lat": "47.485733",
        "lon": "19.215890",
        "parent": "CSF01719"
    },
    {
        "id": "F01720",
        "name": "501. utca",
        "lat": "47.485039",
        "lon": "19.216897",
        "parent": "CSF01719"
    },
    {
        "id": "F01721",
        "name": "Jászberényi út",
        "lat": "47.484814",
        "lon": "19.217188",
        "parent": ""
    },
    {
        "id": "F01722",
        "name": "501. utca",
        "lat": "47.485578",
        "lon": "19.217296",
        "parent": "CSF01719"
    },
    {
        "id": "F01723",
        "name": "Gyömrői út 156.",
        "lat": "47.460299",
        "lon": "19.170410",
        "parent": ""
    },
    {
        "id": "F01724",
        "name": "III. kapu",
        "lat": "47.491449",
        "lon": "19.128094",
        "parent": "CSF01556"
    },
    {
        "id": "F01725",
        "name": "Kistorony park",
        "lat": "47.486109",
        "lon": "19.124331",
        "parent": "CSF01726"
    },
    {
        "id": "F01726",
        "name": "Kistorony park",
        "lat": "47.486658",
        "lon": "19.124053",
        "parent": "CSF01726"
    },
    {
        "id": "F01727",
        "name": "Kőbánya felső vasútállomás",
        "lat": "47.490942",
        "lon": "19.133189",
        "parent": "CSF01555"
    },
    {
        "id": "F01728",
        "name": "Kőbánya felső vasútállomás",
        "lat": "47.490861",
        "lon": "19.132964",
        "parent": "CSF01555"
    },
    {
        "id": "F01729",
        "name": "Halom utca",
        "lat": "47.490171",
        "lon": "19.128610",
        "parent": "CSF01729"
    },
    {
        "id": "F01730",
        "name": "Halom utca",
        "lat": "47.490091",
        "lon": "19.128424",
        "parent": "CSF01729"
    },
    {
        "id": "F01731",
        "name": "Északi Járműjavító",
        "lat": "47.485036",
        "lon": "19.113793",
        "parent": "CSF01732"
    },
    {
        "id": "F01732",
        "name": "Északi Járműjavító",
        "lat": "47.485171",
        "lon": "19.113103",
        "parent": "CSF01732"
    },
    {
        "id": "F01733",
        "name": "Északi Járműjavító",
        "lat": "47.485126",
        "lon": "19.112865",
        "parent": "CSF01732"
    },
    {
        "id": "F01734",
        "name": "Északi Járműjavító",
        "lat": "47.484697",
        "lon": "19.113998",
        "parent": "CSF01732"
    },
    {
        "id": "F01735",
        "name": "Őrnagy utca",
        "lat": "47.500742",
        "lon": "19.112246",
        "parent": "CSF01735"
    },
    {
        "id": "F01736",
        "name": "Őrnagy utca",
        "lat": "47.500570",
        "lon": "19.112857",
        "parent": "CSF01735"
    },
    {
        "id": "F01737",
        "name": "Várna utca",
        "lat": "47.501756",
        "lon": "19.115447",
        "parent": "CSF01737"
    },
    {
        "id": "F01738",
        "name": "Várna utca",
        "lat": "47.501720",
        "lon": "19.115606",
        "parent": "CSF01737"
    },
    {
        "id": "F01739",
        "name": "Kerepesi út",
        "lat": "47.500281",
        "lon": "19.115604",
        "parent": ""
    },
    {
        "id": "F01740",
        "name": "Pillangó utca M",
        "lat": "47.501502",
        "lon": "19.119588",
        "parent": "CSF01740"
    },
    {
        "id": "F01741",
        "name": "Pillangó utca M",
        "lat": "47.501214",
        "lon": "19.119530",
        "parent": "CSF01740"
    },
    {
        "id": "F01742",
        "name": "Pillangó utca",
        "lat": "47.501051",
        "lon": "19.118839",
        "parent": "CSLM2PU1"
    },
    {
        "id": "F01743",
        "name": "Pillangó utca",
        "lat": "47.501204",
        "lon": "19.120417",
        "parent": "CSLM2PU1"
    },
    {
        "id": "F01744",
        "name": "Hős utca",
        "lat": "47.497510",
        "lon": "19.116038",
        "parent": "CSF01744"
    },
    {
        "id": "F01745",
        "name": "Hős utca",
        "lat": "47.496979",
        "lon": "19.116303",
        "parent": "CSF01744"
    },
    {
        "id": "F01746",
        "name": "Expo tér",
        "lat": "47.495268",
        "lon": "19.119632",
        "parent": ""
    },
    {
        "id": "F01749",
        "name": "Örs vezér tere",
        "lat": "47.502922",
        "lon": "19.135963",
        "parent": "CSLM2OVE"
    },
    {
        "id": "F01751",
        "name": "Örs vezér tere M+H",
        "lat": "47.503038",
        "lon": "19.135372",
        "parent": "CS003106"
    },
    {
        "id": "F01752",
        "name": "Örs vezér tere M+H",
        "lat": "47.502498",
        "lon": "19.136354",
        "parent": "CS003106"
    },
    {
        "id": "F01754",
        "name": "Örs vezér tere M+H",
        "lat": "47.503459",
        "lon": "19.137231",
        "parent": "CS003106"
    },
    {
        "id": "F01755",
        "name": "Örs vezér tere M+H",
        "lat": "47.504108",
        "lon": "19.136144",
        "parent": "CS003106"
    },
    {
        "id": "F01756",
        "name": "Örs vezér tere M+H",
        "lat": "47.504315",
        "lon": "19.136091",
        "parent": "CS003106"
    },
    {
        "id": "F01757",
        "name": "Örs vezér tere M+H",
        "lat": "47.504081",
        "lon": "19.136449",
        "parent": "CS003106"
    },
    {
        "id": "F01769",
        "name": "Gyakorló köz",
        "lat": "47.501657",
        "lon": "19.141556",
        "parent": "CSF01770"
    },
    {
        "id": "F01770",
        "name": "Gyakorló köz",
        "lat": "47.501683",
        "lon": "19.142684",
        "parent": "CSF01770"
    },
    {
        "id": "F01771",
        "name": "Gyakorló köz",
        "lat": "47.503877",
        "lon": "19.143272",
        "parent": ""
    },
    {
        "id": "F01772",
        "name": "Sarkantyú utca",
        "lat": "47.503995",
        "lon": "19.142210",
        "parent": ""
    },
    {
        "id": "F01773",
        "name": "Halas utca",
        "lat": "47.502556",
        "lon": "19.153265",
        "parent": "CSF01773"
    },
    {
        "id": "F01774",
        "name": "Halas utca",
        "lat": "47.502520",
        "lon": "19.153026",
        "parent": "CSF01773"
    },
    {
        "id": "F01775",
        "name": "Egyenes utcai lakótelep",
        "lat": "47.505743",
        "lon": "19.159099",
        "parent": "CSF01775"
    },
    {
        "id": "F01776",
        "name": "Egyenes utcai lakótelep",
        "lat": "47.505636",
        "lon": "19.158846",
        "parent": "CSF01775"
    },
    {
        "id": "F01777",
        "name": "Nagyicce H",
        "lat": "47.506634",
        "lon": "19.166633",
        "parent": "CSF01778"
    },
    {
        "id": "F01778",
        "name": "Nagyicce H",
        "lat": "47.506842",
        "lon": "19.167159",
        "parent": "CSF01778"
    },
    {
        "id": "F01779",
        "name": "Albertirsai köz",
        "lat": "47.493825",
        "lon": "19.138649",
        "parent": ""
    },
    {
        "id": "F01780",
        "name": "Terebesi utca",
        "lat": "47.493445",
        "lon": "19.141302",
        "parent": "CSF01783"
    },
    {
        "id": "F01781",
        "name": "Terebesi utca",
        "lat": "47.494210",
        "lon": "19.140600",
        "parent": "CSF01783"
    },
    {
        "id": "F01782",
        "name": "Terebesi utca",
        "lat": "47.494183",
        "lon": "19.141025",
        "parent": "CSF01783"
    },
    {
        "id": "F01783",
        "name": "Terebesi utca",
        "lat": "47.494687",
        "lon": "19.140349",
        "parent": "CSF01783"
    },
    {
        "id": "F01784",
        "name": "EGIS Gyógyszergyár",
        "lat": "47.500459",
        "lon": "19.153752",
        "parent": "CSF01784"
    },
    {
        "id": "F01785",
        "name": "EGIS Gyógyszergyár",
        "lat": "47.499263",
        "lon": "19.153842",
        "parent": "CSF01784"
    },
    {
        "id": "F01786",
        "name": "MÁV-telep",
        "lat": "47.493587",
        "lon": "19.163652",
        "parent": "CSF01787"
    },
    {
        "id": "F01787",
        "name": "MÁV-telep",
        "lat": "47.493776",
        "lon": "19.163121",
        "parent": "CSF01787"
    },
    {
        "id": "F01788",
        "name": "Dömsödi utca",
        "lat": "47.502919",
        "lon": "19.167734",
        "parent": ""
    },
    {
        "id": "F01789",
        "name": "Heves utca",
        "lat": "47.503162",
        "lon": "19.167920",
        "parent": ""
    },
    {
        "id": "F01790",
        "name": "Rákosfalva H",
        "lat": "47.504986",
        "lon": "19.151464",
        "parent": "CSF01790"
    },
    {
        "id": "F01791",
        "name": "Rákosfalva H",
        "lat": "47.504707",
        "lon": "19.150946",
        "parent": "CSF01790"
    },
    {
        "id": "F01792",
        "name": "Örs vezér tere",
        "lat": "47.503585",
        "lon": "19.137192",
        "parent": "CSLM2OVE"
    },
    {
        "id": "F01794",
        "name": "Kelemen utca",
        "lat": "47.476910",
        "lon": "19.132424",
        "parent": "CSF01795"
    },
    {
        "id": "F01795",
        "name": "Kelemen utca",
        "lat": "47.477217",
        "lon": "19.131894",
        "parent": "CSF01795"
    },
    {
        "id": "F01796",
        "name": "Gyógyszergyár",
        "lat": "47.472399",
        "lon": "19.138559",
        "parent": "CSF01796"
    },
    {
        "id": "F01797",
        "name": "Gyógyszergyár",
        "lat": "47.472327",
        "lon": "19.139023",
        "parent": "CSF01796"
    },
    {
        "id": "F01798",
        "name": "Kőbányai garázs",
        "lat": "47.490711",
        "lon": "19.114265",
        "parent": "CS074021"
    },
    {
        "id": "F01799",
        "name": "Kőbányai garázs",
        "lat": "47.490621",
        "lon": "19.113986",
        "parent": "CS074021"
    },
    {
        "id": "F01800",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.484056",
        "lon": "19.127420",
        "parent": "CSF01800"
    },
    {
        "id": "F01801",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.483381",
        "lon": "19.127909",
        "parent": "CSF01800"
    },
    {
        "id": "F01803",
        "name": "Kőbánya alsó vasútállomás",
        "lat": "47.483813",
        "lon": "19.127605",
        "parent": "CSF01800"
    },
    {
        "id": "F01804",
        "name": "Vasgyár utca",
        "lat": "47.469009",
        "lon": "19.147985",
        "parent": "CSF01805"
    },
    {
        "id": "F01805",
        "name": "Vasgyár utca",
        "lat": "47.469127",
        "lon": "19.147388",
        "parent": "CSF01805"
    },
    {
        "id": "F01806",
        "name": "Sibrik Miklós út",
        "lat": "47.467152",
        "lon": "19.153022",
        "parent": "CS009289"
    },
    {
        "id": "F01807",
        "name": "Sibrik Miklós út",
        "lat": "47.467270",
        "lon": "19.152386",
        "parent": "CS009289"
    },
    {
        "id": "F01808",
        "name": "Izraelita temető",
        "lat": "47.479379",
        "lon": "19.177889",
        "parent": "CSF01811"
    },
    {
        "id": "F01810",
        "name": "Izraelita temető",
        "lat": "47.478955",
        "lon": "19.177870",
        "parent": "CSF01811"
    },
    {
        "id": "F01811",
        "name": "Izraelita temető",
        "lat": "47.479540",
        "lon": "19.177672",
        "parent": "CSF01811"
    },
    {
        "id": "F01812",
        "name": "Meténg utca",
        "lat": "47.484729",
        "lon": "19.178720",
        "parent": "CSF01812"
    },
    {
        "id": "F01813",
        "name": "Meténg utca",
        "lat": "47.484468",
        "lon": "19.178454",
        "parent": "CSF01812"
    },
    {
        "id": "F01814",
        "name": "Fővárosi Kertészet",
        "lat": "47.489380",
        "lon": "19.177749",
        "parent": "CSF01815"
    },
    {
        "id": "F01815",
        "name": "Fővárosi Kertészet",
        "lat": "47.489426",
        "lon": "19.176913",
        "parent": "CSF01815"
    },
    {
        "id": "F01816",
        "name": "Díszítő üzem",
        "lat": "47.488366",
        "lon": "19.183652",
        "parent": "CSF01816"
    },
    {
        "id": "F01817",
        "name": "Díszítő üzem",
        "lat": "47.488240",
        "lon": "19.183731",
        "parent": "CSF01816"
    },
    {
        "id": "F01818",
        "name": "Tárna utca",
        "lat": "47.489377",
        "lon": "19.163789",
        "parent": "CSF01819"
    },
    {
        "id": "F01819",
        "name": "Tárna utca",
        "lat": "47.489412",
        "lon": "19.164691",
        "parent": "CSF01819"
    },
    {
        "id": "F01820",
        "name": "Rákosfalva",
        "lat": "47.505183",
        "lon": "19.152115",
        "parent": "CSF01820"
    },
    {
        "id": "F01821",
        "name": "Rákosfalva",
        "lat": "47.504950",
        "lon": "19.150641",
        "parent": "CSF01820"
    },
    {
        "id": "F01822",
        "name": "Téglavető utca",
        "lat": "47.489596",
        "lon": "19.160418",
        "parent": "CSF01823"
    },
    {
        "id": "F01823",
        "name": "Téglavető utca",
        "lat": "47.489787",
        "lon": "19.158965",
        "parent": "CSF01823"
    },
    {
        "id": "F01824",
        "name": "Orion",
        "lat": "47.489843",
        "lon": "19.156703",
        "parent": "CSF01825"
    },
    {
        "id": "F01825",
        "name": "Orion",
        "lat": "47.490106",
        "lon": "19.154852",
        "parent": "CSF01825"
    },
    {
        "id": "F01826",
        "name": "Ónodi utca",
        "lat": "47.489240",
        "lon": "19.136114",
        "parent": "CSF01826"
    },
    {
        "id": "F01827",
        "name": "Ónodi utca",
        "lat": "47.488566",
        "lon": "19.135229",
        "parent": "CSF01826"
    },
    {
        "id": "F01828",
        "name": "Ónodi utca",
        "lat": "47.488126",
        "lon": "19.134507",
        "parent": "CSF01826"
    },
    {
        "id": "F01829",
        "name": "Kocka utca",
        "lat": "47.484896",
        "lon": "19.155923",
        "parent": "CSF01831"
    },
    {
        "id": "F01830",
        "name": "Kocka utca",
        "lat": "47.484968",
        "lon": "19.155711",
        "parent": "CSF01831"
    },
    {
        "id": "F01831",
        "name": "Kocka utca",
        "lat": "47.484978",
        "lon": "19.155512",
        "parent": "CSF01831"
    },
    {
        "id": "F01832",
        "name": "Kocka utca",
        "lat": "47.484761",
        "lon": "19.155963",
        "parent": "CSF01831"
    },
    {
        "id": "F01833",
        "name": "Bajcsy-Zsilinszky Kórház",
        "lat": "47.480016",
        "lon": "19.162036",
        "parent": "CSF01833"
    },
    {
        "id": "F01834",
        "name": "Bajcsy-Zsilinszky Kórház",
        "lat": "47.479701",
        "lon": "19.162646",
        "parent": "CSF01833"
    },
    {
        "id": "F01835",
        "name": "Bajcsy-Zsilinszky Kórház",
        "lat": "47.480006",
        "lon": "19.162322",
        "parent": "CSF01833"
    },
    {
        "id": "F01836",
        "name": "Bajcsy-Zsilinszky Kórház",
        "lat": "47.479853",
        "lon": "19.162614",
        "parent": "CSF01833"
    },
    {
        "id": "F01837",
        "name": "Kocka utca",
        "lat": "47.481824",
        "lon": "19.151499",
        "parent": ""
    },
    {
        "id": "F01838",
        "name": "Szlávy utca",
        "lat": "47.480657",
        "lon": "19.148922",
        "parent": ""
    },
    {
        "id": "F01839",
        "name": "Szlávy utca",
        "lat": "47.475743",
        "lon": "19.141284",
        "parent": "CSF01839"
    },
    {
        "id": "F01840",
        "name": "Szlávy utca",
        "lat": "47.475329",
        "lon": "19.142199",
        "parent": "CSF01839"
    },
    {
        "id": "F01841",
        "name": "Újhegyi sétány",
        "lat": "47.471685",
        "lon": "19.163166",
        "parent": "CSF01841"
    },
    {
        "id": "F01842",
        "name": "Újhegyi sétány",
        "lat": "47.470838",
        "lon": "19.164465",
        "parent": "CSF01841"
    },
    {
        "id": "F01843",
        "name": "Bányató utca",
        "lat": "47.468782",
        "lon": "19.160958",
        "parent": "CSF01844"
    },
    {
        "id": "F01844",
        "name": "Bányató utca",
        "lat": "47.469279",
        "lon": "19.160408",
        "parent": "CSF01844"
    },
    {
        "id": "F01845",
        "name": "Tavas utca",
        "lat": "47.471483",
        "lon": "19.166562",
        "parent": "CSF01845"
    },
    {
        "id": "F01846",
        "name": "Rézvirág utca",
        "lat": "47.486301",
        "lon": "19.202384",
        "parent": "CSF01846"
    },
    {
        "id": "F01847",
        "name": "Rézvirág utca",
        "lat": "47.486146",
        "lon": "19.203816",
        "parent": "CSF01846"
    },
    {
        "id": "F01848",
        "name": "Dombhát utca",
        "lat": "47.486012",
        "lon": "19.209442",
        "parent": "CSF01848"
    },
    {
        "id": "F01849",
        "name": "Dombhát utca",
        "lat": "47.485886",
        "lon": "19.209866",
        "parent": "CSF01848"
    },
    {
        "id": "F01850",
        "name": "Gépmadár utca",
        "lat": "47.502309",
        "lon": "19.147517",
        "parent": "CSF01850"
    },
    {
        "id": "F01851",
        "name": "Gépmadár utca",
        "lat": "47.502183",
        "lon": "19.147304",
        "parent": "CSF01850"
    },
    {
        "id": "F01852",
        "name": "Pilisi utca",
        "lat": "47.502234",
        "lon": "19.160697",
        "parent": "CSF01853"
    },
    {
        "id": "F01853",
        "name": "Pilisi utca",
        "lat": "47.502251",
        "lon": "19.161773",
        "parent": "CSF01853"
    },
    {
        "id": "F01854",
        "name": "Gépmadár park",
        "lat": "47.504442",
        "lon": "19.146233",
        "parent": "CSF01854"
    },
    {
        "id": "F01855",
        "name": "Gépmadár park",
        "lat": "47.504279",
        "lon": "19.146950",
        "parent": "CSF01854"
    },
    {
        "id": "F01856",
        "name": "Pongrácz úti lakótelep",
        "lat": "47.491265",
        "lon": "19.120330",
        "parent": "CSF01857"
    },
    {
        "id": "F01857",
        "name": "Pongrácz úti lakótelep",
        "lat": "47.491311",
        "lon": "19.119800",
        "parent": "CSF01857"
    },
    {
        "id": "F01858",
        "name": "Hungaropharma",
        "lat": "47.481836",
        "lon": "19.204520",
        "parent": "CSF01859"
    },
    {
        "id": "F01859",
        "name": "Hungaropharma",
        "lat": "47.482334",
        "lon": "19.203370",
        "parent": "CSF01859"
    },
    {
        "id": "F01860",
        "name": "Fehér úti ipari park",
        "lat": "47.499511",
        "lon": "19.137384",
        "parent": "CSF01862"
    },
    {
        "id": "F01861",
        "name": "Fehér úti ipari park",
        "lat": "47.499466",
        "lon": "19.137251",
        "parent": "CSF01862"
    },
    {
        "id": "F01862",
        "name": "Fehér úti ipari park",
        "lat": "47.499780",
        "lon": "19.137411",
        "parent": "CSF01862"
    },
    {
        "id": "F01863",
        "name": "Fehér úti ipari park",
        "lat": "47.499645",
        "lon": "19.137504",
        "parent": "CSF01862"
    },
    {
        "id": "F01864",
        "name": "Aluljáró, Danone",
        "lat": "47.486705",
        "lon": "19.203211",
        "parent": "CSF01864"
    },
    {
        "id": "F01865",
        "name": "Aluljáró, Danone",
        "lat": "47.486634",
        "lon": "19.202733",
        "parent": "CSF01864"
    },
    {
        "id": "F01866",
        "name": "Új köztemető (Kozma utca)",
        "lat": "47.475096",
        "lon": "19.178218",
        "parent": "CSF01866"
    },
    {
        "id": "F01867",
        "name": "Új köztemető (Kozma utca)",
        "lat": "47.474682",
        "lon": "19.178138",
        "parent": "CSF01866"
    },
    {
        "id": "F01868",
        "name": "Tűzoltóság",
        "lat": "47.478982",
        "lon": "19.200279",
        "parent": "CSF01869"
    },
    {
        "id": "F01869",
        "name": "Tűzoltóság",
        "lat": "47.479054",
        "lon": "19.200332",
        "parent": "CSF01869"
    },
    {
        "id": "F01870",
        "name": "Felsőcsatári út",
        "lat": "47.458053",
        "lon": "19.176466",
        "parent": "CS008692"
    },
    {
        "id": "F01872",
        "name": "Kollégium",
        "lat": "47.483957",
        "lon": "19.192531",
        "parent": "CSF01872"
    },
    {
        "id": "F01873",
        "name": "Kollégium",
        "lat": "47.483849",
        "lon": "19.192770",
        "parent": "CSF01872"
    },
    {
        "id": "F01874",
        "name": "Ezüstfa utca",
        "lat": "47.479824",
        "lon": "19.195969",
        "parent": ""
    },
    {
        "id": "F01875",
        "name": "Csillagvirág utca",
        "lat": "47.479941",
        "lon": "19.196129",
        "parent": ""
    },
    {
        "id": "F01878",
        "name": "Pöttyös utca",
        "lat": "47.468557",
        "lon": "19.117532",
        "parent": "CSF01878"
    },
    {
        "id": "F01879",
        "name": "Pöttyös utca",
        "lat": "47.467939",
        "lon": "19.118838",
        "parent": "CSF01878"
    },
    {
        "id": "F01880",
        "name": "Kamaraerdő",
        "lat": "47.435984",
        "lon": "18.978576",
        "parent": "CSF01880"
    },
    {
        "id": "F01881",
        "name": "Kamaraerdő",
        "lat": "47.435825",
        "lon": "18.978716",
        "parent": "CSF01880"
    },
    {
        "id": "F01882",
        "name": "Kamaraerdő",
        "lat": "47.435831",
        "lon": "18.978908",
        "parent": "CSF01880"
    },
    {
        "id": "F01883",
        "name": "Szociális Otthon",
        "lat": "47.437571",
        "lon": "18.979124",
        "parent": "CSF01884"
    },
    {
        "id": "F01884",
        "name": "Szociális Otthon",
        "lat": "47.437904",
        "lon": "18.979163",
        "parent": "CSF01884"
    },
    {
        "id": "F01885",
        "name": "Kamaraerdei Ifjúsági Park",
        "lat": "47.441157",
        "lon": "18.979524",
        "parent": "CSF01885"
    },
    {
        "id": "F01886",
        "name": "Kamaraerdei Ifjúsági Park",
        "lat": "47.440638",
        "lon": "18.979319",
        "parent": "CSF01885"
    },
    {
        "id": "F01887",
        "name": "Kamaraerdei Ifjúsági Park",
        "lat": "47.440746",
        "lon": "18.979160",
        "parent": "CSF01885"
    },
    {
        "id": "F01888",
        "name": "Repülőtér",
        "lat": "47.444642",
        "lon": "18.986706",
        "parent": "CSF01889"
    },
    {
        "id": "F01889",
        "name": "Repülőtér",
        "lat": "47.444777",
        "lon": "18.986905",
        "parent": "CSF01889"
    },
    {
        "id": "F01890",
        "name": "Fülőke utca",
        "lat": "47.445445",
        "lon": "18.991505",
        "parent": "CSF01890"
    },
    {
        "id": "F01891",
        "name": "Fülőke utca",
        "lat": "47.445382",
        "lon": "18.991466",
        "parent": "CSF01890"
    },
    {
        "id": "F01892",
        "name": "Balatoni út",
        "lat": "47.444578",
        "lon": "19.005415",
        "parent": "CSF01892"
    },
    {
        "id": "F01893",
        "name": "Balatoni út",
        "lat": "47.444426",
        "lon": "19.005773",
        "parent": "CSF01892"
    },
    {
        "id": "F01894",
        "name": "Kelenvölgy-Péterhegy",
        "lat": "47.443564",
        "lon": "19.012403",
        "parent": "CSF01897"
    },
    {
        "id": "F01895",
        "name": "Kelenvölgy-Péterhegy",
        "lat": "47.443546",
        "lon": "19.012072",
        "parent": "CSF01897"
    },
    {
        "id": "F01896",
        "name": "Kelenvölgy-Péterhegy",
        "lat": "47.443730",
        "lon": "19.012447",
        "parent": "CSF01897"
    },
    {
        "id": "F01897",
        "name": "Kelenvölgy-Péterhegy",
        "lat": "47.444464",
        "lon": "19.012602",
        "parent": "CSF01897"
    },
    {
        "id": "F01898",
        "name": "Kápolna út",
        "lat": "47.446635",
        "lon": "19.013757",
        "parent": "CSF01899"
    },
    {
        "id": "F01899",
        "name": "Kápolna út",
        "lat": "47.447166",
        "lon": "19.014208",
        "parent": "CSF01899"
    },
    {
        "id": "F01900",
        "name": "Olajfa utca",
        "lat": "47.449628",
        "lon": "19.015542",
        "parent": "CSF01900"
    },
    {
        "id": "F01901",
        "name": "Olajfa utca",
        "lat": "47.449313",
        "lon": "19.015184",
        "parent": "CSF01900"
    },
    {
        "id": "F01902",
        "name": "Budafoki elágazás",
        "lat": "47.435438",
        "lon": "19.035874",
        "parent": "CSF01905"
    },
    {
        "id": "F01903",
        "name": "Budafoki elágazás",
        "lat": "47.435438",
        "lon": "19.036166",
        "parent": "CSF01905"
    },
    {
        "id": "F01904",
        "name": "Budafoki elágazás",
        "lat": "47.434916",
        "lon": "19.036391",
        "parent": "CSF01905"
    },
    {
        "id": "F01905",
        "name": "Budafoki elágazás",
        "lat": "47.435483",
        "lon": "19.036378",
        "parent": "CSF01905"
    },
    {
        "id": "F01906",
        "name": "Vasút utca",
        "lat": "47.446300",
        "lon": "18.975818",
        "parent": "CSF01906"
    },
    {
        "id": "F01907",
        "name": "Vasút utca",
        "lat": "47.445931",
        "lon": "18.976362",
        "parent": "CSF01906"
    },
    {
        "id": "F01908",
        "name": "Repülőgépes Szolgálat",
        "lat": "47.447353",
        "lon": "18.978031",
        "parent": ""
    },
    {
        "id": "F01909",
        "name": "Repülőgépes Szolgálat",
        "lat": "47.447694",
        "lon": "18.976943",
        "parent": ""
    },
    {
        "id": "F01910",
        "name": "Repülőgépes Szolgálat",
        "lat": "47.448485",
        "lon": "18.975165",
        "parent": "CSF01910"
    },
    {
        "id": "F01911",
        "name": "Repülőgépes Szolgálat",
        "lat": "47.448287",
        "lon": "18.975311",
        "parent": "CSF01910"
    },
    {
        "id": "F01912",
        "name": "Budaörsi repülőtér",
        "lat": "47.447772",
        "lon": "18.986159",
        "parent": "CSF01913"
    },
    {
        "id": "F01913",
        "name": "Budaörsi repülőtér",
        "lat": "47.447790",
        "lon": "18.986013",
        "parent": "CSF01913"
    },
    {
        "id": "F01914",
        "name": "Bolygó utca",
        "lat": "47.450923",
        "lon": "19.016470",
        "parent": "CS061272"
    },
    {
        "id": "F01915",
        "name": "Alabástrom utca",
        "lat": "47.451643",
        "lon": "19.017994",
        "parent": ""
    },
    {
        "id": "F01916",
        "name": "Őrmezei út",
        "lat": "47.454972",
        "lon": "19.018841",
        "parent": "CSF01916"
    },
    {
        "id": "F01917",
        "name": "Őrmezei út",
        "lat": "47.454972",
        "lon": "19.018655",
        "parent": "CSF01916"
    },
    {
        "id": "F01918",
        "name": "Igmándi utca",
        "lat": "47.456684",
        "lon": "19.020053",
        "parent": "CS061271"
    },
    {
        "id": "F01919",
        "name": "Péterhegyi út \/ Neszmélyi út",
        "lat": "47.458300",
        "lon": "19.019317",
        "parent": "CS061224"
    },
    {
        "id": "F01920",
        "name": "Menyecske utca",
        "lat": "47.459766",
        "lon": "19.017273",
        "parent": "CS061226"
    },
    {
        "id": "F01921",
        "name": "Menyecske utca",
        "lat": "47.460251",
        "lon": "19.017379",
        "parent": "CS061226"
    },
    {
        "id": "F01922",
        "name": "Kérő utca",
        "lat": "47.461924",
        "lon": "19.015866",
        "parent": "CSF01923"
    },
    {
        "id": "F01923",
        "name": "Kérő utca",
        "lat": "47.462050",
        "lon": "19.016317",
        "parent": "CSF01923"
    },
    {
        "id": "F01924",
        "name": "Neszmélyi út",
        "lat": "47.460127",
        "lon": "19.015088",
        "parent": "CS061223"
    },
    {
        "id": "F01925",
        "name": "Sasadi út",
        "lat": "47.466999",
        "lon": "19.015946",
        "parent": "CSF01926"
    },
    {
        "id": "F01926",
        "name": "Sasadi út",
        "lat": "47.467179",
        "lon": "19.016609",
        "parent": "CSF01926"
    },
    {
        "id": "F01927",
        "name": "Sasadi út",
        "lat": "47.465281",
        "lon": "19.015483",
        "parent": "CSF01926"
    },
    {
        "id": "F01928",
        "name": "Nagyszeben út",
        "lat": "47.464837",
        "lon": "19.011487",
        "parent": ""
    },
    {
        "id": "F01929",
        "name": "Jégvirág utca",
        "lat": "47.462264",
        "lon": "19.008876",
        "parent": ""
    },
    {
        "id": "F01930",
        "name": "Gazdagréti út",
        "lat": "47.462145",
        "lon": "19.004897",
        "parent": "CS062519"
    },
    {
        "id": "F01931",
        "name": "Gazdagréti út",
        "lat": "47.462766",
        "lon": "19.005891",
        "parent": "CS062519"
    },
    {
        "id": "F01932",
        "name": "Poprádi út",
        "lat": "47.461387",
        "lon": "18.999168",
        "parent": "CSF01932"
    },
    {
        "id": "F01933",
        "name": "Poprádi út",
        "lat": "47.461235",
        "lon": "18.999460",
        "parent": "CSF01932"
    },
    {
        "id": "F01934",
        "name": "Keserűvíz-forrás",
        "lat": "47.458535",
        "lon": "18.997327",
        "parent": "CSF01934"
    },
    {
        "id": "F01935",
        "name": "Keserűvíz-forrás",
        "lat": "47.458292",
        "lon": "18.996889",
        "parent": "CSF01934"
    },
    {
        "id": "F01936",
        "name": "Vitorlázó út",
        "lat": "47.452460",
        "lon": "18.990755",
        "parent": "CSF01937"
    },
    {
        "id": "F01937",
        "name": "Vitorlázó út",
        "lat": "47.452784",
        "lon": "18.990901",
        "parent": "CSF01937"
    },
    {
        "id": "F01938",
        "name": "Torma utca",
        "lat": "47.450429",
        "lon": "19.019692",
        "parent": "CSF01938"
    },
    {
        "id": "F01939",
        "name": "Torma utca",
        "lat": "47.450349",
        "lon": "19.019613",
        "parent": "CSF01938"
    },
    {
        "id": "F01940",
        "name": "Kecskeméti József utca",
        "lat": "47.449188",
        "lon": "19.020727",
        "parent": ""
    },
    {
        "id": "F01941",
        "name": "Duránci utca",
        "lat": "47.451069",
        "lon": "19.022636",
        "parent": "CSF01941"
    },
    {
        "id": "F01942",
        "name": "Duránci utca",
        "lat": "47.449998",
        "lon": "19.022902",
        "parent": "CSF01941"
    },
    {
        "id": "F01943",
        "name": "Narancs utca",
        "lat": "47.447750",
        "lon": "19.025369",
        "parent": "CSF01944"
    },
    {
        "id": "F01944",
        "name": "Narancs utca",
        "lat": "47.448101",
        "lon": "19.025183",
        "parent": "CSF01944"
    },
    {
        "id": "F01945",
        "name": "Gépész utca",
        "lat": "47.453326",
        "lon": "19.021507",
        "parent": "CSF01945"
    },
    {
        "id": "F01946",
        "name": "Gépész utca",
        "lat": "47.452958",
        "lon": "19.023232",
        "parent": "CSF01945"
    },
    {
        "id": "F01947",
        "name": "Hajtány sor",
        "lat": "47.455279",
        "lon": "19.024079",
        "parent": "CSF01948"
    },
    {
        "id": "F01948",
        "name": "Hajtány sor",
        "lat": "47.456358",
        "lon": "19.023707",
        "parent": "CSF01948"
    },
    {
        "id": "F01951",
        "name": "Than Károly utca",
        "lat": "47.460910",
        "lon": "19.025270",
        "parent": "CS062511"
    },
    {
        "id": "F01952",
        "name": "Borszéki utca",
        "lat": "47.458526",
        "lon": "19.023733",
        "parent": "CS062512"
    },
    {
        "id": "F01955",
        "name": "Bikás park M",
        "lat": "47.463583",
        "lon": "19.033002",
        "parent": "CSF01958"
    },
    {
        "id": "F01956",
        "name": "Bikás park M",
        "lat": "47.463807",
        "lon": "19.032790",
        "parent": "CSF01958"
    },
    {
        "id": "F01958",
        "name": "Bikás park M",
        "lat": "47.464295",
        "lon": "19.033866",
        "parent": "CSF01958"
    },
    {
        "id": "F01959",
        "name": "Bikás park M",
        "lat": "47.464241",
        "lon": "19.033574",
        "parent": "CSF01958"
    },
    {
        "id": "F01960",
        "name": "Bornemissza tér",
        "lat": "47.458429",
        "lon": "19.033614",
        "parent": "CSF01960"
    },
    {
        "id": "F01962",
        "name": "Bornemissza tér",
        "lat": "47.458330",
        "lon": "19.033322",
        "parent": "CSF01960"
    },
    {
        "id": "F01964",
        "name": "Csurgói út",
        "lat": "47.455895",
        "lon": "19.033312",
        "parent": ""
    },
    {
        "id": "F01965",
        "name": "Csurgói út",
        "lat": "47.454093",
        "lon": "19.033416",
        "parent": ""
    },
    {
        "id": "F01966",
        "name": "Nyírbátor utca",
        "lat": "47.450162",
        "lon": "19.033192",
        "parent": "CSF01966"
    },
    {
        "id": "F01967",
        "name": "Nyírbátor utca",
        "lat": "47.449596",
        "lon": "19.033338",
        "parent": "CSF01966"
    },
    {
        "id": "F01968",
        "name": "Fonyód utca \/ Sáfrány utca",
        "lat": "47.444415",
        "lon": "19.033697",
        "parent": "CSF01968"
    },
    {
        "id": "F01969",
        "name": "Fonyód utca \/ Sáfrány utca",
        "lat": "47.444055",
        "lon": "19.033883",
        "parent": "CSF01968"
    },
    {
        "id": "F01970",
        "name": "Albertfalva vasútállomás",
        "lat": "47.441590",
        "lon": "19.034242",
        "parent": "CS009524"
    },
    {
        "id": "F01972",
        "name": "Vegyész utca",
        "lat": "47.442580",
        "lon": "19.045286",
        "parent": "CSF01973"
    },
    {
        "id": "F01973",
        "name": "Vegyész utca",
        "lat": "47.443066",
        "lon": "19.045670",
        "parent": "CSF01973"
    },
    {
        "id": "F01974",
        "name": "Építész utca",
        "lat": "47.448040",
        "lon": "19.046360",
        "parent": "CSF01974"
    },
    {
        "id": "F01975",
        "name": "Építész utca",
        "lat": "47.447132",
        "lon": "19.045922",
        "parent": "CSF01974"
    },
    {
        "id": "F01976",
        "name": "Kondorosi út",
        "lat": "47.449471",
        "lon": "19.049065",
        "parent": "CSF01976"
    },
    {
        "id": "F01977",
        "name": "Kondorosi út",
        "lat": "47.449210",
        "lon": "19.049158",
        "parent": "CSF01976"
    },
    {
        "id": "F01980",
        "name": "Galvani utca",
        "lat": "47.455407",
        "lon": "19.051598",
        "parent": "CSF01981"
    },
    {
        "id": "F01981",
        "name": "Galvani utca",
        "lat": "47.455416",
        "lon": "19.051956",
        "parent": "CSF01981"
    },
    {
        "id": "F01982",
        "name": "Hengermalom út",
        "lat": "47.461317",
        "lon": "19.051665",
        "parent": "CSF01982"
    },
    {
        "id": "F01983",
        "name": "Hengermalom út",
        "lat": "47.461047",
        "lon": "19.051784",
        "parent": "CSF01982"
    },
    {
        "id": "F01984",
        "name": "Budafoki út \/ Dombóvári út",
        "lat": "47.468720",
        "lon": "19.052992",
        "parent": "CS066453"
    },
    {
        "id": "F01985",
        "name": "Budafoki út \/ Dombóvári út",
        "lat": "47.469808",
        "lon": "19.053310",
        "parent": "CS066453"
    },
    {
        "id": "F01986",
        "name": "Budafoki út \/ Szerémi sor",
        "lat": "47.474371",
        "lon": "19.052707",
        "parent": "CSF01986"
    },
    {
        "id": "F01988",
        "name": "Budafoki út \/ Szerémi sor",
        "lat": "47.473676",
        "lon": "19.053125",
        "parent": "CSF01986"
    },
    {
        "id": "F01989",
        "name": "Budafoki út \/ Szerémi sor",
        "lat": "47.473703",
        "lon": "19.052793",
        "parent": "CSF01986"
    },
    {
        "id": "F01990",
        "name": "Budafoki út \/ Szerémi sor",
        "lat": "47.473901",
        "lon": "19.052912",
        "parent": "CSF01986"
    },
    {
        "id": "F01991",
        "name": "Budafoki út \/ Szerémi sor",
        "lat": "47.472866",
        "lon": "19.052567",
        "parent": "CSF01986"
    },
    {
        "id": "F01992",
        "name": "Budafoki út \/ Szerémi sor",
        "lat": "47.474125",
        "lon": "19.053761",
        "parent": "CSF01986"
    },
    {
        "id": "F01995",
        "name": "Újbuda-központ M",
        "lat": "47.473829",
        "lon": "19.047367",
        "parent": "CSF01999"
    },
    {
        "id": "F01997",
        "name": "Újbuda-központ M",
        "lat": "47.474467",
        "lon": "19.046478",
        "parent": "CSF01999"
    },
    {
        "id": "F01998",
        "name": "Újbuda-központ M",
        "lat": "47.474045",
        "lon": "19.046863",
        "parent": "CSF01999"
    },
    {
        "id": "F01999",
        "name": "Újbuda-központ M",
        "lat": "47.474800",
        "lon": "19.046664",
        "parent": "CSF01999"
    },
    {
        "id": "F02000",
        "name": "Újbuda-központ M",
        "lat": "47.474027",
        "lon": "19.048534",
        "parent": "CSF01999"
    },
    {
        "id": "F02002",
        "name": "Hauszmann Alajos utca",
        "lat": "47.467883",
        "lon": "19.043971",
        "parent": "CSF02002"
    },
    {
        "id": "F02003",
        "name": "Hauszmann Alajos utca",
        "lat": "47.467039",
        "lon": "19.043919",
        "parent": "CSF02002"
    },
    {
        "id": "F02004",
        "name": "Hauszmann Alajos utca",
        "lat": "47.467345",
        "lon": "19.043933",
        "parent": "CSF02002"
    },
    {
        "id": "F02005",
        "name": "Hauszmann Alajos utca",
        "lat": "47.467633",
        "lon": "19.044304",
        "parent": "CSF02002"
    },
    {
        "id": "F02006",
        "name": "Etele út \/ Fehérvári út",
        "lat": "47.462747",
        "lon": "19.040748",
        "parent": "CSF02009"
    },
    {
        "id": "F02007",
        "name": "Etele út \/ Fehérvári út",
        "lat": "47.462261",
        "lon": "19.042778",
        "parent": "CSF02009"
    },
    {
        "id": "F02008",
        "name": "Etele út \/ Fehérvári út",
        "lat": "47.461733",
        "lon": "19.041745",
        "parent": "CSF02009"
    },
    {
        "id": "F02009",
        "name": "Etele út \/ Fehérvári út",
        "lat": "47.463398",
        "lon": "19.042572",
        "parent": "CSF02009"
    },
    {
        "id": "F02010",
        "name": "Etele út \/ Fehérvári út",
        "lat": "47.462639",
        "lon": "19.042274",
        "parent": "CSF02009"
    },
    {
        "id": "F02011",
        "name": "Etele út \/ Fehérvári út",
        "lat": "47.461985",
        "lon": "19.042262",
        "parent": "CSF02009"
    },
    {
        "id": "F02012",
        "name": "Andor utca",
        "lat": "47.456399",
        "lon": "19.040234",
        "parent": "CSF02012"
    },
    {
        "id": "F02013",
        "name": "Andor utca",
        "lat": "47.456129",
        "lon": "19.039889",
        "parent": "CSF02012"
    },
    {
        "id": "F02014",
        "name": "Andor utca",
        "lat": "47.455715",
        "lon": "19.039836",
        "parent": "CSF02012"
    },
    {
        "id": "F02015",
        "name": "Andor utca",
        "lat": "47.455500",
        "lon": "19.039505",
        "parent": "CSF02012"
    },
    {
        "id": "F02016",
        "name": "Albertfalva kitérő",
        "lat": "47.452172",
        "lon": "19.038418",
        "parent": "CS008685"
    },
    {
        "id": "F02017",
        "name": "Albertfalva kitérő",
        "lat": "47.452666",
        "lon": "19.038776",
        "parent": "CS008685"
    },
    {
        "id": "F02019",
        "name": "Albertfalva utca",
        "lat": "47.448058",
        "lon": "19.037555",
        "parent": "CSF02019"
    },
    {
        "id": "F02020",
        "name": "Albertfalva utca",
        "lat": "47.447737",
        "lon": "19.037424",
        "parent": "CSF02019"
    },
    {
        "id": "F02021",
        "name": "Albertfalva utca",
        "lat": "47.447545",
        "lon": "19.037489",
        "parent": "CSF02019"
    },
    {
        "id": "F02022",
        "name": "Albertfalva utca",
        "lat": "47.447342",
        "lon": "19.037597",
        "parent": "CSF02019"
    },
    {
        "id": "F02024",
        "name": "Fonyód utca",
        "lat": "47.443920",
        "lon": "19.036880",
        "parent": "CSF02024"
    },
    {
        "id": "F02025",
        "name": "Fonyód utca",
        "lat": "47.443609",
        "lon": "19.036742",
        "parent": "CSF02024"
    },
    {
        "id": "F02026",
        "name": "Fonyód utca",
        "lat": "47.443717",
        "lon": "19.037001",
        "parent": "CSF02024"
    },
    {
        "id": "F02027",
        "name": "Fonyód utca",
        "lat": "47.443407",
        "lon": "19.036800",
        "parent": "CSF02024"
    },
    {
        "id": "F02028",
        "name": "Budafok kocsiszín",
        "lat": "47.440830",
        "lon": "19.036498",
        "parent": "CSF02029"
    },
    {
        "id": "F02029",
        "name": "Budafok kocsiszín",
        "lat": "47.441711",
        "lon": "19.036537",
        "parent": "CSF02029"
    },
    {
        "id": "F02030",
        "name": "Budafok kocsiszín",
        "lat": "47.441294",
        "lon": "19.036456",
        "parent": "CSF02029"
    },
    {
        "id": "F02031",
        "name": "Budafok kocsiszín",
        "lat": "47.441333",
        "lon": "19.036378",
        "parent": "CSF02029"
    },
    {
        "id": "F02032",
        "name": "Tétényi út 30.",
        "lat": "47.466382",
        "lon": "19.034197",
        "parent": "CSF02032"
    },
    {
        "id": "F02033",
        "name": "Tétényi út 30.",
        "lat": "47.466337",
        "lon": "19.033866",
        "parent": "CSF02032"
    },
    {
        "id": "F02034",
        "name": "Szent Imre Kórház",
        "lat": "47.469429",
        "lon": "19.033704",
        "parent": "CSF02034"
    },
    {
        "id": "F02035",
        "name": "Szent Imre Kórház",
        "lat": "47.468071",
        "lon": "19.033823",
        "parent": "CSF02034"
    },
    {
        "id": "F02037",
        "name": "Szent Gellért-templom",
        "lat": "47.469185",
        "lon": "19.024922",
        "parent": "CS044178"
    },
    {
        "id": "F02038",
        "name": "Szent Gellért-templom",
        "lat": "47.468573",
        "lon": "19.023742",
        "parent": "CS044178"
    },
    {
        "id": "F02039",
        "name": "Szent Gellért-templom",
        "lat": "47.468663",
        "lon": "19.024100",
        "parent": "CS044178"
    },
    {
        "id": "F02040",
        "name": "Csóka utca",
        "lat": "47.470904",
        "lon": "19.029219",
        "parent": "CSF02040"
    },
    {
        "id": "F02041",
        "name": "Csóka utca",
        "lat": "47.470742",
        "lon": "19.028569",
        "parent": "CSF02040"
    },
    {
        "id": "F02042",
        "name": "Csóka utca",
        "lat": "47.470643",
        "lon": "19.028450",
        "parent": "CSF02040"
    },
    {
        "id": "F02043",
        "name": "Csóka utca",
        "lat": "47.470805",
        "lon": "19.029113",
        "parent": "CSF02040"
    },
    {
        "id": "F02044",
        "name": "Karolina út",
        "lat": "47.471570",
        "lon": "19.033464",
        "parent": "CS009412"
    },
    {
        "id": "F02045",
        "name": "Karolina út",
        "lat": "47.472730",
        "lon": "19.033026",
        "parent": "CS009412"
    },
    {
        "id": "F02046",
        "name": "Karolina út",
        "lat": "47.472838",
        "lon": "19.033676",
        "parent": "CS009412"
    },
    {
        "id": "F02047",
        "name": "Karolina út",
        "lat": "47.472694",
        "lon": "19.033212",
        "parent": "CS009412"
    },
    {
        "id": "F02048",
        "name": "Karolina út",
        "lat": "47.473432",
        "lon": "19.035401",
        "parent": "CS009412"
    },
    {
        "id": "F02049",
        "name": "Ajnácskő utca",
        "lat": "47.473656",
        "lon": "19.025517",
        "parent": "CSF02052"
    },
    {
        "id": "F02050",
        "name": "Ajnácskő utca",
        "lat": "47.473665",
        "lon": "19.025132",
        "parent": "CSF02052"
    },
    {
        "id": "F02051",
        "name": "Ajnácskő utca",
        "lat": "47.474348",
        "lon": "19.025092",
        "parent": "CSF02052"
    },
    {
        "id": "F02052",
        "name": "Ajnácskő utca",
        "lat": "47.474519",
        "lon": "19.024747",
        "parent": "CSF02052"
    },
    {
        "id": "F02053",
        "name": "Dayka Gábor utca",
        "lat": "47.470643",
        "lon": "19.019684",
        "parent": "CSF02053"
    },
    {
        "id": "F02054",
        "name": "Dayka Gábor utca",
        "lat": "47.470427",
        "lon": "19.020056",
        "parent": "CSF02053"
    },
    {
        "id": "F02055",
        "name": "Nagyszeben tér",
        "lat": "47.466616",
        "lon": "19.005357",
        "parent": "CSF02055"
    },
    {
        "id": "F02056",
        "name": "Nagyszeben tér",
        "lat": "47.466292",
        "lon": "19.005530",
        "parent": "CSF02055"
    },
    {
        "id": "F02057",
        "name": "Frankhegy utca",
        "lat": "47.470752",
        "lon": "19.001321",
        "parent": "CSF02058"
    },
    {
        "id": "F02058",
        "name": "Frankhegy utca",
        "lat": "47.471040",
        "lon": "19.001135",
        "parent": "CSF02058"
    },
    {
        "id": "F02059",
        "name": "Kaptárkő utca",
        "lat": "47.471902",
        "lon": "18.999344",
        "parent": "CSF02060"
    },
    {
        "id": "F02060",
        "name": "Kaptárkő utca",
        "lat": "47.472559",
        "lon": "18.998375",
        "parent": "CSF02060"
    },
    {
        "id": "F02061",
        "name": "Regős utca",
        "lat": "47.464942",
        "lon": "19.003926",
        "parent": "CSF02062"
    },
    {
        "id": "F02062",
        "name": "Regős utca",
        "lat": "47.465248",
        "lon": "19.003555",
        "parent": "CSF02062"
    },
    {
        "id": "F02063",
        "name": "Törökugrató utca",
        "lat": "47.466614",
        "lon": "19.000847",
        "parent": "CSF02064"
    },
    {
        "id": "F02064",
        "name": "Törökugrató utca",
        "lat": "47.466830",
        "lon": "19.000662",
        "parent": "CSF02064"
    },
    {
        "id": "F02065",
        "name": "Szent Angyalok-templom",
        "lat": "47.468863",
        "lon": "18.996592",
        "parent": "CSF02066"
    },
    {
        "id": "F02066",
        "name": "Szent Angyalok-templom",
        "lat": "47.469240",
        "lon": "18.996233",
        "parent": "CSF02066"
    },
    {
        "id": "F02067",
        "name": "Tűzkő utca",
        "lat": "47.470155",
        "lon": "18.994848",
        "parent": "CSF02068"
    },
    {
        "id": "F02068",
        "name": "Tűzkő utca",
        "lat": "47.470506",
        "lon": "18.994675",
        "parent": "CSF02068"
    },
    {
        "id": "F02069",
        "name": "Kamaraerdei út 11.",
        "lat": "47.443081",
        "lon": "18.978885",
        "parent": "CSF02070"
    },
    {
        "id": "F02070",
        "name": "Kamaraerdei út 11.",
        "lat": "47.443117",
        "lon": "18.978726",
        "parent": "CSF02070"
    },
    {
        "id": "F02071",
        "name": "Telekes utca",
        "lat": "47.473673",
        "lon": "18.996118",
        "parent": "CSF02072"
    },
    {
        "id": "F02072",
        "name": "Telekes utca",
        "lat": "47.473943",
        "lon": "18.995853",
        "parent": "CSF02072"
    },
    {
        "id": "F02073",
        "name": "Szent Pio atya tér",
        "lat": "47.474616",
        "lon": "18.989807",
        "parent": "CSF02074"
    },
    {
        "id": "F02074",
        "name": "Szent Pio atya tér",
        "lat": "47.474992",
        "lon": "18.988993",
        "parent": "CSF02074"
    },
    {
        "id": "F02075",
        "name": "Irhás árok",
        "lat": "47.476575",
        "lon": "18.987389",
        "parent": "CSF02076"
    },
    {
        "id": "F02076",
        "name": "Irhás árok",
        "lat": "47.476763",
        "lon": "18.987452",
        "parent": "CSF02076"
    },
    {
        "id": "F02077",
        "name": "Oltvány köz",
        "lat": "47.477863",
        "lon": "18.990215",
        "parent": "CSF02078"
    },
    {
        "id": "F02078",
        "name": "Oltvány köz",
        "lat": "47.478167",
        "lon": "18.990884",
        "parent": "CSF02078"
    },
    {
        "id": "F02079",
        "name": "Eper utca",
        "lat": "47.480607",
        "lon": "18.992547",
        "parent": "CSF02080"
    },
    {
        "id": "F02080",
        "name": "Eper utca",
        "lat": "47.480922",
        "lon": "18.992679",
        "parent": "CSF02080"
    },
    {
        "id": "F02081",
        "name": "Márton Áron tér",
        "lat": "47.481905",
        "lon": "18.998145",
        "parent": "CSF02085"
    },
    {
        "id": "F02082",
        "name": "Márton Áron tér",
        "lat": "47.481707",
        "lon": "18.999043",
        "parent": "CSF02085"
    },
    {
        "id": "F02083",
        "name": "Márton Áron tér",
        "lat": "47.481518",
        "lon": "18.998870",
        "parent": "CSF02085"
    },
    {
        "id": "F02084",
        "name": "Márton Áron tér",
        "lat": "47.481940",
        "lon": "18.998857",
        "parent": "CSF02085"
    },
    {
        "id": "F02085",
        "name": "Márton Áron tér",
        "lat": "47.482022",
        "lon": "18.999215",
        "parent": "CSF02085"
    },
    {
        "id": "F02086",
        "name": "Zajzon utca",
        "lat": "47.479872",
        "lon": "19.000690",
        "parent": "CSF02086"
    },
    {
        "id": "F02087",
        "name": "Zajzon utca",
        "lat": "47.479405",
        "lon": "19.001062",
        "parent": "CSF02086"
    },
    {
        "id": "F02088",
        "name": "Tömös utca",
        "lat": "47.477948",
        "lon": "19.002323",
        "parent": "CSF02088"
    },
    {
        "id": "F02089",
        "name": "Tömös utca",
        "lat": "47.477634",
        "lon": "19.002748",
        "parent": "CSF02088"
    },
    {
        "id": "F02090",
        "name": "Nagyszalonta köz",
        "lat": "47.475260",
        "lon": "19.004329",
        "parent": "CSF02091"
    },
    {
        "id": "F02091",
        "name": "Nagyszalonta köz",
        "lat": "47.475538",
        "lon": "19.003864",
        "parent": "CSF02091"
    },
    {
        "id": "F02092",
        "name": "Bereck utca",
        "lat": "47.473102",
        "lon": "19.008284",
        "parent": "CSF02093"
    },
    {
        "id": "F02093",
        "name": "Bereck utca",
        "lat": "47.473813",
        "lon": "19.007514",
        "parent": "CSF02093"
    },
    {
        "id": "F02094",
        "name": "Sümegvár utca",
        "lat": "47.469901",
        "lon": "19.012691",
        "parent": "CSF02094"
    },
    {
        "id": "F02095",
        "name": "Sümegvár utca",
        "lat": "47.469182",
        "lon": "19.013408",
        "parent": "CSF02094"
    },
    {
        "id": "F02096",
        "name": "Süveg utca",
        "lat": "47.481359",
        "lon": "19.004779",
        "parent": "CSF02097"
    },
    {
        "id": "F02097",
        "name": "Süveg utca",
        "lat": "47.481466",
        "lon": "19.004908",
        "parent": "CSF02097"
    },
    {
        "id": "F02098",
        "name": "Süveg utca",
        "lat": "47.481287",
        "lon": "19.004593",
        "parent": "CSF02097"
    },
    {
        "id": "F02099",
        "name": "Süveg utca",
        "lat": "47.481241",
        "lon": "19.004709",
        "parent": "CSF02097"
    },
    {
        "id": "F02100",
        "name": "Farkasréti temető",
        "lat": "47.483958",
        "lon": "19.005410",
        "parent": "CSF02101"
    },
    {
        "id": "F02101",
        "name": "Farkasréti temető",
        "lat": "47.484336",
        "lon": "19.005662",
        "parent": "CSF02101"
    },
    {
        "id": "F02102",
        "name": "Farkasréti temető",
        "lat": "47.483787",
        "lon": "19.006206",
        "parent": "CSF02101"
    },
    {
        "id": "F02103",
        "name": "Farkasréti temető",
        "lat": "47.483688",
        "lon": "19.005835",
        "parent": "CSF02101"
    },
    {
        "id": "F02104",
        "name": "Hegytető utca",
        "lat": "47.484445",
        "lon": "19.009284",
        "parent": "CSF02105"
    },
    {
        "id": "F02105",
        "name": "Hegytető utca",
        "lat": "47.484679",
        "lon": "19.009868",
        "parent": "CSF02105"
    },
    {
        "id": "F02106",
        "name": "Sion lépcső",
        "lat": "47.485212",
        "lon": "19.015958",
        "parent": "CSF02107"
    },
    {
        "id": "F02107",
        "name": "Sion lépcső",
        "lat": "47.485410",
        "lon": "19.016913",
        "parent": "CSF02107"
    },
    {
        "id": "F02108",
        "name": "Breznó lépcső",
        "lat": "47.484232",
        "lon": "19.020643",
        "parent": "CSF02108"
    },
    {
        "id": "F02109",
        "name": "Breznó lépcső",
        "lat": "47.483855",
        "lon": "19.021041",
        "parent": "CSF02108"
    },
    {
        "id": "F02110",
        "name": "Zólyomi út",
        "lat": "47.483244",
        "lon": "19.022835",
        "parent": "CSF02111"
    },
    {
        "id": "F02111",
        "name": "Zólyomi út",
        "lat": "47.483504",
        "lon": "19.022859",
        "parent": "CSF02111"
    },
    {
        "id": "F02112",
        "name": "BAH-csomópont",
        "lat": "47.486824",
        "lon": "19.023216",
        "parent": "CSF02165"
    },
    {
        "id": "F02113",
        "name": "Fehérló utca",
        "lat": "47.478154",
        "lon": "19.025717",
        "parent": "CSF02114"
    },
    {
        "id": "F02114",
        "name": "Fehérló utca",
        "lat": "47.478271",
        "lon": "19.025398",
        "parent": "CSF02114"
    },
    {
        "id": "F02115",
        "name": "Alsóhegy utca",
        "lat": "47.482941",
        "lon": "19.030090",
        "parent": "CSF02115"
    },
    {
        "id": "F02116",
        "name": "Alsóhegy utca",
        "lat": "47.482702",
        "lon": "19.030463",
        "parent": "CSF02115"
    },
    {
        "id": "F02117",
        "name": "Alsóhegy utca",
        "lat": "47.482840",
        "lon": "19.030635",
        "parent": "CSF02115"
    },
    {
        "id": "F02118",
        "name": "Alsóhegy utca",
        "lat": "47.482706",
        "lon": "19.030212",
        "parent": "CSF02115"
    },
    {
        "id": "F02119",
        "name": "Alsóhegy utca",
        "lat": "47.482184",
        "lon": "19.030171",
        "parent": "CSF02115"
    },
    {
        "id": "F02120",
        "name": "Alsóhegy utca",
        "lat": "47.482031",
        "lon": "19.029932",
        "parent": "CSF02115"
    },
    {
        "id": "F02121",
        "name": "Diószegi út (Vérellátó Szolgálat)",
        "lat": "47.478443",
        "lon": "19.031832",
        "parent": "CSF02122"
    },
    {
        "id": "F02122",
        "name": "Diószegi út (Vérellátó Szolgálat)",
        "lat": "47.478605",
        "lon": "19.031448",
        "parent": "CSF02122"
    },
    {
        "id": "F02123",
        "name": "Vincellér utca",
        "lat": "47.476663",
        "lon": "19.035720",
        "parent": "CSF02123"
    },
    {
        "id": "F02124",
        "name": "Vincellér utca",
        "lat": "47.476276",
        "lon": "19.035906",
        "parent": "CSF02123"
    },
    {
        "id": "F02125",
        "name": "Szüret utca",
        "lat": "47.480332",
        "lon": "19.035732",
        "parent": "CSF02129"
    },
    {
        "id": "F02126",
        "name": "Szüret utca",
        "lat": "47.480283",
        "lon": "19.036129",
        "parent": "CSF02129"
    },
    {
        "id": "F02127",
        "name": "Szüret utca",
        "lat": "47.480185",
        "lon": "19.036537",
        "parent": "CSF02129"
    },
    {
        "id": "F02128",
        "name": "Szüret utca",
        "lat": "47.479972",
        "lon": "19.037389",
        "parent": "CSF02129"
    },
    {
        "id": "F02129",
        "name": "Szüret utca",
        "lat": "47.480502",
        "lon": "19.036553",
        "parent": "CSF02129"
    },
    {
        "id": "F02130",
        "name": "Iglói utca",
        "lat": "47.483489",
        "lon": "19.039843",
        "parent": "CSF02130"
    },
    {
        "id": "F02131",
        "name": "Iglói utca",
        "lat": "47.483399",
        "lon": "19.040374",
        "parent": "CSF02130"
    },
    {
        "id": "F02132",
        "name": "Balogh Tihamér utca",
        "lat": "47.481789",
        "lon": "19.042935",
        "parent": "CSF02132"
    },
    {
        "id": "F02133",
        "name": "Balogh Tihamér utca",
        "lat": "47.481780",
        "lon": "19.043174",
        "parent": "CSF02132"
    },
    {
        "id": "F02134",
        "name": "Kelenhegyi lépcső",
        "lat": "47.481213",
        "lon": "19.045177",
        "parent": "CSF02135"
    },
    {
        "id": "F02135",
        "name": "Kelenhegyi lépcső",
        "lat": "47.481951",
        "lon": "19.045376",
        "parent": "CSF02135"
    },
    {
        "id": "F02136",
        "name": "Rezeda utca",
        "lat": "47.483372",
        "lon": "19.043598",
        "parent": "CSF02136"
    },
    {
        "id": "F02137",
        "name": "Rezeda utca",
        "lat": "47.483219",
        "lon": "19.043598",
        "parent": "CSF02136"
    },
    {
        "id": "F02138",
        "name": "Búsuló Juhász (Citadella)",
        "lat": "47.485225",
        "lon": "19.040533",
        "parent": "CSF00012"
    },
    {
        "id": "F02142",
        "name": "Szent Gellért tér M",
        "lat": "47.482889",
        "lon": "19.053782",
        "parent": "CS044592"
    },
    {
        "id": "F02143",
        "name": "Szent Gellért tér M",
        "lat": "47.482895",
        "lon": "19.053922",
        "parent": "CS044592"
    },
    {
        "id": "F02144",
        "name": "Szent Gellért tér M",
        "lat": "47.482473",
        "lon": "19.052940",
        "parent": "CS044592"
    },
    {
        "id": "F02145",
        "name": "Szent Gellért tér M",
        "lat": "47.482411",
        "lon": "19.052569",
        "parent": "CS044592"
    },
    {
        "id": "F02146",
        "name": "Tas vezér utca",
        "lat": "47.478854",
        "lon": "19.040156",
        "parent": "CS008041"
    },
    {
        "id": "F02147",
        "name": "Tas vezér utca",
        "lat": "47.478818",
        "lon": "19.040577",
        "parent": "CS008041"
    },
    {
        "id": "F02148",
        "name": "Gárdonyi tér",
        "lat": "47.479999",
        "lon": "19.051453",
        "parent": "CSF02149"
    },
    {
        "id": "F02149",
        "name": "Gárdonyi tér",
        "lat": "47.480522",
        "lon": "19.051932",
        "parent": "CSF02149"
    },
    {
        "id": "F02150",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.476959",
        "lon": "19.049782",
        "parent": "CSF02198"
    },
    {
        "id": "F02152",
        "name": "Budafoki út \/ Karinthy Frigyes út",
        "lat": "47.476872",
        "lon": "19.053383",
        "parent": "CSF02152"
    },
    {
        "id": "F02153",
        "name": "Budafoki út \/ Karinthy Frigyes út",
        "lat": "47.475843",
        "lon": "19.054080",
        "parent": "CSF02152"
    },
    {
        "id": "F02154",
        "name": "Budafoki út \/ Karinthy Frigyes út",
        "lat": "47.476068",
        "lon": "19.053430",
        "parent": "CSF02152"
    },
    {
        "id": "F02155",
        "name": "Budafoki út \/ Karinthy Frigyes út",
        "lat": "47.475412",
        "lon": "19.053165",
        "parent": "CSF02152"
    },
    {
        "id": "F02156",
        "name": "Budafoki út \/ Karinthy Frigyes út",
        "lat": "47.476140",
        "lon": "19.052660",
        "parent": "CSF02152"
    },
    {
        "id": "F02159",
        "name": "Szép utca",
        "lat": "47.431209",
        "lon": "18.979988",
        "parent": "CSF02159"
    },
    {
        "id": "F02160",
        "name": "Szép utca",
        "lat": "47.431083",
        "lon": "18.980160",
        "parent": "CSF02159"
    },
    {
        "id": "F02161",
        "name": "Dűlő út",
        "lat": "47.427313",
        "lon": "18.979290",
        "parent": "CSF02162"
    },
    {
        "id": "F02162",
        "name": "Dűlő út",
        "lat": "47.427719",
        "lon": "18.979979",
        "parent": "CSF02162"
    },
    {
        "id": "F02163",
        "name": "BAH-csomópont",
        "lat": "47.486967",
        "lon": "19.023123",
        "parent": "CSF02165"
    },
    {
        "id": "F02164",
        "name": "BAH-csomópont",
        "lat": "47.487318",
        "lon": "19.023560",
        "parent": "CSF02165"
    },
    {
        "id": "F02165",
        "name": "BAH-csomópont",
        "lat": "47.488317",
        "lon": "19.024356",
        "parent": "CSF02165"
    },
    {
        "id": "F02166",
        "name": "BAH-csomópont",
        "lat": "47.487190",
        "lon": "19.024696",
        "parent": "CSF02165"
    },
    {
        "id": "F02167",
        "name": "BAH-csomópont",
        "lat": "47.486852",
        "lon": "19.024596",
        "parent": "CSF02165"
    },
    {
        "id": "F02168",
        "name": "BAH-csomópont",
        "lat": "47.487786",
        "lon": "19.025564",
        "parent": "CSF02165"
    },
    {
        "id": "F02169",
        "name": "BAH-csomópont",
        "lat": "47.486725",
        "lon": "19.024901",
        "parent": "CSF02165"
    },
    {
        "id": "F02170",
        "name": "Budaörsi út \/ Villányi út",
        "lat": "47.484100",
        "lon": "19.027041",
        "parent": "CSF02172"
    },
    {
        "id": "F02171",
        "name": "Budaörsi út \/ Villányi út",
        "lat": "47.484109",
        "lon": "19.026812",
        "parent": "CSF02172"
    },
    {
        "id": "F02172",
        "name": "Budaörsi út \/ Villányi út",
        "lat": "47.484134",
        "lon": "19.026586",
        "parent": "CSF02172"
    },
    {
        "id": "F02173",
        "name": "Budaörsi út \/ Villányi út",
        "lat": "47.483838",
        "lon": "19.027065",
        "parent": "CSF02172"
    },
    {
        "id": "F02174",
        "name": "Muskotály köz",
        "lat": "47.483110",
        "lon": "19.026325",
        "parent": ""
    },
    {
        "id": "F02176",
        "name": "Kosztolányi Dezső tér",
        "lat": "47.475834",
        "lon": "19.042179",
        "parent": "CSF02176"
    },
    {
        "id": "F02180",
        "name": "Kosztolányi Dezső tér",
        "lat": "47.474864",
        "lon": "19.042062",
        "parent": "CSF02176"
    },
    {
        "id": "F02181",
        "name": "Kosztolányi Dezső tér",
        "lat": "47.475016",
        "lon": "19.039433",
        "parent": "CSF02176"
    },
    {
        "id": "F02182",
        "name": "Kosztolányi Dezső tér",
        "lat": "47.475638",
        "lon": "19.039952",
        "parent": "CSF02176"
    },
    {
        "id": "F02183",
        "name": "Kosztolányi Dezső tér",
        "lat": "47.474926",
        "lon": "19.038903",
        "parent": "CSF02176"
    },
    {
        "id": "F02184",
        "name": "Kosztolányi Dezső tér",
        "lat": "47.475214",
        "lon": "19.040176",
        "parent": "CSF02176"
    },
    {
        "id": "F02192",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.477804",
        "lon": "19.047977",
        "parent": "CSF02198"
    },
    {
        "id": "F02193",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.477554",
        "lon": "19.046333",
        "parent": "CSF02198"
    },
    {
        "id": "F02194",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.477248",
        "lon": "19.047328",
        "parent": "CSF02198"
    },
    {
        "id": "F02196",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.478057",
        "lon": "19.045710",
        "parent": "CSF02198"
    },
    {
        "id": "F02197",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.478074",
        "lon": "19.044899",
        "parent": "CSF02198"
    },
    {
        "id": "F02198",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.478111",
        "lon": "19.045272",
        "parent": "CSF02198"
    },
    {
        "id": "F02199",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.477725",
        "lon": "19.046267",
        "parent": "CSF02198"
    },
    {
        "id": "F02200",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.477815",
        "lon": "19.046253",
        "parent": "CSF02198"
    },
    {
        "id": "F02201",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.477813",
        "lon": "19.045854",
        "parent": "CSF02198"
    },
    {
        "id": "F02202",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.477365",
        "lon": "19.046161",
        "parent": "CSF02198"
    },
    {
        "id": "F02203",
        "name": "Móricz Zsigmond körtér M",
        "lat": "47.477544",
        "lon": "19.046849",
        "parent": "CSF02198"
    },
    {
        "id": "F02210",
        "name": "Kelenföld vasútállomás M",
        "lat": "47.465191",
        "lon": "19.022549",
        "parent": "CS007967"
    },
    {
        "id": "F02211",
        "name": "Herend utca",
        "lat": "47.447275",
        "lon": "19.033391",
        "parent": "CSF02211"
    },
    {
        "id": "F02212",
        "name": "Herend utca",
        "lat": "47.446672",
        "lon": "19.033591",
        "parent": "CSF02211"
    },
    {
        "id": "F02213",
        "name": "Puskás Tivadar utca",
        "lat": "47.460380",
        "lon": "19.033388",
        "parent": "CSF02214"
    },
    {
        "id": "F02214",
        "name": "Puskás Tivadar utca",
        "lat": "47.461120",
        "lon": "19.033681",
        "parent": "CSF02214"
    },
    {
        "id": "F02215",
        "name": "Bártfai utca",
        "lat": "47.464220",
        "lon": "19.028068",
        "parent": "CSF02216"
    },
    {
        "id": "F02216",
        "name": "Bártfai utca",
        "lat": "47.464311",
        "lon": "19.028970",
        "parent": "CSF02216"
    },
    {
        "id": "F02217",
        "name": "Rupphegyi út",
        "lat": "47.463188",
        "lon": "18.985027",
        "parent": "CSF02217"
    },
    {
        "id": "F02218",
        "name": "Rupphegyi út",
        "lat": "47.463107",
        "lon": "18.984297",
        "parent": "CSF02217"
    },
    {
        "id": "F02219",
        "name": "Albertfalva vasútállomás",
        "lat": "47.441896",
        "lon": "19.034546",
        "parent": "CS009524"
    },
    {
        "id": "F02220",
        "name": "Kelenföldi autóbuszgarázs",
        "lat": "47.473324",
        "lon": "19.030213",
        "parent": "CSF02220"
    },
    {
        "id": "F02221",
        "name": "Kelenföldi autóbuszgarázs",
        "lat": "47.473306",
        "lon": "19.030718",
        "parent": "CSF02220"
    },
    {
        "id": "F02222",
        "name": "Petőfi híd, budai hídfő",
        "lat": "47.476590",
        "lon": "19.059228",
        "parent": "CSF02225"
    },
    {
        "id": "F02224",
        "name": "Petőfi híd, budai hídfő",
        "lat": "47.476662",
        "lon": "19.058883",
        "parent": "CSF02225"
    },
    {
        "id": "F02225",
        "name": "Petőfi híd, budai hídfő",
        "lat": "47.476958",
        "lon": "19.059586",
        "parent": "CSF02225"
    },
    {
        "id": "F02226",
        "name": "Gazdagréti tér",
        "lat": "47.473133",
        "lon": "18.992276",
        "parent": "CSF02229"
    },
    {
        "id": "F02227",
        "name": "Gazdagréti tér",
        "lat": "47.473331",
        "lon": "18.992515",
        "parent": "CSF02229"
    },
    {
        "id": "F02228",
        "name": "Gazdagréti tér",
        "lat": "47.473232",
        "lon": "18.992396",
        "parent": "CSF02229"
    },
    {
        "id": "F02229",
        "name": "Gazdagréti tér",
        "lat": "47.473465",
        "lon": "18.992948",
        "parent": "CSF02229"
    },
    {
        "id": "F02232",
        "name": "Örsöddűlő",
        "lat": "47.455304",
        "lon": "18.993590",
        "parent": "CSF02232"
    },
    {
        "id": "F02233",
        "name": "Örsöddűlő",
        "lat": "47.455142",
        "lon": "18.993232",
        "parent": "CSF02232"
    },
    {
        "id": "F02234",
        "name": "Kelenföldi Erőmű",
        "lat": "47.464528",
        "lon": "19.052819",
        "parent": "CSF02234"
    },
    {
        "id": "F02235",
        "name": "Kelenföldi Erőmű",
        "lat": "47.464474",
        "lon": "19.053111",
        "parent": "CSF02234"
    },
    {
        "id": "F02236",
        "name": "Hengermalom út",
        "lat": "47.459233",
        "lon": "19.052095",
        "parent": "CSF01982"
    },
    {
        "id": "F02237",
        "name": "Hengermalom út",
        "lat": "47.459430",
        "lon": "19.052461",
        "parent": "CSF01982"
    },
    {
        "id": "F02238",
        "name": "Csonka János tér",
        "lat": "47.469783",
        "lon": "19.044821",
        "parent": "CS009425"
    },
    {
        "id": "F02239",
        "name": "Csonka János tér",
        "lat": "47.470259",
        "lon": "19.045087",
        "parent": "CS009425"
    },
    {
        "id": "F02240",
        "name": "Kalotaszeg utca",
        "lat": "47.459178",
        "lon": "19.041003",
        "parent": "CS049186"
    },
    {
        "id": "F02241",
        "name": "Kalotaszeg utca",
        "lat": "47.458827",
        "lon": "19.040976",
        "parent": "CS049186"
    },
    {
        "id": "F02242",
        "name": "Regős köz",
        "lat": "47.468270",
        "lon": "19.003486",
        "parent": "CSF02243"
    },
    {
        "id": "F02243",
        "name": "Regős köz",
        "lat": "47.468612",
        "lon": "19.003366",
        "parent": "CSF02243"
    },
    {
        "id": "F02244",
        "name": "Torbágy utca",
        "lat": "47.467809",
        "lon": "18.998644",
        "parent": "CSF02245"
    },
    {
        "id": "F02245",
        "name": "Torbágy utca",
        "lat": "47.467971",
        "lon": "18.998565",
        "parent": "CSF02245"
    },
    {
        "id": "F02246",
        "name": "Előpatak utca",
        "lat": "47.471538",
        "lon": "19.010554",
        "parent": "CSF02246"
    },
    {
        "id": "F02247",
        "name": "Előpatak utca",
        "lat": "47.471124",
        "lon": "19.010886",
        "parent": "CSF02246"
    },
    {
        "id": "F02252",
        "name": "Pető Intézet (Villányi út)",
        "lat": "47.481864",
        "lon": "19.032616",
        "parent": "CSF02252"
    },
    {
        "id": "F02253",
        "name": "Pető Intézet (Villányi út)",
        "lat": "47.481659",
        "lon": "19.032915",
        "parent": "CSF02252"
    },
    {
        "id": "F02254",
        "name": "Ménesi út",
        "lat": "47.481573",
        "lon": "19.038132",
        "parent": "CSF02255"
    },
    {
        "id": "F02255",
        "name": "Ménesi út",
        "lat": "47.481933",
        "lon": "19.038371",
        "parent": "CSF02255"
    },
    {
        "id": "F02259",
        "name": "Hengermalom út \/ Szerémi út",
        "lat": "47.461938",
        "lon": "19.047128",
        "parent": "CS066458"
    },
    {
        "id": "F02260",
        "name": "Hengermalom út \/ Szerémi út",
        "lat": "47.461776",
        "lon": "19.046386",
        "parent": "CS066458"
    },
    {
        "id": "F02261",
        "name": "Hollókő utca",
        "lat": "47.475365",
        "lon": "19.029854",
        "parent": "CSF02262"
    },
    {
        "id": "F02262",
        "name": "Hollókő utca",
        "lat": "47.475689",
        "lon": "19.030425",
        "parent": "CSF02262"
    },
    {
        "id": "F02263",
        "name": "Albertfalva vasútállomás",
        "lat": "47.441878",
        "lon": "19.032067",
        "parent": "CS009524"
    },
    {
        "id": "F02264",
        "name": "Állvány utca",
        "lat": "47.445295",
        "lon": "19.028433",
        "parent": "CSF02265"
    },
    {
        "id": "F02265",
        "name": "Állvány utca",
        "lat": "47.445592",
        "lon": "19.028274",
        "parent": "CSF02265"
    },
    {
        "id": "F02266",
        "name": "Madárhegy",
        "lat": "47.462176",
        "lon": "18.993092",
        "parent": "CSF02266"
    },
    {
        "id": "F02267",
        "name": "Madárhegy",
        "lat": "47.461952",
        "lon": "18.993981",
        "parent": "CSF02266"
    },
    {
        "id": "F02268",
        "name": "Csillebérc, KFKI",
        "lat": "47.486638",
        "lon": "18.954644",
        "parent": "CSF02269"
    },
    {
        "id": "F02269",
        "name": "Csillebérc, KFKI",
        "lat": "47.486923",
        "lon": "18.954385",
        "parent": "CSF02269"
    },
    {
        "id": "F02270",
        "name": "KFKI étterem",
        "lat": "47.488995",
        "lon": "18.958601",
        "parent": "CSF02271"
    },
    {
        "id": "F02271",
        "name": "KFKI étterem",
        "lat": "47.489139",
        "lon": "18.958999",
        "parent": "CSF02271"
    },
    {
        "id": "F02272",
        "name": "Magas út",
        "lat": "47.490409",
        "lon": "18.961147",
        "parent": "CSF02272"
    },
    {
        "id": "F02273",
        "name": "Magas út",
        "lat": "47.490385",
        "lon": "18.960901",
        "parent": "CSF02272"
    },
    {
        "id": "F02274",
        "name": "Mindszenty József bíboros tér",
        "lat": "47.487279",
        "lon": "18.989749",
        "parent": ""
    },
    {
        "id": "F02275",
        "name": "Hó utca",
        "lat": "47.486426",
        "lon": "18.992116",
        "parent": "CSF02276"
    },
    {
        "id": "F02276",
        "name": "Hó utca",
        "lat": "47.486516",
        "lon": "18.992209",
        "parent": "CSF02276"
    },
    {
        "id": "F02277",
        "name": "Hajnalka utca",
        "lat": "47.484988",
        "lon": "18.994135",
        "parent": "CSF02278"
    },
    {
        "id": "F02278",
        "name": "Hajnalka utca",
        "lat": "47.485267",
        "lon": "18.994002",
        "parent": "CSF02278"
    },
    {
        "id": "F02279",
        "name": "Tamási Áron utca",
        "lat": "47.493446",
        "lon": "19.002549",
        "parent": "CSF02280"
    },
    {
        "id": "F02280",
        "name": "Tamási Áron utca",
        "lat": "47.493770",
        "lon": "19.002460",
        "parent": "CSF02280"
    },
    {
        "id": "F02281",
        "name": "Mártonhegyi út",
        "lat": "47.490532",
        "lon": "19.002326",
        "parent": "CSF02281"
    },
    {
        "id": "F02282",
        "name": "Mártonhegyi út",
        "lat": "47.490190",
        "lon": "19.002233",
        "parent": "CSF02281"
    },
    {
        "id": "F02283",
        "name": "Kempelen Farkas utca",
        "lat": "47.488077",
        "lon": "19.003907",
        "parent": "CSF02283"
    },
    {
        "id": "F02284",
        "name": "Kempelen Farkas utca",
        "lat": "47.487906",
        "lon": "19.004279",
        "parent": "CSF02283"
    },
    {
        "id": "F02285",
        "name": "Boldog Teréz anya tér",
        "lat": "47.488411",
        "lon": "19.006733",
        "parent": "CSF02286"
    },
    {
        "id": "F02286",
        "name": "Boldog Teréz anya tér",
        "lat": "47.489140",
        "lon": "19.007051",
        "parent": "CSF02286"
    },
    {
        "id": "F02287",
        "name": "Bürök utca",
        "lat": "47.491254",
        "lon": "19.009385",
        "parent": "CSF02288"
    },
    {
        "id": "F02288",
        "name": "Bürök utca",
        "lat": "47.491443",
        "lon": "19.009942",
        "parent": "CSF02288"
    },
    {
        "id": "F02289",
        "name": "Szendi árok",
        "lat": "47.491462",
        "lon": "19.011681",
        "parent": ""
    },
    {
        "id": "F02290",
        "name": "Németvölgyi út",
        "lat": "47.492535",
        "lon": "19.012164",
        "parent": "CSF02291"
    },
    {
        "id": "F02291",
        "name": "Németvölgyi út",
        "lat": "47.493540",
        "lon": "19.011945",
        "parent": "CSF02291"
    },
    {
        "id": "F02292",
        "name": "Apor Vilmos tér",
        "lat": "47.491031",
        "lon": "19.014043",
        "parent": "CSF02293"
    },
    {
        "id": "F02293",
        "name": "Apor Vilmos tér",
        "lat": "47.491124",
        "lon": "19.013612",
        "parent": "CSF02293"
    },
    {
        "id": "F02294",
        "name": "Apor Vilmos tér",
        "lat": "47.490914",
        "lon": "19.013980",
        "parent": "CSF02293"
    },
    {
        "id": "F02295",
        "name": "Apor Vilmos tér",
        "lat": "47.490833",
        "lon": "19.014312",
        "parent": "CSF02293"
    },
    {
        "id": "F02296",
        "name": "Vas Gereben utca",
        "lat": "47.489140",
        "lon": "19.009559",
        "parent": "CSF02297"
    },
    {
        "id": "F02297",
        "name": "Vas Gereben utca",
        "lat": "47.489392",
        "lon": "19.009745",
        "parent": "CSF02297"
    },
    {
        "id": "F02298",
        "name": "Zólyomi lépcső",
        "lat": "47.490400",
        "lon": "19.011854",
        "parent": "CSF02298"
    },
    {
        "id": "F02299",
        "name": "Zólyomi lépcső",
        "lat": "47.490284",
        "lon": "19.012226",
        "parent": "CSF02298"
    },
    {
        "id": "F02300",
        "name": "Apor Vilmos tér",
        "lat": "47.490500",
        "lon": "19.014840",
        "parent": "CSF02293"
    },
    {
        "id": "F02301",
        "name": "Apor Vilmos tér",
        "lat": "47.490419",
        "lon": "19.015251",
        "parent": "CSF02293"
    },
    {
        "id": "F02302",
        "name": "Sirály utca",
        "lat": "47.489656",
        "lon": "19.018105",
        "parent": "CS009522"
    },
    {
        "id": "F02303",
        "name": "Sirály utca",
        "lat": "47.489422",
        "lon": "19.018318",
        "parent": "CS009522"
    },
    {
        "id": "F02305",
        "name": "Kiss János altábornagy utca",
        "lat": "47.492039",
        "lon": "19.016843",
        "parent": "CSF02307"
    },
    {
        "id": "F02306",
        "name": "Kiss János altábornagy utca",
        "lat": "47.492218",
        "lon": "19.016505",
        "parent": "CSF02307"
    },
    {
        "id": "F02307",
        "name": "Kiss János altábornagy utca",
        "lat": "47.492561",
        "lon": "19.016657",
        "parent": "CSF02307"
    },
    {
        "id": "F02309",
        "name": "Nagy Jenő utca",
        "lat": "47.492148",
        "lon": "19.019086",
        "parent": ""
    },
    {
        "id": "F02310",
        "name": "Tartsay Vilmos utca",
        "lat": "47.492347",
        "lon": "19.023916",
        "parent": "CSF02311"
    },
    {
        "id": "F02311",
        "name": "Tartsay Vilmos utca",
        "lat": "47.492428",
        "lon": "19.024235",
        "parent": "CSF02311"
    },
    {
        "id": "F02313",
        "name": "Széchenyi-hegy, Gyermekvasút",
        "lat": "47.495153",
        "lon": "18.979507",
        "parent": ""
    },
    {
        "id": "F02314",
        "name": "Művész út",
        "lat": "47.496190",
        "lon": "18.983819",
        "parent": "CSF02315"
    },
    {
        "id": "F02315",
        "name": "Művész út",
        "lat": "47.496244",
        "lon": "18.984244",
        "parent": "CSF02315"
    },
    {
        "id": "F02316",
        "name": "Svábhegy",
        "lat": "47.497452",
        "lon": "18.989419",
        "parent": "CSF02458"
    },
    {
        "id": "F02317",
        "name": "Svábhegy",
        "lat": "47.497902",
        "lon": "18.989750",
        "parent": "CSF02458"
    },
    {
        "id": "F02318",
        "name": "Városkút",
        "lat": "47.500151",
        "lon": "18.989389",
        "parent": "CSF02319"
    },
    {
        "id": "F02319",
        "name": "Városkút",
        "lat": "47.500384",
        "lon": "18.989163",
        "parent": "CSF02319"
    },
    {
        "id": "F02320",
        "name": "Adonis utca",
        "lat": "47.503092",
        "lon": "18.989771",
        "parent": "CSF02388"
    },
    {
        "id": "F02321",
        "name": "Adonis utca",
        "lat": "47.503353",
        "lon": "18.990116",
        "parent": "CSF02388"
    },
    {
        "id": "F02322",
        "name": "Erdei iskola",
        "lat": "47.507196",
        "lon": "18.994333",
        "parent": "CSF02323"
    },
    {
        "id": "F02323",
        "name": "Erdei iskola",
        "lat": "47.507322",
        "lon": "18.994718",
        "parent": "CSF02323"
    },
    {
        "id": "F02324",
        "name": "Esze Tamás iskola",
        "lat": "47.507341",
        "lon": "18.997957",
        "parent": "CSF02324"
    },
    {
        "id": "F02325",
        "name": "Esze Tamás iskola",
        "lat": "47.507153",
        "lon": "18.998276",
        "parent": "CSF02324"
    },
    {
        "id": "F02326",
        "name": "Orgonás",
        "lat": "47.506723",
        "lon": "19.002497",
        "parent": "CSF02326"
    },
    {
        "id": "F02327",
        "name": "Orgonás",
        "lat": "47.506660",
        "lon": "19.003174",
        "parent": "CSF02326"
    },
    {
        "id": "F02328",
        "name": "Szent János Kórház",
        "lat": "47.508164",
        "lon": "19.008271",
        "parent": "CSF00159"
    },
    {
        "id": "F02329",
        "name": "Szent János Kórház",
        "lat": "47.508362",
        "lon": "19.008563",
        "parent": "CSF00159"
    },
    {
        "id": "F02330",
        "name": "Városmajor",
        "lat": "47.509407",
        "lon": "19.012784",
        "parent": "CSF00156"
    },
    {
        "id": "F02332",
        "name": "Széll Kálmán tér M (Csaba utca)",
        "lat": "47.506683",
        "lon": "19.022784",
        "parent": "CS073099"
    },
    {
        "id": "F02333",
        "name": "Széll Kálmán tér M (Csaba utca)",
        "lat": "47.506017",
        "lon": "19.023196",
        "parent": "CS073099"
    },
    {
        "id": "F02335",
        "name": "Maros utca",
        "lat": "47.505766",
        "lon": "19.021813",
        "parent": "CSF02335"
    },
    {
        "id": "F02337",
        "name": "Barabás Villa",
        "lat": "47.504902",
        "lon": "19.018826",
        "parent": "CSF02338"
    },
    {
        "id": "F02338",
        "name": "Barabás Villa",
        "lat": "47.505118",
        "lon": "19.018640",
        "parent": "CSF02338"
    },
    {
        "id": "F02339",
        "name": "Temes utca",
        "lat": "47.506826",
        "lon": "19.015122",
        "parent": "CSF02339"
    },
    {
        "id": "F02340",
        "name": "Temes utca",
        "lat": "47.506709",
        "lon": "19.015148",
        "parent": "CSF02339"
    },
    {
        "id": "F02341",
        "name": "Szent János Kórház",
        "lat": "47.508749",
        "lon": "19.009704",
        "parent": "CSF00159"
    },
    {
        "id": "F02342",
        "name": "Szent János Kórház",
        "lat": "47.509136",
        "lon": "19.009053",
        "parent": "CSF00159"
    },
    {
        "id": "F02343",
        "name": "Szent János Kórház",
        "lat": "47.508389",
        "lon": "19.008483",
        "parent": "CSF00159"
    },
    {
        "id": "F02344",
        "name": "Rőzse köz",
        "lat": "47.508315",
        "lon": "19.003492",
        "parent": "CSF02344"
    },
    {
        "id": "F02345",
        "name": "Rőzse köz",
        "lat": "47.508153",
        "lon": "19.004116",
        "parent": "CSF02344"
    },
    {
        "id": "F02346",
        "name": "Józsa Béla köz",
        "lat": "47.509141",
        "lon": "18.999840",
        "parent": "CSF02347"
    },
    {
        "id": "F02347",
        "name": "Józsa Béla köz",
        "lat": "47.509330",
        "lon": "18.999614",
        "parent": "CSF02347"
    },
    {
        "id": "F02348",
        "name": "Pető Intézet",
        "lat": "47.511961",
        "lon": "19.003999",
        "parent": "CSF02349"
    },
    {
        "id": "F02349",
        "name": "Pető Intézet",
        "lat": "47.512084",
        "lon": "19.003502",
        "parent": "CSF02349"
    },
    {
        "id": "F02350",
        "name": "Virányos út",
        "lat": "47.512586",
        "lon": "19.000156",
        "parent": "CSF02351"
    },
    {
        "id": "F02351",
        "name": "Virányos út",
        "lat": "47.512623",
        "lon": "19.001085",
        "parent": "CSF02351"
    },
    {
        "id": "F02352",
        "name": "Moholy-Nagy Művészeti Egyetem",
        "lat": "47.516578",
        "lon": "18.990147",
        "parent": "CSF02352"
    },
    {
        "id": "F02353",
        "name": "Moholy-Nagy Művészeti Egyetem",
        "lat": "47.516453",
        "lon": "18.990280",
        "parent": "CSF02352"
    },
    {
        "id": "F02355",
        "name": "Fészek utca",
        "lat": "47.511829",
        "lon": "18.997249",
        "parent": "CSF02355"
    },
    {
        "id": "F02356",
        "name": "Fészek utca",
        "lat": "47.511740",
        "lon": "18.997209",
        "parent": "CSF02355"
    },
    {
        "id": "F02357",
        "name": "Kútvölgyi lejtő, Traumatológia",
        "lat": "47.511417",
        "lon": "19.000608",
        "parent": "CSF02357"
    },
    {
        "id": "F02358",
        "name": "Kútvölgyi lejtő, Traumatológia",
        "lat": "47.511318",
        "lon": "19.000847",
        "parent": "CSF02357"
    },
    {
        "id": "F02359",
        "name": "Zirzen Janka utca",
        "lat": "47.511360",
        "lon": "18.992669",
        "parent": ""
    },
    {
        "id": "F02360",
        "name": "György Aladár utca",
        "lat": "47.511457",
        "lon": "18.989841",
        "parent": "CSF02361"
    },
    {
        "id": "F02361",
        "name": "György Aladár utca",
        "lat": "47.511520",
        "lon": "18.989403",
        "parent": "CSF02361"
    },
    {
        "id": "F02362",
        "name": "Kiss Áron utca",
        "lat": "47.512878",
        "lon": "18.989733",
        "parent": ""
    },
    {
        "id": "F02364",
        "name": "Orvosi rendelő",
        "lat": "47.483307",
        "lon": "18.996166",
        "parent": "CSF02365"
    },
    {
        "id": "F02365",
        "name": "Orvosi rendelő",
        "lat": "47.483712",
        "lon": "18.995861",
        "parent": "CSF02365"
    },
    {
        "id": "F02366",
        "name": "Hadik András utca",
        "lat": "47.509849",
        "lon": "18.994596",
        "parent": "CSF02367"
    },
    {
        "id": "F02367",
        "name": "Hadik András utca",
        "lat": "47.509966",
        "lon": "18.993958",
        "parent": "CSF02367"
    },
    {
        "id": "F02368",
        "name": "Lelesz utca",
        "lat": "47.509669",
        "lon": "18.992843",
        "parent": "CSF02368"
    },
    {
        "id": "F02369",
        "name": "Lelesz utca",
        "lat": "47.509546",
        "lon": "18.993155",
        "parent": "CSF02368"
    },
    {
        "id": "F02370",
        "name": "Felső Svábhegyi út",
        "lat": "47.508525",
        "lon": "18.990614",
        "parent": "CSF02370"
    },
    {
        "id": "F02371",
        "name": "Felső Svábhegyi út",
        "lat": "47.508129",
        "lon": "18.989991",
        "parent": "CSF02370"
    },
    {
        "id": "F02372",
        "name": "Városkúti út",
        "lat": "47.507247",
        "lon": "18.988213",
        "parent": "CSF02372"
    },
    {
        "id": "F02373",
        "name": "Városkúti út",
        "lat": "47.507238",
        "lon": "18.988346",
        "parent": "CSF02372"
    },
    {
        "id": "F02374",
        "name": "Galgóczy utca",
        "lat": "47.511814",
        "lon": "18.986952",
        "parent": "CSF02374"
    },
    {
        "id": "F02375",
        "name": "Galgóczy utca",
        "lat": "47.511373",
        "lon": "18.985943",
        "parent": "CSF02374"
    },
    {
        "id": "F02376",
        "name": "Zalai út",
        "lat": "47.511536",
        "lon": "18.984889",
        "parent": "CSF02377"
    },
    {
        "id": "F02377",
        "name": "Zalai út",
        "lat": "47.511607",
        "lon": "18.983946",
        "parent": "CSF02377"
    },
    {
        "id": "F02378",
        "name": "Béla király út",
        "lat": "47.510424",
        "lon": "18.975876",
        "parent": ""
    },
    {
        "id": "F02379",
        "name": "Csillagvölgyi út",
        "lat": "47.510360",
        "lon": "18.975239",
        "parent": ""
    },
    {
        "id": "F02380",
        "name": "Zugligeti út",
        "lat": "47.511042",
        "lon": "18.972012",
        "parent": ""
    },
    {
        "id": "F02381",
        "name": "Zugliget, Libegő",
        "lat": "47.516523",
        "lon": "18.976598",
        "parent": "CSF02382"
    },
    {
        "id": "F02382",
        "name": "Zugliget, Libegő",
        "lat": "47.516530",
        "lon": "18.976179",
        "parent": "CSF02382"
    },
    {
        "id": "F02383",
        "name": "Zugligeti út 64.",
        "lat": "47.516894",
        "lon": "18.980249",
        "parent": "CSF02383"
    },
    {
        "id": "F02384",
        "name": "Zugligeti út 64.",
        "lat": "47.516885",
        "lon": "18.979970",
        "parent": "CSF02383"
    },
    {
        "id": "F02385",
        "name": "Szarvas Gábor út",
        "lat": "47.518101",
        "lon": "18.984045",
        "parent": "CSF02385"
    },
    {
        "id": "F02386",
        "name": "Szarvas Gábor út",
        "lat": "47.518011",
        "lon": "18.983793",
        "parent": "CSF02385"
    },
    {
        "id": "F02387",
        "name": "Adonis utca",
        "lat": "47.503020",
        "lon": "18.989811",
        "parent": "CSF02388"
    },
    {
        "id": "F02388",
        "name": "Adonis utca",
        "lat": "47.503677",
        "lon": "18.990540",
        "parent": "CSF02388"
    },
    {
        "id": "F02389",
        "name": "Istenhegyi lejtő",
        "lat": "47.505594",
        "lon": "18.992649",
        "parent": "CSF02389"
    },
    {
        "id": "F02390",
        "name": "Istenhegyi lejtő",
        "lat": "47.505522",
        "lon": "18.992516",
        "parent": "CSF02389"
    },
    {
        "id": "F02391",
        "name": "Óra út",
        "lat": "47.504696",
        "lon": "18.997924",
        "parent": "CSF02391"
    },
    {
        "id": "F02392",
        "name": "Óra út",
        "lat": "47.504562",
        "lon": "18.998026",
        "parent": "CSF02391"
    },
    {
        "id": "F02393",
        "name": "Nógrádi utca",
        "lat": "47.503143",
        "lon": "19.002660",
        "parent": "CSF02393"
    },
    {
        "id": "F02394",
        "name": "Nógrádi utca",
        "lat": "47.502945",
        "lon": "19.002222",
        "parent": "CSF02393"
    },
    {
        "id": "F02395",
        "name": "Pethényi út",
        "lat": "47.502766",
        "lon": "19.005846",
        "parent": "CSF02395"
    },
    {
        "id": "F02396",
        "name": "Pethényi út",
        "lat": "47.502289",
        "lon": "19.005903",
        "parent": "CSF02395"
    },
    {
        "id": "F02397",
        "name": "Szent Orbán tér",
        "lat": "47.499655",
        "lon": "19.009512",
        "parent": "CSF02397"
    },
    {
        "id": "F02398",
        "name": "Szent Orbán tér",
        "lat": "47.499467",
        "lon": "19.010202",
        "parent": "CSF02397"
    },
    {
        "id": "F02399",
        "name": "Szent Orbán tér",
        "lat": "47.499008",
        "lon": "19.009260",
        "parent": "CSF02397"
    },
    {
        "id": "F02400",
        "name": "Szent Orbán tér",
        "lat": "47.499340",
        "lon": "19.008649",
        "parent": "CSF02397"
    },
    {
        "id": "F02401",
        "name": "Szent Orbán tér",
        "lat": "47.499367",
        "lon": "19.008344",
        "parent": "CSF02397"
    },
    {
        "id": "F02402",
        "name": "Istenhegyi út",
        "lat": "47.498353",
        "lon": "19.016813",
        "parent": ""
    },
    {
        "id": "F02403",
        "name": "Tóth Lőrinc utca",
        "lat": "47.499688",
        "lon": "19.017588",
        "parent": ""
    },
    {
        "id": "F02404",
        "name": "Goldmark Károly utca",
        "lat": "47.501843",
        "lon": "19.015603",
        "parent": ""
    },
    {
        "id": "F02405",
        "name": "Határőr út",
        "lat": "47.503588",
        "lon": "19.016000",
        "parent": ""
    },
    {
        "id": "F02406",
        "name": "Ráth György utca",
        "lat": "47.500126",
        "lon": "19.020502",
        "parent": ""
    },
    {
        "id": "F02407",
        "name": "Kék Golyó utca",
        "lat": "47.497878",
        "lon": "19.021140",
        "parent": "CSF02411"
    },
    {
        "id": "F02408",
        "name": "Kék Golyó utca",
        "lat": "47.497581",
        "lon": "19.020901",
        "parent": "CSF02411"
    },
    {
        "id": "F02409",
        "name": "Kék Golyó utca",
        "lat": "47.497383",
        "lon": "19.020768",
        "parent": "CSF02411"
    },
    {
        "id": "F02411",
        "name": "Kék Golyó utca",
        "lat": "47.498012",
        "lon": "19.021050",
        "parent": "CSF02411"
    },
    {
        "id": "F02413",
        "name": "Királyhágó tér",
        "lat": "47.495745",
        "lon": "19.018994",
        "parent": "CSF02413"
    },
    {
        "id": "F02414",
        "name": "Királyhágó tér",
        "lat": "47.495538",
        "lon": "19.019724",
        "parent": "CSF02413"
    },
    {
        "id": "F02415",
        "name": "Márvány utca",
        "lat": "47.494621",
        "lon": "19.020478",
        "parent": ""
    },
    {
        "id": "F02416",
        "name": "Csörsz utca",
        "lat": "47.490226",
        "lon": "19.024436",
        "parent": "CSF02417"
    },
    {
        "id": "F02417",
        "name": "Csörsz utca",
        "lat": "47.490782",
        "lon": "19.024447",
        "parent": "CSF02417"
    },
    {
        "id": "F02420",
        "name": "Királyhágó tér",
        "lat": "47.494891",
        "lon": "19.018991",
        "parent": "CSF02413"
    },
    {
        "id": "F02421",
        "name": "Királyhágó tér",
        "lat": "47.494990",
        "lon": "19.019260",
        "parent": "CSF02413"
    },
    {
        "id": "F02422",
        "name": "Agárdi út",
        "lat": "47.495169",
        "lon": "19.015235",
        "parent": ""
    },
    {
        "id": "F02423",
        "name": "Galántai utca",
        "lat": "47.497192",
        "lon": "19.014146",
        "parent": "CS009698"
    },
    {
        "id": "F02424",
        "name": "Galántai utca",
        "lat": "47.497291",
        "lon": "19.013270",
        "parent": "CS009698"
    },
    {
        "id": "F02425",
        "name": "Nárcisz utca",
        "lat": "47.495806",
        "lon": "19.011067",
        "parent": "CSF02426"
    },
    {
        "id": "F02426",
        "name": "Nárcisz utca",
        "lat": "47.496292",
        "lon": "19.010735",
        "parent": "CSF02426"
    },
    {
        "id": "F02427",
        "name": "Tarpatak utca",
        "lat": "47.509581",
        "lon": "18.997490",
        "parent": "CSF02427"
    },
    {
        "id": "F02428",
        "name": "Tarpatak utca",
        "lat": "47.509428",
        "lon": "18.997158",
        "parent": "CSF02427"
    },
    {
        "id": "F02429",
        "name": "Vöröskő utca",
        "lat": "47.497226",
        "lon": "19.007629",
        "parent": "CSF02429"
    },
    {
        "id": "F02430",
        "name": "Vöröskő utca",
        "lat": "47.496803",
        "lon": "19.007430",
        "parent": "CSF02429"
    },
    {
        "id": "F02431",
        "name": "Szendrő utca",
        "lat": "47.495390",
        "lon": "19.004339",
        "parent": "CSF02431"
    },
    {
        "id": "F02433",
        "name": "Szendrő utca",
        "lat": "47.495255",
        "lon": "19.004564",
        "parent": "CSF02431"
    },
    {
        "id": "F02434",
        "name": "Pagony utca",
        "lat": "47.494940",
        "lon": "19.003118",
        "parent": "CS066856"
    },
    {
        "id": "F02435",
        "name": "Sólyom utca",
        "lat": "47.496980",
        "lon": "19.000117",
        "parent": "CSF02436"
    },
    {
        "id": "F02436",
        "name": "Sólyom utca",
        "lat": "47.497142",
        "lon": "18.999957",
        "parent": "CSF02436"
    },
    {
        "id": "F02437",
        "name": "Tamási Áron utca \/ Thomán István utca",
        "lat": "47.497159",
        "lon": "18.998126",
        "parent": "CSF02437"
    },
    {
        "id": "F02438",
        "name": "Tamási Áron utca \/ Thomán István utca",
        "lat": "47.496728",
        "lon": "18.998166",
        "parent": "CSF02437"
    },
    {
        "id": "F02439",
        "name": "Thomán István utca",
        "lat": "47.494641",
        "lon": "18.998513",
        "parent": ""
    },
    {
        "id": "F02440",
        "name": "Városkút",
        "lat": "47.500142",
        "lon": "18.989801",
        "parent": "CSF02319"
    },
    {
        "id": "F02441",
        "name": "Városkút",
        "lat": "47.500331",
        "lon": "18.989694",
        "parent": "CSF02319"
    },
    {
        "id": "F02442",
        "name": "Svábhegy",
        "lat": "47.497605",
        "lon": "18.989790",
        "parent": "CSF02458"
    },
    {
        "id": "F02443",
        "name": "Ordas út",
        "lat": "47.498527",
        "lon": "18.980591",
        "parent": "CSF02443"
    },
    {
        "id": "F02444",
        "name": "Ordas út",
        "lat": "47.498266",
        "lon": "18.981282",
        "parent": "CSF02443"
    },
    {
        "id": "F02445",
        "name": "Őzike köz",
        "lat": "47.499594",
        "lon": "18.976236",
        "parent": "CSF02445"
    },
    {
        "id": "F02446",
        "name": "Őzike köz",
        "lat": "47.499460",
        "lon": "18.977152",
        "parent": "CSF02445"
    },
    {
        "id": "F02447",
        "name": "Fülemile út",
        "lat": "47.499673",
        "lon": "18.972586",
        "parent": "CSF02447"
    },
    {
        "id": "F02448",
        "name": "Fülemile út",
        "lat": "47.499565",
        "lon": "18.973237",
        "parent": "CSF02447"
    },
    {
        "id": "F02449",
        "name": "Normafa, Gyermekvasút",
        "lat": "47.500715",
        "lon": "18.970222",
        "parent": "CSF02449"
    },
    {
        "id": "F02450",
        "name": "Normafa, Gyermekvasút",
        "lat": "47.500122",
        "lon": "18.970900",
        "parent": "CSF02449"
    },
    {
        "id": "F02451",
        "name": "Csillagvizsgáló",
        "lat": "47.500459",
        "lon": "18.964780",
        "parent": "CSF02451"
    },
    {
        "id": "F02452",
        "name": "Csillagvizsgáló",
        "lat": "47.500234",
        "lon": "18.964820",
        "parent": "CSF02451"
    },
    {
        "id": "F02453",
        "name": "Csillebérc, Gyermekvasút",
        "lat": "47.497661",
        "lon": "18.963929",
        "parent": "CSF02454"
    },
    {
        "id": "F02454",
        "name": "Csillebérc, Gyermekvasút",
        "lat": "47.497796",
        "lon": "18.964081",
        "parent": "CSF02454"
    },
    {
        "id": "F02455",
        "name": "Sötétvágás utca",
        "lat": "47.494765",
        "lon": "18.964617",
        "parent": "CSF02456"
    },
    {
        "id": "F02456",
        "name": "Sötétvágás utca",
        "lat": "47.495053",
        "lon": "18.964669",
        "parent": "CSF02456"
    },
    {
        "id": "F02458",
        "name": "Svábhegy",
        "lat": "47.498001",
        "lon": "18.989617",
        "parent": "CSF02458"
    },
    {
        "id": "F02459",
        "name": "Svábhegy",
        "lat": "47.497722",
        "lon": "18.989437",
        "parent": "CSF02458"
    },
    {
        "id": "F02460",
        "name": "Széll Kálmán tér M",
        "lat": "47.506899",
        "lon": "19.024058",
        "parent": "CS073099"
    },
    {
        "id": "F02461",
        "name": "Széll Kálmán tér M",
        "lat": "47.506611",
        "lon": "19.024390",
        "parent": "CS073099"
    },
    {
        "id": "F02462",
        "name": "Széll Kálmán tér M",
        "lat": "47.506441",
        "lon": "19.024775",
        "parent": "CS073099"
    },
    {
        "id": "F02464",
        "name": "Széll Kálmán tér M",
        "lat": "47.507430",
        "lon": "19.024576",
        "parent": "CS073099"
    },
    {
        "id": "F02465",
        "name": "Széll Kálmán tér M",
        "lat": "47.507403",
        "lon": "19.025000",
        "parent": "CS073099"
    },
    {
        "id": "F02466",
        "name": "Széll Kálmán tér M",
        "lat": "47.507358",
        "lon": "19.025611",
        "parent": "CS073099"
    },
    {
        "id": "F02469",
        "name": "Széll Kálmán tér M",
        "lat": "47.506530",
        "lon": "19.023912",
        "parent": "CS073099"
    },
    {
        "id": "F02470",
        "name": "Széll Kálmán tér M",
        "lat": "47.506441",
        "lon": "19.024213",
        "parent": "CS073099"
    },
    {
        "id": "F02473",
        "name": "Széll Kálmán tér M",
        "lat": "47.506629",
        "lon": "19.023886",
        "parent": "CS073099"
    },
    {
        "id": "F02476",
        "name": "Széll Kálmán tér M",
        "lat": "47.507331",
        "lon": "19.024456",
        "parent": "CS073099"
    },
    {
        "id": "F02477",
        "name": "Széll Kálmán tér M",
        "lat": "47.507232",
        "lon": "19.025173",
        "parent": "CS073099"
    },
    {
        "id": "F02480",
        "name": "Széll Kálmán tér",
        "lat": "47.506818",
        "lon": "19.024895",
        "parent": "CSF02481"
    },
    {
        "id": "F02481",
        "name": "Széll Kálmán tér",
        "lat": "47.507533",
        "lon": "19.026097",
        "parent": "CSF02481"
    },
    {
        "id": "F02482",
        "name": "Rendelőintézet",
        "lat": "47.511176",
        "lon": "19.005680",
        "parent": "CSF02349"
    },
    {
        "id": "F02483",
        "name": "Rendelőintézet",
        "lat": "47.510969",
        "lon": "19.005852",
        "parent": "CSF02349"
    },
    {
        "id": "F02484",
        "name": "Hunyad köz",
        "lat": "47.511435",
        "lon": "18.981716",
        "parent": "CSF02484"
    },
    {
        "id": "F02485",
        "name": "Hunyad köz",
        "lat": "47.511282",
        "lon": "18.981504",
        "parent": "CSF02484"
    },
    {
        "id": "F02486",
        "name": "Hunyad lejtő",
        "lat": "47.510875",
        "lon": "18.978650",
        "parent": ""
    },
    {
        "id": "F02487",
        "name": "Cinege út",
        "lat": "47.510849",
        "lon": "18.979088",
        "parent": ""
    },
    {
        "id": "F02488",
        "name": "Csemegi utca",
        "lat": "47.501781",
        "lon": "19.018045",
        "parent": ""
    },
    {
        "id": "F02489",
        "name": "Normafa",
        "lat": "47.503086",
        "lon": "18.965612",
        "parent": "CSF02489"
    },
    {
        "id": "F02490",
        "name": "Normafa",
        "lat": "47.502924",
        "lon": "18.965666",
        "parent": "CSF02489"
    },
    {
        "id": "F02492",
        "name": "Hajós Alfréd uszoda",
        "lat": "47.519552",
        "lon": "19.044172",
        "parent": "CSF02493"
    },
    {
        "id": "F02493",
        "name": "Hajós Alfréd uszoda",
        "lat": "47.519801",
        "lon": "19.044113",
        "parent": "CSF02493"
    },
    {
        "id": "F02494",
        "name": "Palatinus strand",
        "lat": "47.528331",
        "lon": "19.047718",
        "parent": "CSF02495"
    },
    {
        "id": "F02495",
        "name": "Palatinus strand",
        "lat": "47.528649",
        "lon": "19.047739",
        "parent": "CSF02495"
    },
    {
        "id": "F02496",
        "name": "Szabadtéri Színpad",
        "lat": "47.530373",
        "lon": "19.048793",
        "parent": "CSF02496"
    },
    {
        "id": "F02497",
        "name": "Szabadtéri Színpad",
        "lat": "47.529920",
        "lon": "19.048442",
        "parent": "CSF02496"
    },
    {
        "id": "F02498",
        "name": "Szállodák (Hotels)",
        "lat": "47.533503",
        "lon": "19.050825",
        "parent": "CSF02498"
    },
    {
        "id": "F02499",
        "name": "Szállodák (Hotels)",
        "lat": "47.533347",
        "lon": "19.050646",
        "parent": "CSF02498"
    },
    {
        "id": "F02500",
        "name": "Zenélőkút",
        "lat": "47.535716",
        "lon": "19.052526",
        "parent": "CSF02501"
    },
    {
        "id": "F02501",
        "name": "Zenélőkút",
        "lat": "47.535983",
        "lon": "19.052386",
        "parent": "CSF02501"
    },
    {
        "id": "F02502",
        "name": "Margitsziget \/ Árpád híd",
        "lat": "47.537155",
        "lon": "19.054558",
        "parent": "CSF02503"
    },
    {
        "id": "F02503",
        "name": "Margitsziget \/ Árpád híd",
        "lat": "47.537697",
        "lon": "19.053728",
        "parent": "CSF02503"
    },
    {
        "id": "F02504",
        "name": "Tisza utca",
        "lat": "47.524134",
        "lon": "19.058109",
        "parent": "CSF02504"
    },
    {
        "id": "F02505",
        "name": "Parkmozi köz",
        "lat": "47.522692",
        "lon": "19.045314",
        "parent": "CSF02505"
    },
    {
        "id": "F02506",
        "name": "Parkmozi köz",
        "lat": "47.522652",
        "lon": "19.045162",
        "parent": "CSF02505"
    },
    {
        "id": "F02507",
        "name": "Viza utca",
        "lat": "47.530154",
        "lon": "19.057645",
        "parent": "CSF02508"
    },
    {
        "id": "F02508",
        "name": "Viza utca",
        "lat": "47.530828",
        "lon": "19.057818",
        "parent": "CSF02508"
    },
    {
        "id": "F02509",
        "name": "Dráva utca",
        "lat": "47.525897",
        "lon": "19.057817",
        "parent": "CS087346"
    },
    {
        "id": "F02510",
        "name": "Dráva utca",
        "lat": "47.525726",
        "lon": "19.057844",
        "parent": "CS087346"
    },
    {
        "id": "F02511",
        "name": "Jászai Mari tér",
        "lat": "47.513901",
        "lon": "19.049397",
        "parent": "CSF02511"
    },
    {
        "id": "F02512",
        "name": "Szent István park",
        "lat": "47.518335",
        "lon": "19.051456",
        "parent": "CSF02512"
    },
    {
        "id": "F02513",
        "name": "Szent István park",
        "lat": "47.517786",
        "lon": "19.052624",
        "parent": "CSF02512"
    },
    {
        "id": "F02514",
        "name": "Victor Hugo utca",
        "lat": "47.517840",
        "lon": "19.054709",
        "parent": "CSF02516"
    },
    {
        "id": "F02515",
        "name": "Hegedűs Gyula utca",
        "lat": "47.517211",
        "lon": "19.054841",
        "parent": ""
    },
    {
        "id": "F02516",
        "name": "Victor Hugo utca",
        "lat": "47.518497",
        "lon": "19.056780",
        "parent": "CSF02516"
    },
    {
        "id": "F02517",
        "name": "Victor Hugo utca",
        "lat": "47.518227",
        "lon": "19.055824",
        "parent": "CSF02516"
    },
    {
        "id": "F02519",
        "name": "Gogol utca",
        "lat": "47.520152",
        "lon": "19.057577",
        "parent": "CS009587"
    },
    {
        "id": "F02521",
        "name": "Ipoly utca",
        "lat": "47.520582",
        "lon": "19.054072",
        "parent": "CSF02521"
    },
    {
        "id": "F02522",
        "name": "Ipoly utca",
        "lat": "47.519916",
        "lon": "19.053846",
        "parent": "CSF02521"
    },
    {
        "id": "F02523",
        "name": "Radnóti Miklós utca",
        "lat": "47.515568",
        "lon": "19.053121",
        "parent": "CSF02523"
    },
    {
        "id": "F02524",
        "name": "Radnóti Miklós utca",
        "lat": "47.514575",
        "lon": "19.054124",
        "parent": "CSF02523"
    },
    {
        "id": "F02525",
        "name": "Népfürdő utca \/ Árpád híd",
        "lat": "47.536423",
        "lon": "19.059466",
        "parent": "CS044583"
    },
    {
        "id": "F02526",
        "name": "Népfürdő utca \/ Árpád híd",
        "lat": "47.535922",
        "lon": "19.059658",
        "parent": "CS044583"
    },
    {
        "id": "F02527",
        "name": "Népfürdő utca \/ Árpád híd",
        "lat": "47.536294",
        "lon": "19.058868",
        "parent": "CS044583"
    },
    {
        "id": "F02528",
        "name": "Népfürdő utca \/ Árpád híd",
        "lat": "47.536087",
        "lon": "19.059532",
        "parent": "CS044583"
    },
    {
        "id": "F02532",
        "name": "Kámfor utca",
        "lat": "47.552433",
        "lon": "19.084485",
        "parent": ""
    },
    {
        "id": "F02533",
        "name": "Szekszárdi utca",
        "lat": "47.552281",
        "lon": "19.083170",
        "parent": ""
    },
    {
        "id": "F02534",
        "name": "Gyöngyösi utca M",
        "lat": "47.549346",
        "lon": "19.073724",
        "parent": "CSF02535"
    },
    {
        "id": "F02535",
        "name": "Gyöngyösi utca M",
        "lat": "47.549418",
        "lon": "19.074242",
        "parent": "CSF02535"
    },
    {
        "id": "F02536",
        "name": "Gyöngyösi utca M",
        "lat": "47.548950",
        "lon": "19.073259",
        "parent": "CSF02535"
    },
    {
        "id": "F02537",
        "name": "Gyöngyösi utca M",
        "lat": "47.548770",
        "lon": "19.073578",
        "parent": "CSF02535"
    },
    {
        "id": "F02538",
        "name": "Gyöngyösi utca",
        "lat": "47.547631",
        "lon": "19.080537",
        "parent": "CSF02539"
    },
    {
        "id": "F02539",
        "name": "Gyöngyösi utca",
        "lat": "47.548445",
        "lon": "19.081336",
        "parent": "CSF02539"
    },
    {
        "id": "F02540",
        "name": "Cziffra György park",
        "lat": "47.548729",
        "lon": "19.077788",
        "parent": "CSF02540"
    },
    {
        "id": "F02541",
        "name": "Cziffra György park",
        "lat": "47.548324",
        "lon": "19.079302",
        "parent": "CSF02540"
    },
    {
        "id": "F02542",
        "name": "Gyöngyösi utca",
        "lat": "47.547084",
        "lon": "19.089266",
        "parent": "CSF02542"
    },
    {
        "id": "F02543",
        "name": "Gyöngyösi utca",
        "lat": "47.546256",
        "lon": "19.090129",
        "parent": "CSF02542"
    },
    {
        "id": "F02544",
        "name": "Gyöngyösi utca",
        "lat": "47.546274",
        "lon": "19.089053",
        "parent": "CSF02542"
    },
    {
        "id": "F02545",
        "name": "Gyöngyösi utca",
        "lat": "47.545924",
        "lon": "19.088774",
        "parent": "CSF02542"
    },
    {
        "id": "F02546",
        "name": "Gyöngyösi utca",
        "lat": "47.546643",
        "lon": "19.089412",
        "parent": "CSF02542"
    },
    {
        "id": "F02547",
        "name": "Reitter Ferenc utca",
        "lat": "47.545459",
        "lon": "19.095294",
        "parent": "CS086012"
    },
    {
        "id": "F02548",
        "name": "Reitter Ferenc utca",
        "lat": "47.545499",
        "lon": "19.095070",
        "parent": "CS086012"
    },
    {
        "id": "F02549",
        "name": "Futár utca",
        "lat": "47.538332",
        "lon": "19.090083",
        "parent": "CSF02549"
    },
    {
        "id": "F02550",
        "name": "Futár utca",
        "lat": "47.538062",
        "lon": "19.089658",
        "parent": "CSF02549"
    },
    {
        "id": "F02551",
        "name": "Fiastyúk utca",
        "lat": "47.540240",
        "lon": "19.084758",
        "parent": "CSF02554"
    },
    {
        "id": "F02552",
        "name": "Fiastyúk utca",
        "lat": "47.540123",
        "lon": "19.084877",
        "parent": "CSF02554"
    },
    {
        "id": "F02553",
        "name": "Fiastyúk utca",
        "lat": "47.540159",
        "lon": "19.085595",
        "parent": "CSF02554"
    },
    {
        "id": "F02554",
        "name": "Fiastyúk utca",
        "lat": "47.540537",
        "lon": "19.085874",
        "parent": "CSF02554"
    },
    {
        "id": "F02555",
        "name": "Fiastyúk utca",
        "lat": "47.540438",
        "lon": "19.085621",
        "parent": "CSF02554"
    },
    {
        "id": "F02556",
        "name": "Fiastyúk utca",
        "lat": "47.540303",
        "lon": "19.085927",
        "parent": "CSF02554"
    },
    {
        "id": "F02557",
        "name": "Násznagy utca",
        "lat": "47.542877",
        "lon": "19.082116",
        "parent": "CSF02558"
    },
    {
        "id": "F02558",
        "name": "Násznagy utca",
        "lat": "47.543335",
        "lon": "19.082024",
        "parent": "CSF02558"
    },
    {
        "id": "F02559",
        "name": "József Attila tér",
        "lat": "47.547445",
        "lon": "19.083780",
        "parent": "CSF02559"
    },
    {
        "id": "F02560",
        "name": "József Attila tér",
        "lat": "47.547059",
        "lon": "19.084019",
        "parent": "CSF02559"
    },
    {
        "id": "F02561",
        "name": "Fiastyúk utca",
        "lat": "47.543621",
        "lon": "19.078675",
        "parent": "CSF02562"
    },
    {
        "id": "F02562",
        "name": "Fiastyúk utca",
        "lat": "47.544978",
        "lon": "19.079712",
        "parent": "CSF02562"
    },
    {
        "id": "F02563",
        "name": "Fiastyúk utca",
        "lat": "47.545919",
        "lon": "19.072088",
        "parent": "CSF02564"
    },
    {
        "id": "F02564",
        "name": "Fiastyúk utca",
        "lat": "47.546138",
        "lon": "19.072321",
        "parent": "CSF02564"
    },
    {
        "id": "F02567",
        "name": "Népfürdő utca \/ Árpád híd",
        "lat": "47.536801",
        "lon": "19.060595",
        "parent": "CS044583"
    },
    {
        "id": "F02568",
        "name": "Népfürdő utca \/ Árpád híd",
        "lat": "47.536935",
        "lon": "19.060821",
        "parent": "CS044583"
    },
    {
        "id": "F02569",
        "name": "Sporttelep",
        "lat": "47.533698",
        "lon": "19.059133",
        "parent": "CSF02569"
    },
    {
        "id": "F02570",
        "name": "Sporttelep",
        "lat": "47.533689",
        "lon": "19.059293",
        "parent": "CSF02569"
    },
    {
        "id": "F02571",
        "name": "Karikás Frigyes utca",
        "lat": "47.537187",
        "lon": "19.065762",
        "parent": "CSF02571"
    },
    {
        "id": "F02572",
        "name": "Lomb utca",
        "lat": "47.535279",
        "lon": "19.069932",
        "parent": ""
    },
    {
        "id": "F02573",
        "name": "Vág utca",
        "lat": "47.523909",
        "lon": "19.055838",
        "parent": "CSF02574"
    },
    {
        "id": "F02574",
        "name": "Vág utca",
        "lat": "47.523963",
        "lon": "19.056051",
        "parent": "CSF02574"
    },
    {
        "id": "F02575",
        "name": "Pap Károly utca",
        "lat": "47.533575",
        "lon": "19.073729",
        "parent": "CSF02576"
    },
    {
        "id": "F02576",
        "name": "Pap Károly utca",
        "lat": "47.533710",
        "lon": "19.075415",
        "parent": "CSF02576"
    },
    {
        "id": "F02577",
        "name": "Röppentyű utca",
        "lat": "47.534295",
        "lon": "19.074619",
        "parent": ""
    },
    {
        "id": "F02578",
        "name": "Árpád híd M",
        "lat": "47.532219",
        "lon": "19.067300",
        "parent": "CS008080"
    },
    {
        "id": "F02579",
        "name": "Árpád híd M",
        "lat": "47.532473",
        "lon": "19.067407",
        "parent": "CS008080"
    },
    {
        "id": "F02580",
        "name": "Árpád híd M",
        "lat": "47.532365",
        "lon": "19.067553",
        "parent": "CS008080"
    },
    {
        "id": "F02581",
        "name": "Árpád híd M",
        "lat": "47.532071",
        "lon": "19.067958",
        "parent": "CS008080"
    },
    {
        "id": "F02582",
        "name": "Árpád híd M",
        "lat": "47.531816",
        "lon": "19.068323",
        "parent": "CS008080"
    },
    {
        "id": "F02583",
        "name": "Hajdú utca",
        "lat": "47.531041",
        "lon": "19.075335",
        "parent": ""
    },
    {
        "id": "F02584",
        "name": "Béke utca",
        "lat": "47.532641",
        "lon": "19.080981",
        "parent": ""
    },
    {
        "id": "F02585",
        "name": "Béke tér",
        "lat": "47.529376",
        "lon": "19.080195",
        "parent": "CSF02588"
    },
    {
        "id": "F02586",
        "name": "Béke tér",
        "lat": "47.529205",
        "lon": "19.079943",
        "parent": "CSF02588"
    },
    {
        "id": "F02587",
        "name": "Béke tér",
        "lat": "47.529745",
        "lon": "19.080488",
        "parent": "CSF02588"
    },
    {
        "id": "F02588",
        "name": "Béke tér",
        "lat": "47.530761",
        "lon": "19.080820",
        "parent": "CSF02588"
    },
    {
        "id": "F02589",
        "name": "Béke tér",
        "lat": "47.529745",
        "lon": "19.081019",
        "parent": "CSF02588"
    },
    {
        "id": "F02590",
        "name": "Béke tér",
        "lat": "47.529547",
        "lon": "19.081218",
        "parent": "CSF02588"
    },
    {
        "id": "F02591",
        "name": "Lehel utca \/ Róbert Károly körút",
        "lat": "47.526273",
        "lon": "19.078533",
        "parent": "CSF02592"
    },
    {
        "id": "F02592",
        "name": "Lehel utca \/ Róbert Károly körút",
        "lat": "47.526408",
        "lon": "19.078799",
        "parent": "CSF02592"
    },
    {
        "id": "F02593",
        "name": "Lehel utca \/ Róbert Károly körút",
        "lat": "47.525833",
        "lon": "19.078188",
        "parent": "CSF02592"
    },
    {
        "id": "F02594",
        "name": "Lehel utca \/ Róbert Károly körút",
        "lat": "47.526137",
        "lon": "19.077337",
        "parent": "CSF02592"
    },
    {
        "id": "F02595",
        "name": "Lehel utca \/ Róbert Károly körút",
        "lat": "47.524888",
        "lon": "19.078639",
        "parent": "CSF02592"
    },
    {
        "id": "F02596",
        "name": "Lehel utca \/ Róbert Károly körút",
        "lat": "47.525797",
        "lon": "19.077524",
        "parent": "CSF02592"
    },
    {
        "id": "F02597",
        "name": "Lehel utca \/ Róbert Károly körút",
        "lat": "47.526200",
        "lon": "19.076952",
        "parent": "CSF02592"
    },
    {
        "id": "F02598",
        "name": "Lehel utca \/ Róbert Károly körút",
        "lat": "47.526336",
        "lon": "19.078348",
        "parent": "CSF02592"
    },
    {
        "id": "F02599",
        "name": "Árpád híd M",
        "lat": "47.531484",
        "lon": "19.068084",
        "parent": "CS008080"
    },
    {
        "id": "F02600",
        "name": "Árpád híd M",
        "lat": "47.532974",
        "lon": "19.066119",
        "parent": "CS008080"
    },
    {
        "id": "F02601",
        "name": "Árpád híd M",
        "lat": "47.533759",
        "lon": "19.066903",
        "parent": "CS008080"
    },
    {
        "id": "F02602",
        "name": "Árpád híd M",
        "lat": "47.533724",
        "lon": "19.065508",
        "parent": "CS008080"
    },
    {
        "id": "F02603",
        "name": "Árpád híd M",
        "lat": "47.534197",
        "lon": "19.067673",
        "parent": "CS008080"
    },
    {
        "id": "F02604",
        "name": "Árpád híd M",
        "lat": "47.533559",
        "lon": "19.067434",
        "parent": "CS008080"
    },
    {
        "id": "F02605",
        "name": "Árpád híd M",
        "lat": "47.533343",
        "lon": "19.067341",
        "parent": "CS008080"
    },
    {
        "id": "F02606",
        "name": "Tisza utca",
        "lat": "47.523830",
        "lon": "19.059330",
        "parent": "CSF02504"
    },
    {
        "id": "F02608",
        "name": "Dózsa György út M",
        "lat": "47.524819",
        "lon": "19.062438",
        "parent": "CSF02609"
    },
    {
        "id": "F02609",
        "name": "Dózsa György út M",
        "lat": "47.525198",
        "lon": "19.063641",
        "parent": "CSF02609"
    },
    {
        "id": "F02610",
        "name": "Dózsa György út M",
        "lat": "47.524073",
        "lon": "19.063845",
        "parent": "CSF02609"
    },
    {
        "id": "F02611",
        "name": "Dózsa György út M",
        "lat": "47.523965",
        "lon": "19.062956",
        "parent": "CSF02609"
    },
    {
        "id": "F02612",
        "name": "Lehel tér M (Gogol utca)",
        "lat": "47.519630",
        "lon": "19.060817",
        "parent": "CSF02612"
    },
    {
        "id": "F02613",
        "name": "Lehel tér",
        "lat": "47.518659",
        "lon": "19.060859",
        "parent": "CSLM3LED"
    },
    {
        "id": "F02614",
        "name": "Lehel tér",
        "lat": "47.517595",
        "lon": "19.060285",
        "parent": "CSLM3LED"
    },
    {
        "id": "F02615",
        "name": "Lehel tér M",
        "lat": "47.517354",
        "lon": "19.060723",
        "parent": "CSF02612"
    },
    {
        "id": "F02616",
        "name": "Lehel tér M",
        "lat": "47.517885",
        "lon": "19.060352",
        "parent": "CSF02612"
    },
    {
        "id": "F02617",
        "name": "Lehel tér M",
        "lat": "47.517273",
        "lon": "19.060617",
        "parent": "CSF02612"
    },
    {
        "id": "F02619",
        "name": "Lehel tér M",
        "lat": "47.516167",
        "lon": "19.059621",
        "parent": "CSF02612"
    },
    {
        "id": "F02620",
        "name": "Lehel utca \/ Dózsa György út",
        "lat": "47.521302",
        "lon": "19.068572",
        "parent": "CSF02620"
    },
    {
        "id": "F02621",
        "name": "Lehel utca \/ Dózsa György út",
        "lat": "47.521014",
        "lon": "19.069289",
        "parent": "CSF02620"
    },
    {
        "id": "F02623",
        "name": "Lehel utca \/ Dózsa György út",
        "lat": "47.520474",
        "lon": "19.069713",
        "parent": "CSF02620"
    },
    {
        "id": "F02624",
        "name": "Lehel utca \/ Dózsa György út",
        "lat": "47.520771",
        "lon": "19.068983",
        "parent": "CSF02620"
    },
    {
        "id": "F02625",
        "name": "Lehel utca \/ Dózsa György út",
        "lat": "47.520744",
        "lon": "19.068625",
        "parent": "CSF02620"
    },
    {
        "id": "F02626",
        "name": "Lehel utca \/ Dózsa György út",
        "lat": "47.521076",
        "lon": "19.069780",
        "parent": "CSF02620"
    },
    {
        "id": "F02627",
        "name": "Vágány utca \/ Róbert Károly körút",
        "lat": "47.522153",
        "lon": "19.081479",
        "parent": "CSF02592"
    },
    {
        "id": "F02628",
        "name": "Vágány utca \/ Róbert Károly körút",
        "lat": "47.522144",
        "lon": "19.081877",
        "parent": "CSF02592"
    },
    {
        "id": "F02630",
        "name": "Vágány utca \/ Róbert Károly körút",
        "lat": "47.524483",
        "lon": "19.081972",
        "parent": "CSF02592"
    },
    {
        "id": "F02631",
        "name": "Vágány utca \/ Róbert Károly körút",
        "lat": "47.523617",
        "lon": "19.080987",
        "parent": "CSF02592"
    },
    {
        "id": "F02632",
        "name": "Vágány utca \/ Róbert Károly körút",
        "lat": "47.523230",
        "lon": "19.081478",
        "parent": "CSF02592"
    },
    {
        "id": "F02633",
        "name": "Vágány utca \/ Róbert Károly körút",
        "lat": "47.523790",
        "lon": "19.080378",
        "parent": "CSF02592"
    },
    {
        "id": "F02634",
        "name": "Vágány utca \/ Róbert Károly körút",
        "lat": "47.524159",
        "lon": "19.080458",
        "parent": "CSF02592"
    },
    {
        "id": "F02635",
        "name": "Petneházy utca",
        "lat": "47.531335",
        "lon": "19.085655",
        "parent": "CSF02635"
    },
    {
        "id": "F02636",
        "name": "Petneházy utca",
        "lat": "47.531272",
        "lon": "19.085934",
        "parent": "CSF02635"
    },
    {
        "id": "F02637",
        "name": "Árpád híd",
        "lat": "47.533217",
        "lon": "19.067089",
        "parent": "CSLM3AHG"
    },
    {
        "id": "F02638",
        "name": "Árpád híd",
        "lat": "47.532171",
        "lon": "19.066471",
        "parent": "CSLM3AHG"
    },
    {
        "id": "F02639",
        "name": "Kassák Lajos utca",
        "lat": "47.522534",
        "lon": "19.066501",
        "parent": "CSF02639"
    },
    {
        "id": "F02640",
        "name": "Kassák Lajos utca",
        "lat": "47.522435",
        "lon": "19.066461",
        "parent": "CSF02639"
    },
    {
        "id": "F02641",
        "name": "Honvédkórház",
        "lat": "47.530332",
        "lon": "19.070674",
        "parent": "CS009420"
    },
    {
        "id": "F02642",
        "name": "Honvédkórház",
        "lat": "47.530449",
        "lon": "19.070169",
        "parent": "CS009420"
    },
    {
        "id": "F02643",
        "name": "Honvédkórház",
        "lat": "47.530041",
        "lon": "19.070699",
        "parent": "CS009420"
    },
    {
        "id": "F02644",
        "name": "Honvédkórház",
        "lat": "47.530044",
        "lon": "19.070328",
        "parent": "CS009420"
    },
    {
        "id": "F02645",
        "name": "Szegedi út",
        "lat": "47.528637",
        "lon": "19.084099",
        "parent": "CSF02645"
    },
    {
        "id": "F02646",
        "name": "Szegedi út",
        "lat": "47.528332",
        "lon": "19.083435",
        "parent": "CSF02645"
    },
    {
        "id": "F02647",
        "name": "Szegedi út",
        "lat": "47.527720",
        "lon": "19.083860",
        "parent": "CSF02645"
    },
    {
        "id": "F02648",
        "name": "Szegedi út",
        "lat": "47.527513",
        "lon": "19.083740",
        "parent": "CSF02645"
    },
    {
        "id": "F02649",
        "name": "Radnóti Miklós utca",
        "lat": "47.515547",
        "lon": "19.051004",
        "parent": "CSF02650"
    },
    {
        "id": "F02650",
        "name": "Radnóti Miklós utca",
        "lat": "47.515906",
        "lon": "19.049809",
        "parent": "CSF02650"
    },
    {
        "id": "F02653",
        "name": "Angyalföld vasútállomás",
        "lat": "47.549179",
        "lon": "19.089852",
        "parent": "CSF02653"
    },
    {
        "id": "F02654",
        "name": "Angyalföld vasútállomás",
        "lat": "47.548986",
        "lon": "19.090275",
        "parent": "CSF02653"
    },
    {
        "id": "F02655",
        "name": "Rokolya utca",
        "lat": "47.541749",
        "lon": "19.092052",
        "parent": "CSF02656"
    },
    {
        "id": "F02656",
        "name": "Rokolya utca",
        "lat": "47.541758",
        "lon": "19.091786",
        "parent": "CSF02656"
    },
    {
        "id": "F02657",
        "name": "Kucsma utca",
        "lat": "47.544501",
        "lon": "19.093661",
        "parent": "CSF02658"
    },
    {
        "id": "F02658",
        "name": "Kucsma utca",
        "lat": "47.544609",
        "lon": "19.093436",
        "parent": "CSF02658"
    },
    {
        "id": "F02659",
        "name": "Rokolya utca",
        "lat": "47.542614",
        "lon": "19.087031",
        "parent": "CSF02660"
    },
    {
        "id": "F02660",
        "name": "Rokolya utca",
        "lat": "47.542740",
        "lon": "19.087005",
        "parent": "CSF02660"
    },
    {
        "id": "F02661",
        "name": "Rokolya utca",
        "lat": "47.542290",
        "lon": "19.087031",
        "parent": "CSF02660"
    },
    {
        "id": "F02662",
        "name": "Rokolya utca",
        "lat": "47.542075",
        "lon": "19.086513",
        "parent": "CSF02660"
    },
    {
        "id": "F02663",
        "name": "Rozsnyay utca",
        "lat": "47.540215",
        "lon": "19.077492",
        "parent": "CSF02663"
    },
    {
        "id": "F02664",
        "name": "Rozsnyay utca",
        "lat": "47.539484",
        "lon": "19.076826",
        "parent": "CSF02663"
    },
    {
        "id": "F02665",
        "name": "Frangepán utca",
        "lat": "47.536345",
        "lon": "19.075364",
        "parent": ""
    },
    {
        "id": "F02666",
        "name": "Fáy utca",
        "lat": "47.537128",
        "lon": "19.075962",
        "parent": ""
    },
    {
        "id": "F02667",
        "name": "Hun utca",
        "lat": "47.524196",
        "lon": "19.075212",
        "parent": "CSF02670"
    },
    {
        "id": "F02668",
        "name": "Hun utca",
        "lat": "47.523981",
        "lon": "19.074933",
        "parent": "CSF02670"
    },
    {
        "id": "F02669",
        "name": "Hun utca",
        "lat": "47.523936",
        "lon": "19.074562",
        "parent": "CSF02670"
    },
    {
        "id": "F02670",
        "name": "Hun utca",
        "lat": "47.524277",
        "lon": "19.075691",
        "parent": "CSF02670"
    },
    {
        "id": "F02671",
        "name": "Fáy utca",
        "lat": "47.534537",
        "lon": "19.087543",
        "parent": "CSF02671"
    },
    {
        "id": "F02672",
        "name": "Fáy utca",
        "lat": "47.533979",
        "lon": "19.087516",
        "parent": "CSF02671"
    },
    {
        "id": "F02673",
        "name": "Frangepán utca",
        "lat": "47.534395",
        "lon": "19.082496",
        "parent": "CSF02676"
    },
    {
        "id": "F02674",
        "name": "Frangepán utca",
        "lat": "47.533945",
        "lon": "19.082177",
        "parent": "CSF02676"
    },
    {
        "id": "F02675",
        "name": "Frangepán utca",
        "lat": "47.534386",
        "lon": "19.082257",
        "parent": "CSF02676"
    },
    {
        "id": "F02676",
        "name": "Frangepán utca",
        "lat": "47.535132",
        "lon": "19.083134",
        "parent": "CSF02676"
    },
    {
        "id": "F02677",
        "name": "Forgách utca M",
        "lat": "47.537816",
        "lon": "19.070291",
        "parent": "CSF02679"
    },
    {
        "id": "F02678",
        "name": "Forgách utca M",
        "lat": "47.539489",
        "lon": "19.069628",
        "parent": "CSF02679"
    },
    {
        "id": "F02679",
        "name": "Forgách utca M",
        "lat": "47.540046",
        "lon": "19.070000",
        "parent": "CSF02679"
    },
    {
        "id": "F02680",
        "name": "Dózsa György út",
        "lat": "47.525430",
        "lon": "19.063737",
        "parent": "CSF02680"
    },
    {
        "id": "F02681",
        "name": "Dózsa György út",
        "lat": "47.524358",
        "lon": "19.063088",
        "parent": "CSF02680"
    },
    {
        "id": "F02682",
        "name": "Forgách utca",
        "lat": "47.539160",
        "lon": "19.069648",
        "parent": "CSL008159"
    },
    {
        "id": "F02683",
        "name": "Forgách utca",
        "lat": "47.538163",
        "lon": "19.069055",
        "parent": "CSL008159"
    },
    {
        "id": "F02684",
        "name": "Gyöngyösi utca",
        "lat": "47.549394",
        "lon": "19.073575",
        "parent": "CSF02684"
    },
    {
        "id": "F02685",
        "name": "Gyöngyösi utca",
        "lat": "47.548374",
        "lon": "19.073019",
        "parent": "CSF02684"
    },
    {
        "id": "F02687",
        "name": "Árvavár utca",
        "lat": "47.535226",
        "lon": "19.115609",
        "parent": "CSF02688"
    },
    {
        "id": "F02688",
        "name": "Árvavár utca",
        "lat": "47.535459",
        "lon": "19.116114",
        "parent": "CSF02688"
    },
    {
        "id": "F02690",
        "name": "Rákosszentmihály vasútállomás",
        "lat": "47.519658",
        "lon": "19.147968",
        "parent": "CSF03281"
    },
    {
        "id": "F02691",
        "name": "Hősök tere M",
        "lat": "47.514409",
        "lon": "19.079483",
        "parent": ""
    },
    {
        "id": "F02692",
        "name": "Állatkert",
        "lat": "47.517783",
        "lon": "19.077705",
        "parent": "CSF02692"
    },
    {
        "id": "F02693",
        "name": "Állatkert",
        "lat": "47.517747",
        "lon": "19.077851",
        "parent": "CSF02692"
    },
    {
        "id": "F02694",
        "name": "Széchenyi fürdő M",
        "lat": "47.519292",
        "lon": "19.082433",
        "parent": "CSF02694"
    },
    {
        "id": "F02695",
        "name": "Széchenyi fürdő M",
        "lat": "47.519068",
        "lon": "19.081198",
        "parent": "CSF02694"
    },
    {
        "id": "F02696",
        "name": "Széchenyi fürdő",
        "lat": "47.517508",
        "lon": "19.080980",
        "parent": "CSLM1SFV"
    },
    {
        "id": "F02697",
        "name": "Széchenyi fürdő",
        "lat": "47.517407",
        "lon": "19.081481",
        "parent": "CSLM1SFV"
    },
    {
        "id": "F02698",
        "name": "Kós Károly sétány",
        "lat": "47.518734",
        "lon": "19.085195",
        "parent": ""
    },
    {
        "id": "F02699",
        "name": "Bethesda utca",
        "lat": "47.517933",
        "lon": "19.086708",
        "parent": "CSF02699"
    },
    {
        "id": "F02700",
        "name": "Bethesda utca",
        "lat": "47.517384",
        "lon": "19.087132",
        "parent": "CSF02699"
    },
    {
        "id": "F02701",
        "name": "Közlekedési Múzeum",
        "lat": "47.515539",
        "lon": "19.089906",
        "parent": "CSF02702"
    },
    {
        "id": "F02702",
        "name": "Közlekedési Múzeum",
        "lat": "47.515701",
        "lon": "19.089999",
        "parent": "CSF02702"
    },
    {
        "id": "F02703",
        "name": "Közlekedési Múzeum",
        "lat": "47.515611",
        "lon": "19.090570",
        "parent": "CSF02702"
    },
    {
        "id": "F02704",
        "name": "Közlekedési Múzeum",
        "lat": "47.515575",
        "lon": "19.090769",
        "parent": "CSF02702"
    },
    {
        "id": "F02705",
        "name": "Olof Palme sétány",
        "lat": "47.512087",
        "lon": "19.085110",
        "parent": "CSF02706"
    },
    {
        "id": "F02706",
        "name": "Olof Palme sétány",
        "lat": "47.512563",
        "lon": "19.085814",
        "parent": "CSF02706"
    },
    {
        "id": "F02707",
        "name": "Dvořák sétány",
        "lat": "47.510315",
        "lon": "19.084034",
        "parent": "CSF02708"
    },
    {
        "id": "F02708",
        "name": "Dvořák sétány",
        "lat": "47.510450",
        "lon": "19.084618",
        "parent": "CSF02708"
    },
    {
        "id": "F02709",
        "name": "Ötvenhatosok tere",
        "lat": "47.507256",
        "lon": "19.086488",
        "parent": "CSF02710"
    },
    {
        "id": "F02710",
        "name": "Ötvenhatosok tere",
        "lat": "47.507616",
        "lon": "19.086036",
        "parent": "CSF02710"
    },
    {
        "id": "F02711",
        "name": "Zichy Géza utca",
        "lat": "47.510421",
        "lon": "19.090419",
        "parent": "CSF02711"
    },
    {
        "id": "F02712",
        "name": "Zichy Géza utca",
        "lat": "47.510106",
        "lon": "19.090233",
        "parent": "CSF02711"
    },
    {
        "id": "F02713",
        "name": "Vakok Intézete",
        "lat": "47.513577",
        "lon": "19.093184",
        "parent": "CSF02713"
    },
    {
        "id": "F02714",
        "name": "Vakok Intézete",
        "lat": "47.512588",
        "lon": "19.093315",
        "parent": "CSF02713"
    },
    {
        "id": "F02715",
        "name": "Vakok Intézete",
        "lat": "47.512452",
        "lon": "19.094630",
        "parent": "CSF02713"
    },
    {
        "id": "F02716",
        "name": "Cházár András utca",
        "lat": "47.505806",
        "lon": "19.091465",
        "parent": "CSF02717"
    },
    {
        "id": "F02717",
        "name": "Cházár András utca",
        "lat": "47.505851",
        "lon": "19.091332",
        "parent": "CSF02717"
    },
    {
        "id": "F02718",
        "name": "Stefánia út \/ Thököly út",
        "lat": "47.508845",
        "lon": "19.094467",
        "parent": "CSF02718"
    },
    {
        "id": "F02720",
        "name": "Stefánia út \/ Thököly út",
        "lat": "47.508009",
        "lon": "19.095290",
        "parent": "CSF02718"
    },
    {
        "id": "F02722",
        "name": "Stefánia út \/ Thököly út",
        "lat": "47.508090",
        "lon": "19.094294",
        "parent": "CSF02718"
    },
    {
        "id": "F02723",
        "name": "Stefánia út \/ Thököly út",
        "lat": "47.508782",
        "lon": "19.095383",
        "parent": "CSF02718"
    },
    {
        "id": "F02724",
        "name": "Zugló vasútállomás (Hermina út)",
        "lat": "47.510706",
        "lon": "19.097283",
        "parent": "CS009426"
    },
    {
        "id": "F02725",
        "name": "Zugló vasútállomás",
        "lat": "47.511191",
        "lon": "19.098598",
        "parent": "CS009426"
    },
    {
        "id": "F02726",
        "name": "Zugló vasútállomás (Hermina út)",
        "lat": "47.510823",
        "lon": "19.097907",
        "parent": "CS009426"
    },
    {
        "id": "F02727",
        "name": "Zugló vasútállomás",
        "lat": "47.511794",
        "lon": "19.098267",
        "parent": "CS009426"
    },
    {
        "id": "F02729",
        "name": "Zugló vasútállomás",
        "lat": "47.511353",
        "lon": "19.099395",
        "parent": "CS009426"
    },
    {
        "id": "F02730",
        "name": "Zugló vasútállomás",
        "lat": "47.511794",
        "lon": "19.099262",
        "parent": "CS009426"
    },
    {
        "id": "F02731",
        "name": "Zugló vasútállomás",
        "lat": "47.510921",
        "lon": "19.099580",
        "parent": "CS009426"
    },
    {
        "id": "F02732",
        "name": "Zugló vasútállomás",
        "lat": "47.511344",
        "lon": "19.099156",
        "parent": "CS009426"
    },
    {
        "id": "F02733",
        "name": "Egressy út \/ Stefánia út",
        "lat": "47.504796",
        "lon": "19.099654",
        "parent": "CSF02735"
    },
    {
        "id": "F02734",
        "name": "Egressy út \/ Stefánia út",
        "lat": "47.504813",
        "lon": "19.100809",
        "parent": "CSF02735"
    },
    {
        "id": "F02735",
        "name": "Egressy út \/ Stefánia út",
        "lat": "47.504966",
        "lon": "19.101340",
        "parent": "CSF02735"
    },
    {
        "id": "F02736",
        "name": "Egressy út \/ Stefánia út",
        "lat": "47.504571",
        "lon": "19.099853",
        "parent": "CSF02735"
    },
    {
        "id": "F02737",
        "name": "Szobránc köz",
        "lat": "47.503354",
        "lon": "19.103675",
        "parent": "CSF02737"
    },
    {
        "id": "F02738",
        "name": "Szobránc köz",
        "lat": "47.503192",
        "lon": "19.103900",
        "parent": "CSF02737"
    },
    {
        "id": "F02739",
        "name": "Egressy út \/ Hungária körút",
        "lat": "47.507087",
        "lon": "19.104422",
        "parent": "CSF02743"
    },
    {
        "id": "F02740",
        "name": "Egressy út \/ Hungária körút",
        "lat": "47.507068",
        "lon": "19.105656",
        "parent": "CSF02743"
    },
    {
        "id": "F02741",
        "name": "Egressy út \/ Hungária körút",
        "lat": "47.506924",
        "lon": "19.105563",
        "parent": "CSF02743"
    },
    {
        "id": "F02742",
        "name": "Egressy út \/ Hungária körút",
        "lat": "47.506799",
        "lon": "19.104116",
        "parent": "CSF02743"
    },
    {
        "id": "F02743",
        "name": "Egressy út \/ Hungária körút",
        "lat": "47.507177",
        "lon": "19.104050",
        "parent": "CSF02743"
    },
    {
        "id": "F02744",
        "name": "Egressy út \/ Hungária körút",
        "lat": "47.506744",
        "lon": "19.104445",
        "parent": "CSF02743"
    },
    {
        "id": "F02745",
        "name": "Jeszenák János utca",
        "lat": "47.511950",
        "lon": "19.124700",
        "parent": "CSF02745"
    },
    {
        "id": "F02746",
        "name": "Róna utca",
        "lat": "47.506222",
        "lon": "19.123404",
        "parent": "CSF02746"
    },
    {
        "id": "F02747",
        "name": "Róna utca",
        "lat": "47.506204",
        "lon": "19.123576",
        "parent": "CSF02746"
    },
    {
        "id": "F02748",
        "name": "Pongrátz Gergely tér",
        "lat": "47.509501",
        "lon": "19.129024",
        "parent": "CS008919"
    },
    {
        "id": "F02749",
        "name": "Pongrátz Gergely tér",
        "lat": "47.509753",
        "lon": "19.128400",
        "parent": "CS008919"
    },
    {
        "id": "F02750",
        "name": "Pongrátz Gergely tér",
        "lat": "47.509133",
        "lon": "19.128572",
        "parent": "CS008919"
    },
    {
        "id": "F02751",
        "name": "Pongrátz Gergely tér",
        "lat": "47.508980",
        "lon": "19.128532",
        "parent": "CS008919"
    },
    {
        "id": "F02752",
        "name": "Pongrátz Gergely tér",
        "lat": "47.509213",
        "lon": "19.129501",
        "parent": "CS008919"
    },
    {
        "id": "F02753",
        "name": "Pongrátz Gergely tér",
        "lat": "47.509330",
        "lon": "19.129449",
        "parent": "CS008919"
    },
    {
        "id": "F02754",
        "name": "Bánki Donát utca",
        "lat": "47.506115",
        "lon": "19.134488",
        "parent": ""
    },
    {
        "id": "F02755",
        "name": "Örs vezér tere M+H",
        "lat": "47.504485",
        "lon": "19.136556",
        "parent": "CS003106"
    },
    {
        "id": "F02756",
        "name": "Örs vezér tere M+H",
        "lat": "47.504728",
        "lon": "19.136490",
        "parent": "CS003106"
    },
    {
        "id": "F02757",
        "name": "Örs vezér tere M+H",
        "lat": "47.504944",
        "lon": "19.136437",
        "parent": "CS003106"
    },
    {
        "id": "F02758",
        "name": "Örs vezér tere M+H",
        "lat": "47.505142",
        "lon": "19.136385",
        "parent": "CS003106"
    },
    {
        "id": "F02759",
        "name": "Örs vezér tere M+H",
        "lat": "47.504908",
        "lon": "19.136822",
        "parent": "CS003106"
    },
    {
        "id": "F02760",
        "name": "Örs vezér tere M+H",
        "lat": "47.505151",
        "lon": "19.136756",
        "parent": "CS003106"
    },
    {
        "id": "F02761",
        "name": "Örs vezér tere M+H",
        "lat": "47.504701",
        "lon": "19.136875",
        "parent": "CS003106"
    },
    {
        "id": "F02762",
        "name": "Örs vezér tere M+H",
        "lat": "47.504467",
        "lon": "19.136941",
        "parent": "CS003106"
    },
    {
        "id": "F02763",
        "name": "Örs vezér tere M+H",
        "lat": "47.504233",
        "lon": "19.137047",
        "parent": "CS003106"
    },
    {
        "id": "F02764",
        "name": "Örs vezér tere M+H",
        "lat": "47.504045",
        "lon": "19.136675",
        "parent": "CS003106"
    },
    {
        "id": "F02765",
        "name": "Álmos vezér útja",
        "lat": "47.507379",
        "lon": "19.140557",
        "parent": "CSF02765"
    },
    {
        "id": "F02766",
        "name": "Álmos vezér útja",
        "lat": "47.507127",
        "lon": "19.140689",
        "parent": "CSF02765"
    },
    {
        "id": "F02767",
        "name": "Füredi utca \/ Ond vezér útja",
        "lat": "47.506415",
        "lon": "19.141498",
        "parent": "CSF02767"
    },
    {
        "id": "F02768",
        "name": "Füredi utca \/ Ond vezér útja",
        "lat": "47.506388",
        "lon": "19.142188",
        "parent": "CSF02767"
    },
    {
        "id": "F02769",
        "name": "Ond vezér park",
        "lat": "47.506501",
        "lon": "19.147193",
        "parent": "CSF02769"
    },
    {
        "id": "F02770",
        "name": "Ond vezér park",
        "lat": "47.506259",
        "lon": "19.146143",
        "parent": "CSF02769"
    },
    {
        "id": "F02771",
        "name": "Ond vezér útja \/ Szentmihályi út",
        "lat": "47.507514",
        "lon": "19.150341",
        "parent": "CSF02772"
    },
    {
        "id": "F02772",
        "name": "Ond vezér útja \/ Szentmihályi út",
        "lat": "47.507514",
        "lon": "19.150168",
        "parent": "CSF02772"
    },
    {
        "id": "F02773",
        "name": "Vezér utca",
        "lat": "47.509849",
        "lon": "19.143197",
        "parent": ""
    },
    {
        "id": "F02774",
        "name": "Füredi utca",
        "lat": "47.509562",
        "lon": "19.143070",
        "parent": ""
    },
    {
        "id": "F02775",
        "name": "Füredi utca \/ Szentmihályi út",
        "lat": "47.510935",
        "lon": "19.147254",
        "parent": "CSF02775"
    },
    {
        "id": "F02776",
        "name": "Füredi utca \/ Szentmihályi út",
        "lat": "47.510692",
        "lon": "19.147293",
        "parent": "CSF02775"
    },
    {
        "id": "F02777",
        "name": "Csertő utca",
        "lat": "47.513355",
        "lon": "19.146210",
        "parent": "CSF02777"
    },
    {
        "id": "F02778",
        "name": "Csertő utca",
        "lat": "47.513040",
        "lon": "19.146448",
        "parent": "CSF02777"
    },
    {
        "id": "F02779",
        "name": "Csertő utca",
        "lat": "47.513175",
        "lon": "19.146501",
        "parent": "CSF02777"
    },
    {
        "id": "F02780",
        "name": "Zsálya utca",
        "lat": "47.516021",
        "lon": "19.142948",
        "parent": "CSF02781"
    },
    {
        "id": "F02781",
        "name": "Zsálya utca",
        "lat": "47.516164",
        "lon": "19.143227",
        "parent": "CSF02781"
    },
    {
        "id": "F02782",
        "name": "Zsálya utca",
        "lat": "47.515885",
        "lon": "19.143718",
        "parent": "CSF02781"
    },
    {
        "id": "F02783",
        "name": "Fischer István utca",
        "lat": "47.515384",
        "lon": "19.139867",
        "parent": "CSF02783"
    },
    {
        "id": "F02784",
        "name": "Fischer István utca",
        "lat": "47.515061",
        "lon": "19.139070",
        "parent": "CSF02783"
    },
    {
        "id": "F02785",
        "name": "Fischer István utca",
        "lat": "47.515088",
        "lon": "19.139774",
        "parent": "CSF02783"
    },
    {
        "id": "F02786",
        "name": "Vezér utca \/ Fogarasi út",
        "lat": "47.513920",
        "lon": "19.137262",
        "parent": "CSF02786"
    },
    {
        "id": "F02787",
        "name": "Fogarasi út",
        "lat": "47.513561",
        "lon": "19.137116",
        "parent": "CSF02786"
    },
    {
        "id": "F02788",
        "name": "Fogarasi út",
        "lat": "47.513120",
        "lon": "19.137195",
        "parent": "CSF02786"
    },
    {
        "id": "F02789",
        "name": "Vezér utca \/ Fogarasi út",
        "lat": "47.513400",
        "lon": "19.136133",
        "parent": "CSF02786"
    },
    {
        "id": "F02790",
        "name": "Mogyoródi út",
        "lat": "47.517415",
        "lon": "19.130364",
        "parent": "CSF02791"
    },
    {
        "id": "F02791",
        "name": "Mogyoródi út",
        "lat": "47.517533",
        "lon": "19.129979",
        "parent": "CSF02791"
    },
    {
        "id": "F02792",
        "name": "Gvadányi utca",
        "lat": "47.520955",
        "lon": "19.135959",
        "parent": ""
    },
    {
        "id": "F02793",
        "name": "Öv utca \/ Mogyoródi út",
        "lat": "47.524531",
        "lon": "19.141012",
        "parent": ""
    },
    {
        "id": "F02794",
        "name": "Egressy tér",
        "lat": "47.514346",
        "lon": "19.120654",
        "parent": "CSF02795"
    },
    {
        "id": "F02795",
        "name": "Egressy tér",
        "lat": "47.515372",
        "lon": "19.119088",
        "parent": "CSF02795"
    },
    {
        "id": "F02796",
        "name": "Egressy tér",
        "lat": "47.514958",
        "lon": "19.119805",
        "parent": "CSF02795"
    },
    {
        "id": "F02797",
        "name": "Egressy tér",
        "lat": "47.514607",
        "lon": "19.120588",
        "parent": "CSF02795"
    },
    {
        "id": "F02798",
        "name": "Egressy tér",
        "lat": "47.514302",
        "lon": "19.119260",
        "parent": "CSF02795"
    },
    {
        "id": "F02799",
        "name": "Egressy tér",
        "lat": "47.514149",
        "lon": "19.119220",
        "parent": "CSF02795"
    },
    {
        "id": "F02800",
        "name": "Turán utca",
        "lat": "47.517303",
        "lon": "19.123964",
        "parent": "CSF02800"
    },
    {
        "id": "F02801",
        "name": "Turán utca",
        "lat": "47.516665",
        "lon": "19.122901",
        "parent": "CSF02800"
    },
    {
        "id": "F02802",
        "name": "Egressy út \/ Vezér utca",
        "lat": "47.519181",
        "lon": "19.127326",
        "parent": "CSF02804"
    },
    {
        "id": "F02803",
        "name": "Egressy út \/ Vezér utca",
        "lat": "47.519046",
        "lon": "19.126250",
        "parent": "CSF02804"
    },
    {
        "id": "F02804",
        "name": "Egressy út \/ Vezér utca",
        "lat": "47.519396",
        "lon": "19.127207",
        "parent": "CSF02804"
    },
    {
        "id": "F02805",
        "name": "Kála utca",
        "lat": "47.522767",
        "lon": "19.130863",
        "parent": ""
    },
    {
        "id": "F02806",
        "name": "Rákosmezei tér",
        "lat": "47.524169",
        "lon": "19.132791",
        "parent": "CSF02807"
    },
    {
        "id": "F02807",
        "name": "Rákosmezei tér",
        "lat": "47.524771",
        "lon": "19.133576",
        "parent": "CSF02807"
    },
    {
        "id": "F02808",
        "name": "Öv utca \/ Egressy út",
        "lat": "47.526792",
        "lon": "19.136593",
        "parent": ""
    },
    {
        "id": "F02809",
        "name": "Szugló utca \/ Cinkotai út",
        "lat": "47.526727",
        "lon": "19.127165",
        "parent": "CSF02810"
    },
    {
        "id": "F02810",
        "name": "Szugló utca \/ Cinkotai út",
        "lat": "47.526862",
        "lon": "19.127523",
        "parent": "CSF02810"
    },
    {
        "id": "F02811",
        "name": "Komócsy utca",
        "lat": "47.521351",
        "lon": "19.123279",
        "parent": "CSF02812"
    },
    {
        "id": "F02812",
        "name": "Komócsy utca",
        "lat": "47.521648",
        "lon": "19.122430",
        "parent": "CSF02812"
    },
    {
        "id": "F02813",
        "name": "Szugló utca \/ Nagy Lajos király útja",
        "lat": "47.517515",
        "lon": "19.116144",
        "parent": "CSF02815"
    },
    {
        "id": "F02814",
        "name": "Szugló utca \/ Nagy Lajos király útja",
        "lat": "47.517353",
        "lon": "19.115812",
        "parent": "CSF02815"
    },
    {
        "id": "F02815",
        "name": "Szugló utca \/ Nagy Lajos király útja",
        "lat": "47.517551",
        "lon": "19.115228",
        "parent": "CSF02815"
    },
    {
        "id": "F02816",
        "name": "Szugló utca \/ Nagy Lajos király útja",
        "lat": "47.516939",
        "lon": "19.115559",
        "parent": "CSF02815"
    },
    {
        "id": "F02817",
        "name": "Szugló utca \/ Nagy Lajos király útja",
        "lat": "47.517101",
        "lon": "19.116196",
        "parent": "CSF02815"
    },
    {
        "id": "F02818",
        "name": "Szugló utca \/ Nagy Lajos király útja",
        "lat": "47.517236",
        "lon": "19.116143",
        "parent": "CSF02815"
    },
    {
        "id": "F02819",
        "name": "Szugló utca \/ Róna utca",
        "lat": "47.514225",
        "lon": "19.111001",
        "parent": "CSF02820"
    },
    {
        "id": "F02820",
        "name": "Szugló utca \/ Róna utca",
        "lat": "47.514549",
        "lon": "19.111121",
        "parent": "CSF02820"
    },
    {
        "id": "F02821",
        "name": "Tisza István tér",
        "lat": "47.516386",
        "lon": "19.108030",
        "parent": "CS008458"
    },
    {
        "id": "F02823",
        "name": "Tisza István tér",
        "lat": "47.516386",
        "lon": "19.107180",
        "parent": "CS008458"
    },
    {
        "id": "F02824",
        "name": "Tisza István tér",
        "lat": "47.517006",
        "lon": "19.108416",
        "parent": "CS008458"
    },
    {
        "id": "F02826",
        "name": "Bosnyák tér",
        "lat": "47.520521",
        "lon": "19.113253",
        "parent": "CSF02826"
    },
    {
        "id": "F02827",
        "name": "Bosnyák tér",
        "lat": "47.520368",
        "lon": "19.113054",
        "parent": "CSF02826"
    },
    {
        "id": "F02828",
        "name": "Bosnyák tér",
        "lat": "47.520206",
        "lon": "19.112841",
        "parent": "CSF02826"
    },
    {
        "id": "F02829",
        "name": "Bosnyák tér",
        "lat": "47.519774",
        "lon": "19.112283",
        "parent": "CSF02826"
    },
    {
        "id": "F02830",
        "name": "Bosnyák tér",
        "lat": "47.519514",
        "lon": "19.111313",
        "parent": "CSF02826"
    },
    {
        "id": "F02831",
        "name": "Bosnyák tér",
        "lat": "47.519478",
        "lon": "19.111791",
        "parent": "CSF02826"
    },
    {
        "id": "F02832",
        "name": "Bosnyák tér",
        "lat": "47.519172",
        "lon": "19.112654",
        "parent": "CSF02826"
    },
    {
        "id": "F02834",
        "name": "Bosnyák tér",
        "lat": "47.518830",
        "lon": "19.112879",
        "parent": "CSF02826"
    },
    {
        "id": "F02835",
        "name": "Bosnyák tér",
        "lat": "47.519817",
        "lon": "19.112930",
        "parent": "CSF02826"
    },
    {
        "id": "F02836",
        "name": "Bosnyák tér",
        "lat": "47.520520",
        "lon": "19.113797",
        "parent": "CSF02826"
    },
    {
        "id": "F02837",
        "name": "Bosnyák tér",
        "lat": "47.519739",
        "lon": "19.111605",
        "parent": "CSF02826"
    },
    {
        "id": "F02840",
        "name": "Bosnyák tér",
        "lat": "47.520206",
        "lon": "19.113385",
        "parent": "CSF02826"
    },
    {
        "id": "F02844",
        "name": "Rákospatak utca \/ Csömöri út",
        "lat": "47.524403",
        "lon": "19.118317",
        "parent": "CSF02846"
    },
    {
        "id": "F02845",
        "name": "Rákospatak utca \/ Csömöri út",
        "lat": "47.524655",
        "lon": "19.118795",
        "parent": "CSF02846"
    },
    {
        "id": "F02846",
        "name": "Miskolci utca \/ Csömöri út",
        "lat": "47.527270",
        "lon": "19.122026",
        "parent": "CSF02846"
    },
    {
        "id": "F02847",
        "name": "Miskolci utca \/ Csömöri út",
        "lat": "47.526003",
        "lon": "19.120271",
        "parent": "CSF02846"
    },
    {
        "id": "F02848",
        "name": "Cinkotai út",
        "lat": "47.528490",
        "lon": "19.123816",
        "parent": "CSF02848"
    },
    {
        "id": "F02849",
        "name": "Cinkotai út",
        "lat": "47.528466",
        "lon": "19.123409",
        "parent": "CSF02848"
    },
    {
        "id": "F02850",
        "name": "Telepes utca",
        "lat": "47.530392",
        "lon": "19.121260",
        "parent": ""
    },
    {
        "id": "F02851",
        "name": "Öv utca",
        "lat": "47.530473",
        "lon": "19.121512",
        "parent": ""
    },
    {
        "id": "F02852",
        "name": "Fűrész utca",
        "lat": "47.523345",
        "lon": "19.113349",
        "parent": "CSF02853"
    },
    {
        "id": "F02853",
        "name": "Fűrész utca",
        "lat": "47.523632",
        "lon": "19.113841",
        "parent": "CSF02853"
    },
    {
        "id": "F02854",
        "name": "Telepes utca",
        "lat": "47.520756",
        "lon": "19.110611",
        "parent": ""
    },
    {
        "id": "F02855",
        "name": "Szuglói körvasút sor",
        "lat": "47.535071",
        "lon": "19.113147",
        "parent": ""
    },
    {
        "id": "F02857",
        "name": "Öv utca",
        "lat": "47.534382",
        "lon": "19.112446",
        "parent": "CSF02858"
    },
    {
        "id": "F02858",
        "name": "Öv utca",
        "lat": "47.534741",
        "lon": "19.112673",
        "parent": "CSF02858"
    },
    {
        "id": "F02859",
        "name": "Öv utca",
        "lat": "47.534237",
        "lon": "19.113203",
        "parent": "CSF02858"
    },
    {
        "id": "F02861",
        "name": "Rákospatak utca",
        "lat": "47.529257",
        "lon": "19.107553",
        "parent": "CSF02861"
    },
    {
        "id": "F02863",
        "name": "Rákospatak utca",
        "lat": "47.528682",
        "lon": "19.107127",
        "parent": "CSF02861"
    },
    {
        "id": "F02865",
        "name": "Nagy Lajos király útja \/ Czobor utca",
        "lat": "47.522811",
        "lon": "19.101982",
        "parent": "CSF02868"
    },
    {
        "id": "F02866",
        "name": "Nagy Lajos király útja \/ Czobor utca",
        "lat": "47.522352",
        "lon": "19.101636",
        "parent": "CSF02868"
    },
    {
        "id": "F02867",
        "name": "Nagy Lajos király útja \/ Czobor utca",
        "lat": "47.522190",
        "lon": "19.102579",
        "parent": "CSF02868"
    },
    {
        "id": "F02868",
        "name": "Nagy Lajos király útja \/ Czobor utca",
        "lat": "47.522856",
        "lon": "19.101145",
        "parent": "CSF02868"
    },
    {
        "id": "F02869",
        "name": "Nagy Lajos király útja \/ Czobor utca",
        "lat": "47.522415",
        "lon": "19.102380",
        "parent": "CSF02868"
    },
    {
        "id": "F02873",
        "name": "Korong utca",
        "lat": "47.514619",
        "lon": "19.097367",
        "parent": "CSF02875"
    },
    {
        "id": "F02875",
        "name": "Korong utca",
        "lat": "47.514682",
        "lon": "19.097088",
        "parent": "CSF02875"
    },
    {
        "id": "F02876",
        "name": "Erzsébet királyné útja, aluljáró",
        "lat": "47.517489",
        "lon": "19.094010",
        "parent": "CSF02880"
    },
    {
        "id": "F02879",
        "name": "Erzsébet királyné útja, aluljáró",
        "lat": "47.517598",
        "lon": "19.093333",
        "parent": "CSF02880"
    },
    {
        "id": "F02880",
        "name": "Erzsébet királyné útja, aluljáró",
        "lat": "47.517832",
        "lon": "19.093147",
        "parent": "CSF02880"
    },
    {
        "id": "F02881",
        "name": "Erzsébet királyné útja, aluljáró",
        "lat": "47.516923",
        "lon": "19.093917",
        "parent": "CSF02880"
    },
    {
        "id": "F02882",
        "name": "Mexikói út M",
        "lat": "47.519937",
        "lon": "19.090533",
        "parent": "CSF02974"
    },
    {
        "id": "F02883",
        "name": "Mexikói út M",
        "lat": "47.519704",
        "lon": "19.090573",
        "parent": "CSF02974"
    },
    {
        "id": "F02884",
        "name": "Mexikói út M",
        "lat": "47.520009",
        "lon": "19.091224",
        "parent": "CSF02974"
    },
    {
        "id": "F02885",
        "name": "Mexikói út M",
        "lat": "47.519829",
        "lon": "19.090958",
        "parent": "CSF02974"
    },
    {
        "id": "F02886",
        "name": "Mexikói út M",
        "lat": "47.520189",
        "lon": "19.091490",
        "parent": "CSF02974"
    },
    {
        "id": "F02887",
        "name": "Mexikói út",
        "lat": "47.519592",
        "lon": "19.090573",
        "parent": "CSLM1MUV"
    },
    {
        "id": "F02888",
        "name": "Mexikói út",
        "lat": "47.519513",
        "lon": "19.091037",
        "parent": "CSLM1MUV"
    },
    {
        "id": "F02891",
        "name": "Kacsóh Pongrác út",
        "lat": "47.518265",
        "lon": "19.089709",
        "parent": "CSF02893"
    },
    {
        "id": "F02892",
        "name": "Kacsóh Pongrác út",
        "lat": "47.517806",
        "lon": "19.089562",
        "parent": "CSF02893"
    },
    {
        "id": "F02893",
        "name": "Kacsóh Pongrác út",
        "lat": "47.519064",
        "lon": "19.088114",
        "parent": "CSF02893"
    },
    {
        "id": "F02894",
        "name": "Kacsóh Pongrác út",
        "lat": "47.518677",
        "lon": "19.088565",
        "parent": "CSF02893"
    },
    {
        "id": "F02895",
        "name": "Mexikói út",
        "lat": "47.521799",
        "lon": "19.091982",
        "parent": "CSF02974"
    },
    {
        "id": "F02898",
        "name": "Kassai tér",
        "lat": "47.524756",
        "lon": "19.096500",
        "parent": "CSF02898"
    },
    {
        "id": "F02899",
        "name": "Kassai tér",
        "lat": "47.524000",
        "lon": "19.098199",
        "parent": "CSF02898"
    },
    {
        "id": "F02900",
        "name": "Kassai tér",
        "lat": "47.524171",
        "lon": "19.098504",
        "parent": "CSF02898"
    },
    {
        "id": "F02901",
        "name": "Kassai tér",
        "lat": "47.523541",
        "lon": "19.098716",
        "parent": "CSF02898"
    },
    {
        "id": "F02902",
        "name": "Kassai tér",
        "lat": "47.523559",
        "lon": "19.097866",
        "parent": "CSF02898"
    },
    {
        "id": "F02903",
        "name": "Pándorfalu utca",
        "lat": "47.529512",
        "lon": "19.102706",
        "parent": "CSF02904"
    },
    {
        "id": "F02904",
        "name": "Pándorfalu utca",
        "lat": "47.529772",
        "lon": "19.103065",
        "parent": "CSF02904"
    },
    {
        "id": "F02905",
        "name": "Rákospatak utca",
        "lat": "47.531167",
        "lon": "19.101207",
        "parent": "CS009495"
    },
    {
        "id": "F02906",
        "name": "Róna park",
        "lat": "47.535636",
        "lon": "19.105701",
        "parent": ""
    },
    {
        "id": "F02907",
        "name": "Csáktornya park",
        "lat": "47.536535",
        "lon": "19.106751",
        "parent": "CSF02907"
    },
    {
        "id": "F02908",
        "name": "Csáktornya park",
        "lat": "47.536399",
        "lon": "19.107149",
        "parent": "CSF02907"
    },
    {
        "id": "F02909",
        "name": "Miskolci utca",
        "lat": "47.532521",
        "lon": "19.110585",
        "parent": "CSF02909"
    },
    {
        "id": "F02911",
        "name": "Miskolci utca",
        "lat": "47.532233",
        "lon": "19.110452",
        "parent": "CSF02909"
    },
    {
        "id": "F02913",
        "name": "Szentes utca",
        "lat": "47.526877",
        "lon": "19.117377",
        "parent": "CSF02913"
    },
    {
        "id": "F02914",
        "name": "Szentes utca",
        "lat": "47.526374",
        "lon": "19.116978",
        "parent": "CSF02913"
    },
    {
        "id": "F02915",
        "name": "Róna utca",
        "lat": "47.511884",
        "lon": "19.115393",
        "parent": "CSF02916"
    },
    {
        "id": "F02916",
        "name": "Róna utca",
        "lat": "47.512226",
        "lon": "19.116150",
        "parent": "CSF02916"
    },
    {
        "id": "F02917",
        "name": "Törökőr utca",
        "lat": "47.507922",
        "lon": "19.107675",
        "parent": "CSF02918"
    },
    {
        "id": "F02918",
        "name": "Törökőr utca",
        "lat": "47.508218",
        "lon": "19.108512",
        "parent": "CSF02918"
    },
    {
        "id": "F02919",
        "name": "Erzsébet királyné útja, aluljáró",
        "lat": "47.516654",
        "lon": "19.092496",
        "parent": "CSF02880"
    },
    {
        "id": "F02920",
        "name": "Erzsébet királyné útja, aluljáró",
        "lat": "47.516671",
        "lon": "19.092788",
        "parent": "CSF02880"
    },
    {
        "id": "F02921",
        "name": "Erzsébet királyné útja, aluljáró",
        "lat": "47.515934",
        "lon": "19.092973",
        "parent": "CSF02880"
    },
    {
        "id": "F02922",
        "name": "Erzsébet királyné útja, aluljáró",
        "lat": "47.515745",
        "lon": "19.092654",
        "parent": "CSF02880"
    },
    {
        "id": "F02923",
        "name": "Erzsébet királyné útja, aluljáró",
        "lat": "47.516400",
        "lon": "19.091909",
        "parent": "CSF02880"
    },
    {
        "id": "F02924",
        "name": "Erzsébet királyné útja, aluljáró",
        "lat": "47.516810",
        "lon": "19.091387",
        "parent": "CSF02880"
    },
    {
        "id": "F02925",
        "name": "Amerikai út (Mexikói út M)",
        "lat": "47.521367",
        "lon": "19.092460",
        "parent": "CSF02974"
    },
    {
        "id": "F02928",
        "name": "Pillangó utca",
        "lat": "47.503499",
        "lon": "19.118515",
        "parent": "CSF02929"
    },
    {
        "id": "F02929",
        "name": "Pillangó utca",
        "lat": "47.503535",
        "lon": "19.118781",
        "parent": "CSF02929"
    },
    {
        "id": "F02930",
        "name": "Kaffka Margit utca",
        "lat": "47.507938",
        "lon": "19.126473",
        "parent": "CSF02930"
    },
    {
        "id": "F02931",
        "name": "Kaffka Margit utca",
        "lat": "47.507902",
        "lon": "19.126632",
        "parent": "CSF02930"
    },
    {
        "id": "F02932",
        "name": "Tihamér utca",
        "lat": "47.511930",
        "lon": "19.139874",
        "parent": "CSF02932"
    },
    {
        "id": "F02933",
        "name": "Tihamér utca",
        "lat": "47.511607",
        "lon": "19.139675",
        "parent": "CSF02932"
    },
    {
        "id": "F02934",
        "name": "Újváros park",
        "lat": "47.514652",
        "lon": "19.145176",
        "parent": "CSF02935"
    },
    {
        "id": "F02935",
        "name": "Újváros park",
        "lat": "47.514859",
        "lon": "19.144712",
        "parent": "CSF02935"
    },
    {
        "id": "F02936",
        "name": "Mályva utca",
        "lat": "47.511639",
        "lon": "19.133276",
        "parent": "CSF02936"
    },
    {
        "id": "F02937",
        "name": "Mályva utca",
        "lat": "47.511226",
        "lon": "19.132293",
        "parent": "CSF02936"
    },
    {
        "id": "F02938",
        "name": "Gödöllői utca",
        "lat": "47.515371",
        "lon": "19.133720",
        "parent": "CSF02939"
    },
    {
        "id": "F02939",
        "name": "Gödöllői utca",
        "lat": "47.515633",
        "lon": "19.133070",
        "parent": "CSF02939"
    },
    {
        "id": "F02940",
        "name": "Cinkotai út \/ Mogyoródi út",
        "lat": "47.522653",
        "lon": "19.138339",
        "parent": ""
    },
    {
        "id": "F02941",
        "name": "Miskolci utca \/ Szugló utca",
        "lat": "47.524633",
        "lon": "19.124506",
        "parent": "CSF02942"
    },
    {
        "id": "F02942",
        "name": "Miskolci utca \/ Szugló utca",
        "lat": "47.524750",
        "lon": "19.124838",
        "parent": "CSF02942"
    },
    {
        "id": "F02943",
        "name": "Fűrész utca \/ Szugló utca",
        "lat": "47.520121",
        "lon": "19.119201",
        "parent": "CSF02943"
    },
    {
        "id": "F02944",
        "name": "Fűrész utca \/ Szugló utca",
        "lat": "47.519726",
        "lon": "19.118935",
        "parent": "CSF02943"
    },
    {
        "id": "F02945",
        "name": "Kerékgyártó utca",
        "lat": "47.532562",
        "lon": "19.116747",
        "parent": "CSF02945"
    },
    {
        "id": "F02946",
        "name": "Kerékgyártó utca",
        "lat": "47.532310",
        "lon": "19.117464",
        "parent": "CSF02945"
    },
    {
        "id": "F02947",
        "name": "Fűrész utca",
        "lat": "47.526272",
        "lon": "19.104973",
        "parent": "CSF02947"
    },
    {
        "id": "F02948",
        "name": "Fűrész utca",
        "lat": "47.525841",
        "lon": "19.104681",
        "parent": "CSF02947"
    },
    {
        "id": "F02951",
        "name": "Fűrész utca",
        "lat": "47.527562",
        "lon": "19.098773",
        "parent": ""
    },
    {
        "id": "F02952",
        "name": "Nezsider park",
        "lat": "47.527525",
        "lon": "19.101057",
        "parent": "CSF02952"
    },
    {
        "id": "F02953",
        "name": "Nezsider park",
        "lat": "47.526751",
        "lon": "19.100592",
        "parent": "CSF02952"
    },
    {
        "id": "F02954",
        "name": "Sárrét park",
        "lat": "47.534178",
        "lon": "19.106363",
        "parent": "CSF02954"
    },
    {
        "id": "F02955",
        "name": "Sárrét park",
        "lat": "47.533270",
        "lon": "19.105764",
        "parent": "CSF02954"
    },
    {
        "id": "F02956",
        "name": "Posta Járműtelep",
        "lat": "47.510213",
        "lon": "19.112523",
        "parent": "CSF02957"
    },
    {
        "id": "F02957",
        "name": "Posta Járműtelep",
        "lat": "47.510222",
        "lon": "19.112245",
        "parent": "CSF02957"
    },
    {
        "id": "F02960",
        "name": "Amerikai út",
        "lat": "47.514256",
        "lon": "19.103407",
        "parent": "CSF02960"
    },
    {
        "id": "F02961",
        "name": "Amerikai út",
        "lat": "47.513591",
        "lon": "19.102437",
        "parent": "CSF02960"
    },
    {
        "id": "F02962",
        "name": "Laky Adolf utca",
        "lat": "47.519674",
        "lon": "19.097424",
        "parent": "CSF02963"
    },
    {
        "id": "F02963",
        "name": "Laky Adolf utca",
        "lat": "47.519917",
        "lon": "19.097690",
        "parent": "CSF02963"
    },
    {
        "id": "F02966",
        "name": "Kerékgyártó utca",
        "lat": "47.521334",
        "lon": "19.105911",
        "parent": "CS009481"
    },
    {
        "id": "F02967",
        "name": "Kerékgyártó utca",
        "lat": "47.521307",
        "lon": "19.106243",
        "parent": "CS009481"
    },
    {
        "id": "F02968",
        "name": "Tihamér utca",
        "lat": "47.507087",
        "lon": "19.133082",
        "parent": "CSF02968"
    },
    {
        "id": "F02969",
        "name": "Tihamér utca",
        "lat": "47.506979",
        "lon": "19.133388",
        "parent": "CSF02968"
    },
    {
        "id": "F02970",
        "name": "Tihamér utca",
        "lat": "47.506826",
        "lon": "19.133475",
        "parent": "CSF02968"
    },
    {
        "id": "F02971",
        "name": "Jeszenák János utca",
        "lat": "47.511752",
        "lon": "19.125284",
        "parent": "CSF02745"
    },
    {
        "id": "F02972",
        "name": "Jeszenák János utca",
        "lat": "47.511608",
        "lon": "19.125668",
        "parent": "CSF02745"
    },
    {
        "id": "F02973",
        "name": "Jeszenák János utca",
        "lat": "47.511446",
        "lon": "19.125761",
        "parent": "CSF02745"
    },
    {
        "id": "F02974",
        "name": "Amerikai út (Mexikói út M)",
        "lat": "47.522257",
        "lon": "19.092912",
        "parent": "CSF02974"
    },
    {
        "id": "F02977",
        "name": "Ajtósi Dürer sor",
        "lat": "47.514692",
        "lon": "19.094857",
        "parent": "CSF02977"
    },
    {
        "id": "F02978",
        "name": "Ajtósi Dürer sor",
        "lat": "47.513612",
        "lon": "19.095746",
        "parent": "CSF02977"
    },
    {
        "id": "F02979",
        "name": "Ajtósi Dürer sor",
        "lat": "47.513431",
        "lon": "19.096261",
        "parent": "CSF02977"
    },
    {
        "id": "F02980",
        "name": "Ajtósi Dürer sor",
        "lat": "47.513809",
        "lon": "19.095757",
        "parent": "CSF02977"
    },
    {
        "id": "F02981",
        "name": "Besztercebányai utca",
        "lat": "47.541466",
        "lon": "19.171846",
        "parent": "CSF02982"
    },
    {
        "id": "F02982",
        "name": "Besztercebányai utca",
        "lat": "47.541494",
        "lon": "19.171607",
        "parent": "CSF02982"
    },
    {
        "id": "F02983",
        "name": "György utca",
        "lat": "47.537885",
        "lon": "19.164173",
        "parent": ""
    },
    {
        "id": "F02984",
        "name": "Rákospalotai határút",
        "lat": "47.537894",
        "lon": "19.164784",
        "parent": ""
    },
    {
        "id": "F02985",
        "name": "Szentmihályi út",
        "lat": "47.537239",
        "lon": "19.163003",
        "parent": ""
    },
    {
        "id": "F02986",
        "name": "Rákospalotai határút",
        "lat": "47.536736",
        "lon": "19.162205",
        "parent": ""
    },
    {
        "id": "F02987",
        "name": "János utca",
        "lat": "47.534534",
        "lon": "19.161005",
        "parent": ""
    },
    {
        "id": "F02988",
        "name": "Rákospalotai határút",
        "lat": "47.528875",
        "lon": "19.152547",
        "parent": "CSF02988"
    },
    {
        "id": "F02989",
        "name": "Rákospalotai határút",
        "lat": "47.528479",
        "lon": "19.153104",
        "parent": "CSF02988"
    },
    {
        "id": "F02990",
        "name": "Rákóczi út",
        "lat": "47.529711",
        "lon": "19.152654",
        "parent": ""
    },
    {
        "id": "F02991",
        "name": "Rigó utca",
        "lat": "47.528508",
        "lon": "19.150301",
        "parent": ""
    },
    {
        "id": "F02992",
        "name": "Rákospalotai határút",
        "lat": "47.527278",
        "lon": "19.148241",
        "parent": ""
    },
    {
        "id": "F02993",
        "name": "Pálya utca",
        "lat": "47.525514",
        "lon": "19.148795",
        "parent": ""
    },
    {
        "id": "F02994",
        "name": "József utca",
        "lat": "47.532541",
        "lon": "19.156684",
        "parent": "CSF02994"
    },
    {
        "id": "F02995",
        "name": "Rákospalota, Csömöri-patak",
        "lat": "47.590152",
        "lon": "19.122459",
        "parent": "CSF02996"
    },
    {
        "id": "F02996",
        "name": "Rákospalota, Csömöri-patak",
        "lat": "47.590313",
        "lon": "19.122646",
        "parent": "CSF02996"
    },
    {
        "id": "F02997",
        "name": "Visonta utca",
        "lat": "47.586249",
        "lon": "19.121071",
        "parent": "CSF02998"
    },
    {
        "id": "F02998",
        "name": "Visonta utca",
        "lat": "47.587112",
        "lon": "19.121764",
        "parent": "CSF02998"
    },
    {
        "id": "F02999",
        "name": "Kanizsai Dorottya utca",
        "lat": "47.582659",
        "lon": "19.121877",
        "parent": ""
    },
    {
        "id": "F03000",
        "name": "Kanizsai Dorottya utca",
        "lat": "47.585599",
        "lon": "19.124607",
        "parent": ""
    },
    {
        "id": "F03001",
        "name": "Bútorraktár",
        "lat": "47.582470",
        "lon": "19.123419",
        "parent": ""
    },
    {
        "id": "F03003",
        "name": "Rákospalota, MEDIMPEX",
        "lat": "47.586825",
        "lon": "19.133197",
        "parent": ""
    },
    {
        "id": "F03004",
        "name": "Károlyi Sándor út",
        "lat": "47.585818",
        "lon": "19.132624",
        "parent": ""
    },
    {
        "id": "F03005",
        "name": "Hulladékhasznosító Mű",
        "lat": "47.583733",
        "lon": "19.130560",
        "parent": "CS063399"
    },
    {
        "id": "F03008",
        "name": "Szántóföld utca",
        "lat": "47.576140",
        "lon": "19.132116",
        "parent": ""
    },
    {
        "id": "F03009",
        "name": "Régi Fóti út",
        "lat": "47.572808",
        "lon": "19.138504",
        "parent": ""
    },
    {
        "id": "F03010",
        "name": "Vághó Ferenc utca",
        "lat": "47.574352",
        "lon": "19.130000",
        "parent": ""
    },
    {
        "id": "F03011",
        "name": "Kosd utca",
        "lat": "47.572103",
        "lon": "19.130754",
        "parent": ""
    },
    {
        "id": "F03012",
        "name": "Rákospalota, Bogáncs utca",
        "lat": "47.570292",
        "lon": "19.134406",
        "parent": ""
    },
    {
        "id": "F03013",
        "name": "Közvágóhíd utca",
        "lat": "47.571890",
        "lon": "19.126953",
        "parent": "CSF03015"
    },
    {
        "id": "F03014",
        "name": "Esthajnal utca",
        "lat": "47.571827",
        "lon": "19.127032",
        "parent": ""
    },
    {
        "id": "F03015",
        "name": "Közvágóhíd tér",
        "lat": "47.572287",
        "lon": "19.124481",
        "parent": "CSF03015"
    },
    {
        "id": "F03016",
        "name": "Közvágóhíd tér",
        "lat": "47.572224",
        "lon": "19.124920",
        "parent": "CSF03015"
    },
    {
        "id": "F03017",
        "name": "Kovácsi Kálmán tér",
        "lat": "47.573971",
        "lon": "19.121692",
        "parent": "CSF03018"
    },
    {
        "id": "F03018",
        "name": "Kovácsi Kálmán tér",
        "lat": "47.574411",
        "lon": "19.122238",
        "parent": "CSF03018"
    },
    {
        "id": "F03019",
        "name": "Géza fejedelem tér",
        "lat": "47.568387",
        "lon": "19.118136",
        "parent": "CSF03020"
    },
    {
        "id": "F03020",
        "name": "Géza fejedelem tér",
        "lat": "47.568612",
        "lon": "19.117857",
        "parent": "CSF03020"
    },
    {
        "id": "F03021",
        "name": "Pozsony utca",
        "lat": "47.568217",
        "lon": "19.116807",
        "parent": "CSF03022"
    },
    {
        "id": "F03022",
        "name": "Pozsony utca",
        "lat": "47.568577",
        "lon": "19.117193",
        "parent": "CSF03022"
    },
    {
        "id": "F03023",
        "name": "Dal utca",
        "lat": "47.567297",
        "lon": "19.120939",
        "parent": ""
    },
    {
        "id": "F03024",
        "name": "Fő út",
        "lat": "47.566460",
        "lon": "19.122519",
        "parent": ""
    },
    {
        "id": "F03025",
        "name": "Csobogós utca",
        "lat": "47.569542",
        "lon": "19.126896",
        "parent": ""
    },
    {
        "id": "F03026",
        "name": "Rákospalota, Kossuth utca",
        "lat": "47.568796",
        "lon": "19.126297",
        "parent": "CSF03026"
    },
    {
        "id": "F03027",
        "name": "Rákospalota, Kossuth utca",
        "lat": "47.568140",
        "lon": "19.125924",
        "parent": "CSF03026"
    },
    {
        "id": "F03028",
        "name": "Rákospalota, Kossuth utca",
        "lat": "47.567609",
        "lon": "19.125312",
        "parent": "CSF03026"
    },
    {
        "id": "F03029",
        "name": "Rákospalota, Kossuth utca",
        "lat": "47.567434",
        "lon": "19.124838",
        "parent": "CSF03026"
    },
    {
        "id": "F03030",
        "name": "Rákospalota, Kossuth utca",
        "lat": "47.567227",
        "lon": "19.124548",
        "parent": "CSF03026"
    },
    {
        "id": "F03032",
        "name": "Sportcentrum",
        "lat": "47.574654",
        "lon": "19.135052",
        "parent": ""
    },
    {
        "id": "F03033",
        "name": "Rákospalota, Kossuth utca",
        "lat": "47.567626",
        "lon": "19.127265",
        "parent": "CSF03026"
    },
    {
        "id": "F03034",
        "name": "Kossuth utca, lakótelep",
        "lat": "47.565582",
        "lon": "19.129867",
        "parent": "CSF03035"
    },
    {
        "id": "F03035",
        "name": "Kossuth utca, lakótelep",
        "lat": "47.566734",
        "lon": "19.128819",
        "parent": "CSF03035"
    },
    {
        "id": "F03036",
        "name": "Juhos utca",
        "lat": "47.564514",
        "lon": "19.127473",
        "parent": "CSF03037"
    },
    {
        "id": "F03037",
        "name": "Juhos utca",
        "lat": "47.564998",
        "lon": "19.128962",
        "parent": "CSF03037"
    },
    {
        "id": "F03038",
        "name": "Epres sor",
        "lat": "47.562276",
        "lon": "19.123762",
        "parent": ""
    },
    {
        "id": "F03039",
        "name": "Epres sor",
        "lat": "47.561827",
        "lon": "19.123416",
        "parent": ""
    },
    {
        "id": "F03040",
        "name": "Régi Fóti út",
        "lat": "47.562151",
        "lon": "19.123138",
        "parent": ""
    },
    {
        "id": "F03041",
        "name": "Cserba Elemér út",
        "lat": "47.559441",
        "lon": "19.127692",
        "parent": ""
    },
    {
        "id": "F03042",
        "name": "Telek utca",
        "lat": "47.559231",
        "lon": "19.131279",
        "parent": ""
    },
    {
        "id": "F03043",
        "name": "Rákosmező utca 39.",
        "lat": "47.560860",
        "lon": "19.130219",
        "parent": ""
    },
    {
        "id": "F03045",
        "name": "Széchenyi tér",
        "lat": "47.564833",
        "lon": "19.121135",
        "parent": "CSF03045"
    },
    {
        "id": "F03046",
        "name": "Széchenyi tér",
        "lat": "47.564491",
        "lon": "19.120815",
        "parent": "CSF03045"
    },
    {
        "id": "F03047",
        "name": "Rákospalota, Széchenyi tér",
        "lat": "47.563349",
        "lon": "19.120694",
        "parent": "CSF03045"
    },
    {
        "id": "F03048",
        "name": "Hubay Jenő tér",
        "lat": "47.562955",
        "lon": "19.117996",
        "parent": "CSF03050"
    },
    {
        "id": "F03049",
        "name": "Deák utca",
        "lat": "47.563954",
        "lon": "19.115592",
        "parent": ""
    },
    {
        "id": "F03050",
        "name": "Hubay Jenő tér",
        "lat": "47.563496",
        "lon": "19.115618",
        "parent": "CSF03050"
    },
    {
        "id": "F03051",
        "name": "Fő út",
        "lat": "47.563704",
        "lon": "19.112894",
        "parent": ""
    },
    {
        "id": "F03052",
        "name": "Sződliget utca",
        "lat": "47.563875",
        "lon": "19.113333",
        "parent": ""
    },
    {
        "id": "F03053",
        "name": "Hubay Jenő tér",
        "lat": "47.562651",
        "lon": "19.114687",
        "parent": "CSF03050"
    },
    {
        "id": "F03054",
        "name": "Hubay Jenő tér",
        "lat": "47.562435",
        "lon": "19.114633",
        "parent": "CSF03050"
    },
    {
        "id": "F03055",
        "name": "Hubay Jenő tér",
        "lat": "47.562012",
        "lon": "19.115496",
        "parent": "CSF03050"
    },
    {
        "id": "F03056",
        "name": "Beller Imre utca",
        "lat": "47.561660",
        "lon": "19.117396",
        "parent": "CSF03056"
    },
    {
        "id": "F03057",
        "name": "Beller Imre utca",
        "lat": "47.561119",
        "lon": "19.119003",
        "parent": "CSF03056"
    },
    {
        "id": "F03058",
        "name": "Illyés Gyula utca",
        "lat": "47.558699",
        "lon": "19.120701",
        "parent": "CSF03059"
    },
    {
        "id": "F03059",
        "name": "Illyés Gyula utca",
        "lat": "47.559166",
        "lon": "19.121060",
        "parent": "CSF03059"
    },
    {
        "id": "F03060",
        "name": "Szentmihályi út",
        "lat": "47.559318",
        "lon": "19.122057",
        "parent": ""
    },
    {
        "id": "F03061",
        "name": "Fazekas sor",
        "lat": "47.557202",
        "lon": "19.125894",
        "parent": "CSF03063"
    },
    {
        "id": "F03062",
        "name": "Bezerédj Pál utca",
        "lat": "47.556833",
        "lon": "19.126292",
        "parent": ""
    },
    {
        "id": "F03063",
        "name": "Fazekas sor",
        "lat": "47.557364",
        "lon": "19.125602",
        "parent": "CSF03063"
    },
    {
        "id": "F03064",
        "name": "Pöltenberg Ernő utca",
        "lat": "47.553852",
        "lon": "19.131656",
        "parent": ""
    },
    {
        "id": "F03065",
        "name": "Aulich Lajos utca",
        "lat": "47.553393",
        "lon": "19.132213",
        "parent": ""
    },
    {
        "id": "F03066",
        "name": "Szerencs utca",
        "lat": "47.553307",
        "lon": "19.111792",
        "parent": "CSF03066"
    },
    {
        "id": "F03067",
        "name": "Szerencs utca",
        "lat": "47.552911",
        "lon": "19.111738",
        "parent": "CSF03066"
    },
    {
        "id": "F03068",
        "name": "Eötvös utca 74.",
        "lat": "47.555807",
        "lon": "19.112951",
        "parent": ""
    },
    {
        "id": "F03069",
        "name": "Arany János utca",
        "lat": "47.555672",
        "lon": "19.112765",
        "parent": ""
    },
    {
        "id": "F03070",
        "name": "Rákos úti szakrendelő",
        "lat": "47.554661",
        "lon": "19.118982",
        "parent": "CSF03070"
    },
    {
        "id": "F03071",
        "name": "Rákos úti szakrendelő",
        "lat": "47.553402",
        "lon": "19.118448",
        "parent": "CSF03070"
    },
    {
        "id": "F03072",
        "name": "Rákos úti szakrendelő",
        "lat": "47.553888",
        "lon": "19.118808",
        "parent": "CSF03070"
    },
    {
        "id": "F03073",
        "name": "Rákos úti szakrendelő",
        "lat": "47.554112",
        "lon": "19.119233",
        "parent": "CSF03070"
    },
    {
        "id": "F03074",
        "name": "Istvántelek vasútállomás",
        "lat": "47.550944",
        "lon": "19.107444",
        "parent": "CSF03075"
    },
    {
        "id": "F03075",
        "name": "Istvántelek vasútállomás",
        "lat": "47.550998",
        "lon": "19.107577",
        "parent": "CSF03075"
    },
    {
        "id": "F03076",
        "name": "Dugonics utca",
        "lat": "47.550825",
        "lon": "19.110726",
        "parent": ""
    },
    {
        "id": "F03077",
        "name": "Eötvös utca",
        "lat": "47.550582",
        "lon": "19.110367",
        "parent": ""
    },
    {
        "id": "F03078",
        "name": "Pázmány Péter utca",
        "lat": "47.548929",
        "lon": "19.106884",
        "parent": ""
    },
    {
        "id": "F03079",
        "name": "Wysocki utca",
        "lat": "47.548542",
        "lon": "19.107322",
        "parent": ""
    },
    {
        "id": "F03080",
        "name": "Patyolat utca",
        "lat": "47.547093",
        "lon": "19.109712",
        "parent": "CSF03081"
    },
    {
        "id": "F03081",
        "name": "Patyolat utca",
        "lat": "47.547147",
        "lon": "19.109459",
        "parent": "CSF03081"
    },
    {
        "id": "F03082",
        "name": "Széchenyi út",
        "lat": "47.546120",
        "lon": "19.113098",
        "parent": "CSF03082"
    },
    {
        "id": "F03083",
        "name": "Széchenyi út",
        "lat": "47.545166",
        "lon": "19.112473",
        "parent": ""
    },
    {
        "id": "F03084",
        "name": "Wysocki utca",
        "lat": "47.546175",
        "lon": "19.111079",
        "parent": ""
    },
    {
        "id": "F03085",
        "name": "Rákos út",
        "lat": "47.545662",
        "lon": "19.111690",
        "parent": ""
    },
    {
        "id": "F03086",
        "name": "Széchenyi út",
        "lat": "47.544239",
        "lon": "19.114916",
        "parent": "CSF03086"
    },
    {
        "id": "F03087",
        "name": "Széchenyi út",
        "lat": "47.543780",
        "lon": "19.114955",
        "parent": "CSF03086"
    },
    {
        "id": "F03088",
        "name": "Rákos út",
        "lat": "47.541958",
        "lon": "19.107461",
        "parent": ""
    },
    {
        "id": "F03089",
        "name": "Rekettye utca",
        "lat": "47.541661",
        "lon": "19.107740",
        "parent": ""
    },
    {
        "id": "F03090",
        "name": "Perczel Mór utca",
        "lat": "47.538816",
        "lon": "19.112624",
        "parent": "CSF03091"
    },
    {
        "id": "F03091",
        "name": "Perczel Mór utca",
        "lat": "47.539257",
        "lon": "19.111735",
        "parent": "CSF03091"
    },
    {
        "id": "F03092",
        "name": "Rekettye utca",
        "lat": "47.537250",
        "lon": "19.115067",
        "parent": ""
    },
    {
        "id": "F03094",
        "name": "Pestújhelyi tér",
        "lat": "47.534087",
        "lon": "19.124333",
        "parent": "CSF03095"
    },
    {
        "id": "F03095",
        "name": "Pestújhelyi tér",
        "lat": "47.534293",
        "lon": "19.124758",
        "parent": "CSF03095"
    },
    {
        "id": "F03096",
        "name": "Sztárai Mihály tér",
        "lat": "47.540083",
        "lon": "19.128765",
        "parent": "CSF03096"
    },
    {
        "id": "F03097",
        "name": "Sztárai Mihály tér",
        "lat": "47.539634",
        "lon": "19.128578",
        "parent": "CSF03096"
    },
    {
        "id": "F03098",
        "name": "Sztárai Mihály tér",
        "lat": "47.539949",
        "lon": "19.128340",
        "parent": "CSF03096"
    },
    {
        "id": "F03099",
        "name": "Sztárai Mihály tér",
        "lat": "47.539822",
        "lon": "19.128991",
        "parent": "CSF03096"
    },
    {
        "id": "F03100",
        "name": "Vág utca",
        "lat": "47.540143",
        "lon": "19.119746",
        "parent": "CSF03100"
    },
    {
        "id": "F03101",
        "name": "Vág utca",
        "lat": "47.539990",
        "lon": "19.119334",
        "parent": "CSF03100"
    },
    {
        "id": "F03102",
        "name": "Rákospalota, MÁV-telep",
        "lat": "47.541488",
        "lon": "19.121497",
        "parent": "CSF03102"
    },
    {
        "id": "F03103",
        "name": "Rákospalota, MÁV-telep",
        "lat": "47.541357",
        "lon": "19.120903",
        "parent": "CSF03102"
    },
    {
        "id": "F03104",
        "name": "Vasutastelep utca",
        "lat": "47.542678",
        "lon": "19.122233",
        "parent": "CSF03104"
    },
    {
        "id": "F03105",
        "name": "Vasutastelep utca",
        "lat": "47.542463",
        "lon": "19.121157",
        "parent": "CSF03104"
    },
    {
        "id": "F03106",
        "name": "Bánkút utca",
        "lat": "47.546443",
        "lon": "19.127499",
        "parent": "CSF03106"
    },
    {
        "id": "F03107",
        "name": "Bánkút utca",
        "lat": "47.546362",
        "lon": "19.127420",
        "parent": "CSF03106"
    },
    {
        "id": "F03108",
        "name": "Szerencs utca",
        "lat": "47.546902",
        "lon": "19.127354",
        "parent": "CSF03108"
    },
    {
        "id": "F03109",
        "name": "Szerencs utca",
        "lat": "47.546435",
        "lon": "19.126583",
        "parent": "CSF03108"
    },
    {
        "id": "F03110",
        "name": "Szerencs utca \/ Bánkút utca",
        "lat": "47.546848",
        "lon": "19.127101",
        "parent": "CSF03108"
    },
    {
        "id": "F03111",
        "name": "Szerencs utca \/ Bánkút utca",
        "lat": "47.546561",
        "lon": "19.126862",
        "parent": "CSF03108"
    },
    {
        "id": "F03112",
        "name": "Szerencs utca",
        "lat": "47.549694",
        "lon": "19.122230",
        "parent": "CSF03112"
    },
    {
        "id": "F03113",
        "name": "Szerencs utca",
        "lat": "47.549649",
        "lon": "19.122575",
        "parent": "CSF03112"
    },
    {
        "id": "F03114",
        "name": "Damjanich János utca",
        "lat": "47.549974",
        "lon": "19.121048",
        "parent": ""
    },
    {
        "id": "F03115",
        "name": "Klapka György utca",
        "lat": "47.550721",
        "lon": "19.119973",
        "parent": ""
    },
    {
        "id": "F03116",
        "name": "Szerencs utca",
        "lat": "47.551666",
        "lon": "19.117822",
        "parent": ""
    },
    {
        "id": "F03117",
        "name": "Klapka György utca",
        "lat": "47.552158",
        "lon": "19.122379",
        "parent": "CSF03117"
    },
    {
        "id": "F03118",
        "name": "Klapka György utca",
        "lat": "47.551817",
        "lon": "19.122406",
        "parent": "CSF03117"
    },
    {
        "id": "F03119",
        "name": "Kozák tér",
        "lat": "47.550169",
        "lon": "19.125233",
        "parent": "CSF03120"
    },
    {
        "id": "F03120",
        "name": "Kozák tér",
        "lat": "47.550276",
        "lon": "19.125738",
        "parent": "CSF03120"
    },
    {
        "id": "F03121",
        "name": "Szerencs utca",
        "lat": "47.548857",
        "lon": "19.123371",
        "parent": "CSF03112"
    },
    {
        "id": "F03122",
        "name": "Bercsényi Miklós utca",
        "lat": "47.549045",
        "lon": "19.123770",
        "parent": "CSF03122"
    },
    {
        "id": "F03123",
        "name": "Bercsényi Miklós utca",
        "lat": "47.548479",
        "lon": "19.123796",
        "parent": "CSF03122"
    },
    {
        "id": "F03124",
        "name": "Bercsényi Miklós utca",
        "lat": "47.548254",
        "lon": "19.123982",
        "parent": "CSF03122"
    },
    {
        "id": "F03125",
        "name": "Bánkút utca",
        "lat": "47.549445",
        "lon": "19.131622",
        "parent": ""
    },
    {
        "id": "F03126",
        "name": "Páskomliget utca",
        "lat": "47.548608",
        "lon": "19.132445",
        "parent": ""
    },
    {
        "id": "F03127",
        "name": "Rákospalotai köztemető",
        "lat": "47.552016",
        "lon": "19.133739",
        "parent": "CSF03127"
    },
    {
        "id": "F03129",
        "name": "Rákospalotai köztemető",
        "lat": "47.551827",
        "lon": "19.133686",
        "parent": "CSF03127"
    },
    {
        "id": "F03130",
        "name": "Szerencs utca",
        "lat": "47.543796",
        "lon": "19.131441",
        "parent": ""
    },
    {
        "id": "F03131",
        "name": "Pestújhelyi út",
        "lat": "47.544084",
        "lon": "19.131308",
        "parent": ""
    },
    {
        "id": "F03133",
        "name": "Templom tér",
        "lat": "47.541800",
        "lon": "19.130069",
        "parent": "CS008341"
    },
    {
        "id": "F03134",
        "name": "Thököly út",
        "lat": "47.538281",
        "lon": "19.133850",
        "parent": "CSF03134"
    },
    {
        "id": "F03135",
        "name": "Thököly út",
        "lat": "47.538191",
        "lon": "19.133849",
        "parent": "CSF03134"
    },
    {
        "id": "F03136",
        "name": "Apolló utca",
        "lat": "47.537299",
        "lon": "19.135229",
        "parent": "CSF03136"
    },
    {
        "id": "F03137",
        "name": "Apolló utca",
        "lat": "47.536985",
        "lon": "19.134644",
        "parent": "CSF03136"
    },
    {
        "id": "F03138",
        "name": "Madách utca",
        "lat": "47.538800",
        "lon": "19.136441",
        "parent": "CSF03139"
    },
    {
        "id": "F03139",
        "name": "Madách utca",
        "lat": "47.539195",
        "lon": "19.137756",
        "parent": "CSF03139"
    },
    {
        "id": "F03140",
        "name": "Nyírpalota út",
        "lat": "47.537639",
        "lon": "19.137368",
        "parent": ""
    },
    {
        "id": "F03141",
        "name": "Késmárk utca",
        "lat": "47.537226",
        "lon": "19.136903",
        "parent": ""
    },
    {
        "id": "F03142",
        "name": "Késmárk utca",
        "lat": "47.529885",
        "lon": "19.148963",
        "parent": "CSF03143"
    },
    {
        "id": "F03143",
        "name": "Késmárk utca 11.",
        "lat": "47.530129",
        "lon": "19.148166",
        "parent": "CSF03143"
    },
    {
        "id": "F03144",
        "name": "Újpalota, Szentmihályi út",
        "lat": "47.542035",
        "lon": "19.151350",
        "parent": "CS048009"
    },
    {
        "id": "F03145",
        "name": "Újpalota, Szentmihályi út",
        "lat": "47.541288",
        "lon": "19.151681",
        "parent": "CS048009"
    },
    {
        "id": "F03146",
        "name": "Újpalota, Szentmihályi út",
        "lat": "47.541712",
        "lon": "19.151097",
        "parent": "CS048009"
    },
    {
        "id": "F03147",
        "name": "Újpalota, Szentmihályi út",
        "lat": "47.541513",
        "lon": "19.151429",
        "parent": "CS048009"
    },
    {
        "id": "F03148",
        "name": "Erdőkerülő utca",
        "lat": "47.541172",
        "lon": "19.151017",
        "parent": ""
    },
    {
        "id": "F03149",
        "name": "Újpalota, Erdőkerülő utca",
        "lat": "47.539549",
        "lon": "19.145395",
        "parent": "CSF03202"
    },
    {
        "id": "F03150",
        "name": "Erdőkerülő utca",
        "lat": "47.539648",
        "lon": "19.144916",
        "parent": "CSF03202"
    },
    {
        "id": "F03151",
        "name": "Fő tér",
        "lat": "47.540921",
        "lon": "19.139127",
        "parent": "CSF03154"
    },
    {
        "id": "F03152",
        "name": "Fő tér",
        "lat": "47.541541",
        "lon": "19.140125",
        "parent": "CSF03154"
    },
    {
        "id": "F03153",
        "name": "Fő tér",
        "lat": "47.541630",
        "lon": "19.141613",
        "parent": "CSF03154"
    },
    {
        "id": "F03154",
        "name": "Fő tér",
        "lat": "47.542314",
        "lon": "19.141043",
        "parent": "CSF03154"
    },
    {
        "id": "F03155",
        "name": "Fő tér",
        "lat": "47.541981",
        "lon": "19.141255",
        "parent": "CSF03154"
    },
    {
        "id": "F03156",
        "name": "Fő tér",
        "lat": "47.542188",
        "lon": "19.140989",
        "parent": "CSF03154"
    },
    {
        "id": "F03157",
        "name": "Vásárcsarnok",
        "lat": "47.545993",
        "lon": "19.140531",
        "parent": "CSF03157"
    },
    {
        "id": "F03158",
        "name": "Vásárcsarnok",
        "lat": "47.545175",
        "lon": "19.139892",
        "parent": "CSF03157"
    },
    {
        "id": "F03159",
        "name": "Vásárcsarnok",
        "lat": "47.545527",
        "lon": "19.138312",
        "parent": "CSF03157"
    },
    {
        "id": "F03160",
        "name": "Vásárcsarnok",
        "lat": "47.545203",
        "lon": "19.138218",
        "parent": "CSF03157"
    },
    {
        "id": "F03161",
        "name": "Vásárcsarnok",
        "lat": "47.544870",
        "lon": "19.139041",
        "parent": "CSF03157"
    },
    {
        "id": "F03162",
        "name": "Vásárcsarnok",
        "lat": "47.545041",
        "lon": "19.138869",
        "parent": "CSF03157"
    },
    {
        "id": "F03163",
        "name": "Újpalota, Nyírpalota út",
        "lat": "47.546873",
        "lon": "19.142260",
        "parent": "CSF03166"
    },
    {
        "id": "F03164",
        "name": "Újpalota, Nyírpalota út",
        "lat": "47.546765",
        "lon": "19.142485",
        "parent": "CSF03166"
    },
    {
        "id": "F03165",
        "name": "Újpalota, Nyírpalota út",
        "lat": "47.547377",
        "lon": "19.141450",
        "parent": "CSF03166"
    },
    {
        "id": "F03166",
        "name": "Nyírpalota út",
        "lat": "47.547900",
        "lon": "19.140176",
        "parent": "CSF03166"
    },
    {
        "id": "F03167",
        "name": "Újpalota, Sárfű utca",
        "lat": "47.549908",
        "lon": "19.138120",
        "parent": "CS009415"
    },
    {
        "id": "F03168",
        "name": "Opál utca",
        "lat": "47.542249",
        "lon": "19.117132",
        "parent": "CSF03168"
    },
    {
        "id": "F03169",
        "name": "Opál utca",
        "lat": "47.542088",
        "lon": "19.117198",
        "parent": "CSF03168"
    },
    {
        "id": "F03170",
        "name": "Árokhát út",
        "lat": "47.577072",
        "lon": "19.124421",
        "parent": "CSF03171"
    },
    {
        "id": "F03171",
        "name": "Árokhát út",
        "lat": "47.577360",
        "lon": "19.124861",
        "parent": "CSF03171"
    },
    {
        "id": "F03172",
        "name": "Karatna tér",
        "lat": "47.542968",
        "lon": "19.109129",
        "parent": "CSF03174"
    },
    {
        "id": "F03173",
        "name": "Karatna tér",
        "lat": "47.543046",
        "lon": "19.108711",
        "parent": "CSF03174"
    },
    {
        "id": "F03174",
        "name": "Karatna tér",
        "lat": "47.543055",
        "lon": "19.108538",
        "parent": "CSF03174"
    },
    {
        "id": "F03175",
        "name": "Rákospalota, Székely Elek út",
        "lat": "47.579625",
        "lon": "19.126791",
        "parent": "CSF03176"
    },
    {
        "id": "F03176",
        "name": "Székely Elek út",
        "lat": "47.579733",
        "lon": "19.127057",
        "parent": "CSF03176"
    },
    {
        "id": "F03177",
        "name": "Kolozsvár utca",
        "lat": "47.541985",
        "lon": "19.123096",
        "parent": ""
    },
    {
        "id": "F03179",
        "name": "Rädda Barnen utca",
        "lat": "47.557138",
        "lon": "19.113524",
        "parent": "CSF03180"
    },
    {
        "id": "F03180",
        "name": "Rädda Barnen utca",
        "lat": "47.557300",
        "lon": "19.113471",
        "parent": "CSF03180"
    },
    {
        "id": "F03181",
        "name": "Wesselényi utca",
        "lat": "47.549877",
        "lon": "19.116903",
        "parent": "CSF03181"
    },
    {
        "id": "F03182",
        "name": "Wesselényi utca",
        "lat": "47.549319",
        "lon": "19.116809",
        "parent": "CSF03181"
    },
    {
        "id": "F03183",
        "name": "Beller Imre utca",
        "lat": "47.554960",
        "lon": "19.115328",
        "parent": "CSF03183"
    },
    {
        "id": "F03184",
        "name": "Beller Imre utca",
        "lat": "47.554906",
        "lon": "19.115939",
        "parent": "CSF03183"
    },
    {
        "id": "F03185",
        "name": "Emlék tér",
        "lat": "47.536982",
        "lon": "19.126595",
        "parent": "CSF03185"
    },
    {
        "id": "F03186",
        "name": "Emlék tér",
        "lat": "47.536829",
        "lon": "19.126608",
        "parent": "CSF03185"
    },
    {
        "id": "F03187",
        "name": "Ady Endre utca",
        "lat": "47.535421",
        "lon": "19.120297",
        "parent": "CSF03187"
    },
    {
        "id": "F03188",
        "name": "Ady Endre utca",
        "lat": "47.535294",
        "lon": "19.120908",
        "parent": "CSF03187"
    },
    {
        "id": "F03189",
        "name": "Wesselényi utca",
        "lat": "47.544098",
        "lon": "19.123670",
        "parent": "CSF03190"
    },
    {
        "id": "F03190",
        "name": "Wesselényi utca",
        "lat": "47.544152",
        "lon": "19.123577",
        "parent": "CSF03190"
    },
    {
        "id": "F03191",
        "name": "Sárfű utca",
        "lat": "47.547842",
        "lon": "19.134091",
        "parent": "CSF03192"
    },
    {
        "id": "F03192",
        "name": "Sárfű utca",
        "lat": "47.548085",
        "lon": "19.133586",
        "parent": "CSF03192"
    },
    {
        "id": "F03193",
        "name": "Sárfű utca",
        "lat": "47.547346",
        "lon": "19.135193",
        "parent": "CSF03192"
    },
    {
        "id": "F03194",
        "name": "Sárfű utca",
        "lat": "47.546599",
        "lon": "19.135843",
        "parent": "CSF03192"
    },
    {
        "id": "F03195",
        "name": "Molnár Viktor utca",
        "lat": "47.533543",
        "lon": "19.130495",
        "parent": "CSF03196"
    },
    {
        "id": "F03196",
        "name": "Molnár Viktor utca",
        "lat": "47.533570",
        "lon": "19.130322",
        "parent": "CSF03196"
    },
    {
        "id": "F03197",
        "name": "Késmárk utca 20.",
        "lat": "47.531552",
        "lon": "19.145593",
        "parent": "CSF03198"
    },
    {
        "id": "F03198",
        "name": "Késmárk utca 9.",
        "lat": "47.532273",
        "lon": "19.144120",
        "parent": "CSF03198"
    },
    {
        "id": "F03199",
        "name": "Fázis utca",
        "lat": "47.534138",
        "lon": "19.141055",
        "parent": "CSF03199"
    },
    {
        "id": "F03200",
        "name": "Fázis utca",
        "lat": "47.533741",
        "lon": "19.141546",
        "parent": "CSF03199"
    },
    {
        "id": "F03201",
        "name": "Erdőkerülő utca 28.",
        "lat": "47.540023",
        "lon": "19.147747",
        "parent": "CSF03202"
    },
    {
        "id": "F03202",
        "name": "Erdőkerülő utca 27.",
        "lat": "47.540185",
        "lon": "19.148557",
        "parent": "CSF03202"
    },
    {
        "id": "F03203",
        "name": "Szent Korona útja",
        "lat": "47.547764",
        "lon": "19.115053",
        "parent": "CSF03203"
    },
    {
        "id": "F03204",
        "name": "Szent Korona útja",
        "lat": "47.547225",
        "lon": "19.114561",
        "parent": "CSF03203"
    },
    {
        "id": "F03205",
        "name": "Tóth István utca",
        "lat": "47.538301",
        "lon": "19.117007",
        "parent": "CSF03205"
    },
    {
        "id": "F03206",
        "name": "Tóth István utca",
        "lat": "47.537950",
        "lon": "19.116635",
        "parent": "CSF03205"
    },
    {
        "id": "F03209",
        "name": "Zsókavár utca",
        "lat": "47.540999",
        "lon": "19.143285",
        "parent": ""
    },
    {
        "id": "F03210",
        "name": "Gusztáv utca",
        "lat": "47.539500",
        "lon": "19.174171",
        "parent": "CSF03210"
    },
    {
        "id": "F03211",
        "name": "Gusztáv utca",
        "lat": "47.538744",
        "lon": "19.174873",
        "parent": "CSF03210"
    },
    {
        "id": "F03212",
        "name": "Csömöri út",
        "lat": "47.534835",
        "lon": "19.181832",
        "parent": "CSF03212"
    },
    {
        "id": "F03213",
        "name": "Csömöri út (Szlovák út)",
        "lat": "47.534673",
        "lon": "19.181951",
        "parent": "CSF03212"
    },
    {
        "id": "F03214",
        "name": "Kisszentmihály, Baross utca",
        "lat": "47.536717",
        "lon": "19.177697",
        "parent": "CSF03214"
    },
    {
        "id": "F03215",
        "name": "Baross utca",
        "lat": "47.536302",
        "lon": "19.178334",
        "parent": "CSF03214"
    },
    {
        "id": "F03216",
        "name": "Szlovák út",
        "lat": "47.532236",
        "lon": "19.189196",
        "parent": "CSF03216"
    },
    {
        "id": "F03217",
        "name": "Timur utca",
        "lat": "47.531678",
        "lon": "19.189049",
        "parent": "CSF03218"
    },
    {
        "id": "F03218",
        "name": "Timur utca",
        "lat": "47.531940",
        "lon": "19.188239",
        "parent": "CSF03218"
    },
    {
        "id": "F03219",
        "name": "Gusztáv utca",
        "lat": "47.535976",
        "lon": "19.166640",
        "parent": "CSF03219"
    },
    {
        "id": "F03220",
        "name": "Gusztáv utca",
        "lat": "47.535337",
        "lon": "19.167103",
        "parent": "CSF03219"
    },
    {
        "id": "F03221",
        "name": "György utca",
        "lat": "47.530832",
        "lon": "19.172344",
        "parent": ""
    },
    {
        "id": "F03222",
        "name": "Csömöri út",
        "lat": "47.530736",
        "lon": "19.171661",
        "parent": ""
    },
    {
        "id": "F03223",
        "name": "Diófa utca",
        "lat": "47.530367",
        "lon": "19.171581",
        "parent": ""
    },
    {
        "id": "F03224",
        "name": "Mátyás király utca",
        "lat": "47.532701",
        "lon": "19.176341",
        "parent": ""
    },
    {
        "id": "F03225",
        "name": "Rákosszentmihály, Csömöri út",
        "lat": "47.532179",
        "lon": "19.176366",
        "parent": ""
    },
    {
        "id": "F03226",
        "name": "Mátyás király utca",
        "lat": "47.532305",
        "lon": "19.175769",
        "parent": ""
    },
    {
        "id": "F03227",
        "name": "Mátyás király utca",
        "lat": "47.527595",
        "lon": "19.181375",
        "parent": ""
    },
    {
        "id": "F03228",
        "name": "Mátyás király utca 71.",
        "lat": "47.528046",
        "lon": "19.180473",
        "parent": ""
    },
    {
        "id": "F03229",
        "name": "Rákosi út",
        "lat": "47.527632",
        "lon": "19.180738",
        "parent": ""
    },
    {
        "id": "F03230",
        "name": "Mátyásföldi tér",
        "lat": "47.523264",
        "lon": "19.185242",
        "parent": "CSF03231"
    },
    {
        "id": "F03231",
        "name": "Mátyásföldi tér",
        "lat": "47.523372",
        "lon": "19.184963",
        "parent": "CSF03231"
    },
    {
        "id": "F03232",
        "name": "Sasvár utca",
        "lat": "47.520401",
        "lon": "19.187492",
        "parent": "CSF03232"
    },
    {
        "id": "F03233",
        "name": "Sasvár utca",
        "lat": "47.519878",
        "lon": "19.188287",
        "parent": "CSF03232"
    },
    {
        "id": "F03234",
        "name": "Olga utca",
        "lat": "47.521361",
        "lon": "19.181705",
        "parent": ""
    },
    {
        "id": "F03235",
        "name": "Fuvallat utca",
        "lat": "47.509898",
        "lon": "19.185021",
        "parent": "CSF03236"
    },
    {
        "id": "F03236",
        "name": "Fuvallat utca",
        "lat": "47.510113",
        "lon": "19.185632",
        "parent": "CSF03236"
    },
    {
        "id": "F03237",
        "name": "Ballada utca",
        "lat": "47.504138",
        "lon": "19.187993",
        "parent": "CSF03238"
    },
    {
        "id": "F03238",
        "name": "Ballada utca",
        "lat": "47.504281",
        "lon": "19.188432",
        "parent": "CSF03238"
    },
    {
        "id": "F03239",
        "name": "Galgahévíz utca",
        "lat": "47.503550",
        "lon": "19.183120",
        "parent": "CSF03240"
    },
    {
        "id": "F03240",
        "name": "Galgahévíz utca",
        "lat": "47.503720",
        "lon": "19.183678",
        "parent": "CSF03240"
    },
    {
        "id": "F03241",
        "name": "Sashalom H",
        "lat": "47.508736",
        "lon": "19.178447",
        "parent": "CSF03244"
    },
    {
        "id": "F03242",
        "name": "Sashalom H",
        "lat": "47.508302",
        "lon": "19.180251",
        "parent": "CSF03244"
    },
    {
        "id": "F03243",
        "name": "Sashalom H",
        "lat": "47.509193",
        "lon": "19.180413",
        "parent": "CSF03244"
    },
    {
        "id": "F03244",
        "name": "Sashalom H",
        "lat": "47.509437",
        "lon": "19.179166",
        "parent": "CSF03244"
    },
    {
        "id": "F03245",
        "name": "Futórózsa utca",
        "lat": "47.515223",
        "lon": "19.185301",
        "parent": ""
    },
    {
        "id": "F03246",
        "name": "Budapesti út",
        "lat": "47.520311",
        "lon": "19.179405",
        "parent": ""
    },
    {
        "id": "F03247",
        "name": "Margit utca",
        "lat": "47.511905",
        "lon": "19.176211",
        "parent": "CSF03247"
    },
    {
        "id": "F03248",
        "name": "Margit utca",
        "lat": "47.511454",
        "lon": "19.176940",
        "parent": "CSF03247"
    },
    {
        "id": "F03249",
        "name": "Budapesti út",
        "lat": "47.516489",
        "lon": "19.170778",
        "parent": "CSF03249"
    },
    {
        "id": "F03250",
        "name": "Budapesti út",
        "lat": "47.516129",
        "lon": "19.171402",
        "parent": "CSF03249"
    },
    {
        "id": "F03251",
        "name": "Rákosi út",
        "lat": "47.523639",
        "lon": "19.171685",
        "parent": ""
    },
    {
        "id": "F03252",
        "name": "János utca",
        "lat": "47.523216",
        "lon": "19.171803",
        "parent": "CS009383"
    },
    {
        "id": "F03253",
        "name": "Rákosi út",
        "lat": "47.521395",
        "lon": "19.166979",
        "parent": ""
    },
    {
        "id": "F03254",
        "name": "József utca",
        "lat": "47.520919",
        "lon": "19.166593",
        "parent": "CSF03255"
    },
    {
        "id": "F03255",
        "name": "József utca",
        "lat": "47.520955",
        "lon": "19.166978",
        "parent": "CSF03255"
    },
    {
        "id": "F03256",
        "name": "Rákosi út",
        "lat": "47.520882",
        "lon": "19.167668",
        "parent": ""
    },
    {
        "id": "F03257",
        "name": "János utca",
        "lat": "47.528965",
        "lon": "19.168210",
        "parent": ""
    },
    {
        "id": "F03258",
        "name": "Csömöri út",
        "lat": "47.528771",
        "lon": "19.166637",
        "parent": "CSF03258"
    },
    {
        "id": "F03259",
        "name": "János utca",
        "lat": "47.528169",
        "lon": "19.166715",
        "parent": ""
    },
    {
        "id": "F03260",
        "name": "József utca",
        "lat": "47.526338",
        "lon": "19.162488",
        "parent": "CSF03260"
    },
    {
        "id": "F03261",
        "name": "Csömöri út",
        "lat": "47.525996",
        "lon": "19.162580",
        "parent": ""
    },
    {
        "id": "F03262",
        "name": "József utca",
        "lat": "47.525988",
        "lon": "19.161983",
        "parent": "CSF03260"
    },
    {
        "id": "F03263",
        "name": "Rákóczi út",
        "lat": "47.524121",
        "lon": "19.157942",
        "parent": "CSF03265"
    },
    {
        "id": "F03264",
        "name": "Batthyány utca",
        "lat": "47.523672",
        "lon": "19.156653",
        "parent": ""
    },
    {
        "id": "F03265",
        "name": "Rákóczi út",
        "lat": "47.524490",
        "lon": "19.157026",
        "parent": "CSF03265"
    },
    {
        "id": "F03266",
        "name": "Batthyány utca",
        "lat": "47.518424",
        "lon": "19.161236",
        "parent": "CSF03268"
    },
    {
        "id": "F03267",
        "name": "Rákosi út",
        "lat": "47.517974",
        "lon": "19.161209",
        "parent": "CSF03269"
    },
    {
        "id": "F03268",
        "name": "Batthyány utca",
        "lat": "47.518468",
        "lon": "19.161582",
        "parent": "CSF03268"
    },
    {
        "id": "F03269",
        "name": "Rákosi út",
        "lat": "47.518406",
        "lon": "19.160612",
        "parent": "CSF03269"
    },
    {
        "id": "F03270",
        "name": "Budapesti út",
        "lat": "47.515435",
        "lon": "19.163752",
        "parent": "CSF03270"
    },
    {
        "id": "F03271",
        "name": "Budapesti út",
        "lat": "47.514904",
        "lon": "19.164004",
        "parent": "CSF03270"
    },
    {
        "id": "F03272",
        "name": "Veres Péter út",
        "lat": "47.508824",
        "lon": "19.171125",
        "parent": ""
    },
    {
        "id": "F03273",
        "name": "Thököly út",
        "lat": "47.508995",
        "lon": "19.171138",
        "parent": ""
    },
    {
        "id": "F03274",
        "name": "Lándzsa utca",
        "lat": "47.507422",
        "lon": "19.171023",
        "parent": ""
    },
    {
        "id": "F03275",
        "name": "Thököly út",
        "lat": "47.507888",
        "lon": "19.173055",
        "parent": ""
    },
    {
        "id": "F03276",
        "name": "Pálya utca",
        "lat": "47.521526",
        "lon": "19.152267",
        "parent": "CSF03277"
    },
    {
        "id": "F03277",
        "name": "Pálya utca",
        "lat": "47.521958",
        "lon": "19.152905",
        "parent": "CSF03277"
    },
    {
        "id": "F03278",
        "name": "Csömöri út",
        "lat": "47.522129",
        "lon": "19.152201",
        "parent": ""
    },
    {
        "id": "F03279",
        "name": "Csömöri út",
        "lat": "47.520781",
        "lon": "19.151243",
        "parent": ""
    },
    {
        "id": "F03280",
        "name": "Rózsa utca",
        "lat": "47.520565",
        "lon": "19.151282",
        "parent": ""
    },
    {
        "id": "F03281",
        "name": "Rákosszentmihály vasútállomás",
        "lat": "47.520064",
        "lon": "19.148174",
        "parent": "CSF03281"
    },
    {
        "id": "F03282",
        "name": "Rákosi út",
        "lat": "47.516487",
        "lon": "19.155324",
        "parent": ""
    },
    {
        "id": "F03283",
        "name": "Rózsa utca",
        "lat": "47.516126",
        "lon": "19.156159",
        "parent": "CSF03283"
    },
    {
        "id": "F03284",
        "name": "Raktárak",
        "lat": "47.536893",
        "lon": "19.246097",
        "parent": "CSF03284"
    },
    {
        "id": "F03285",
        "name": "Raktárak",
        "lat": "47.536247",
        "lon": "19.244766",
        "parent": "CSF03284"
    },
    {
        "id": "F03286",
        "name": "Cinkotai autóbuszgarázs",
        "lat": "47.499128",
        "lon": "19.238311",
        "parent": "CSF03286"
    },
    {
        "id": "F03287",
        "name": "Cinkotai autóbuszgarázs",
        "lat": "47.499019",
        "lon": "19.238510",
        "parent": "CSF03286"
    },
    {
        "id": "F03289",
        "name": "Cinkotai autóbuszgarázs",
        "lat": "47.498507",
        "lon": "19.238163",
        "parent": "CSF03286"
    },
    {
        "id": "F03290",
        "name": "Injekcióüzem",
        "lat": "47.495937",
        "lon": "19.231557",
        "parent": "CSF03291"
    },
    {
        "id": "F03291",
        "name": "Injekcióüzem",
        "lat": "47.496233",
        "lon": "19.232023",
        "parent": "CSF03291"
    },
    {
        "id": "F03292",
        "name": "Árpádföld, Dezsőfia utca",
        "lat": "47.536467",
        "lon": "19.200816",
        "parent": ""
    },
    {
        "id": "F03293",
        "name": "Cinkota alsó",
        "lat": "47.526787",
        "lon": "19.220921",
        "parent": "CSF03293"
    },
    {
        "id": "F03294",
        "name": "Cinkota alsó",
        "lat": "47.525941",
        "lon": "19.221051",
        "parent": "CSF03293"
    },
    {
        "id": "F03295",
        "name": "Állás utca",
        "lat": "47.529388",
        "lon": "19.194076",
        "parent": "CSF03297"
    },
    {
        "id": "F03296",
        "name": "Állás utca",
        "lat": "47.529171",
        "lon": "19.194832",
        "parent": "CSF03297"
    },
    {
        "id": "F03297",
        "name": "Állás utca",
        "lat": "47.529494",
        "lon": "19.194966",
        "parent": "CSF03297"
    },
    {
        "id": "F03298",
        "name": "Menyhért utca",
        "lat": "47.531699",
        "lon": "19.200975",
        "parent": ""
    },
    {
        "id": "F03299",
        "name": "Árpádföld, Bekecs utca",
        "lat": "47.533606",
        "lon": "19.208020",
        "parent": ""
    },
    {
        "id": "F03300",
        "name": "Ostoros út 61.",
        "lat": "47.523693",
        "lon": "19.208176",
        "parent": "CSF03300"
    },
    {
        "id": "F03301",
        "name": "Ostoros út 40.",
        "lat": "47.523187",
        "lon": "19.209688",
        "parent": "CSF03300"
    },
    {
        "id": "F03302",
        "name": "Csókakő utca",
        "lat": "47.521966",
        "lon": "19.214996",
        "parent": "CSF03302"
    },
    {
        "id": "F03303",
        "name": "Csókakő utca",
        "lat": "47.521794",
        "lon": "19.215712",
        "parent": "CSF03302"
    },
    {
        "id": "F03304",
        "name": "Cinkota H",
        "lat": "47.520403",
        "lon": "19.218485",
        "parent": "CSF03304"
    },
    {
        "id": "F03305",
        "name": "Vidámvásár utca",
        "lat": "47.520008",
        "lon": "19.219212",
        "parent": "CSF03306"
    },
    {
        "id": "F03306",
        "name": "Vidámvásár utca",
        "lat": "47.520116",
        "lon": "19.219146",
        "parent": "CSF03306"
    },
    {
        "id": "F03308",
        "name": "Mátyásföld, repülőtér H",
        "lat": "47.511632",
        "lon": "19.193615",
        "parent": "CSF03308"
    },
    {
        "id": "F03309",
        "name": "Mátyásföld, repülőtér H",
        "lat": "47.511569",
        "lon": "19.193854",
        "parent": "CSF03308"
    },
    {
        "id": "F03311",
        "name": "Pilóta utca",
        "lat": "47.505349",
        "lon": "19.197952",
        "parent": "CSF03313"
    },
    {
        "id": "F03313",
        "name": "Pilóta utca",
        "lat": "47.505528",
        "lon": "19.198643",
        "parent": "CSF03313"
    },
    {
        "id": "F03314",
        "name": "Diósy Lajos utca",
        "lat": "47.506832",
        "lon": "19.204926",
        "parent": "CSF03314"
    },
    {
        "id": "F03315",
        "name": "Diósy Lajos utca",
        "lat": "47.506518",
        "lon": "19.204473",
        "parent": "CSF03314"
    },
    {
        "id": "F03316",
        "name": "Újszász utca",
        "lat": "47.509139",
        "lon": "19.208291",
        "parent": "CSF03316"
    },
    {
        "id": "F03317",
        "name": "Újszász utca",
        "lat": "47.508905",
        "lon": "19.208410",
        "parent": "CSF03316"
    },
    {
        "id": "F03318",
        "name": "Bökényföldi út",
        "lat": "47.508724",
        "lon": "19.209352",
        "parent": "CSF03319"
    },
    {
        "id": "F03319",
        "name": "Bökényföldi út",
        "lat": "47.508796",
        "lon": "19.209246",
        "parent": "CSF03319"
    },
    {
        "id": "F03320",
        "name": "Hunyadvár utca",
        "lat": "47.512176",
        "lon": "19.204251",
        "parent": "CSF03320"
    },
    {
        "id": "F03321",
        "name": "Hunyadvár utca",
        "lat": "47.511879",
        "lon": "19.204290",
        "parent": "CSF03320"
    },
    {
        "id": "F03322",
        "name": "Bökényföldi út",
        "lat": "47.514508",
        "lon": "19.203036",
        "parent": "CSF03322"
    },
    {
        "id": "F03323",
        "name": "Veres Péter út",
        "lat": "47.514148",
        "lon": "19.202956",
        "parent": ""
    },
    {
        "id": "F03324",
        "name": "Bökényföldi út",
        "lat": "47.514229",
        "lon": "19.202518",
        "parent": "CSF03322"
    },
    {
        "id": "F03325",
        "name": "Anilin utca",
        "lat": "47.513494",
        "lon": "19.219868",
        "parent": "CSF03325"
    },
    {
        "id": "F03326",
        "name": "Anilin utca",
        "lat": "47.513262",
        "lon": "19.219151",
        "parent": "CSF03325"
    },
    {
        "id": "F03327",
        "name": "Vidámvásár utca (Georgina utca)",
        "lat": "47.518477",
        "lon": "19.226059",
        "parent": "CSF03327"
    },
    {
        "id": "F03328",
        "name": "Georgina utca",
        "lat": "47.518295",
        "lon": "19.227359",
        "parent": "CSF03327"
    },
    {
        "id": "F03329",
        "name": "Batthyány Ilona utca",
        "lat": "47.519172",
        "lon": "19.230283",
        "parent": ""
    },
    {
        "id": "F03330",
        "name": "Cinkota, Lassú utca",
        "lat": "47.520832",
        "lon": "19.227009",
        "parent": ""
    },
    {
        "id": "F03331",
        "name": "Rózsalevél utca",
        "lat": "47.522570",
        "lon": "19.231437",
        "parent": ""
    },
    {
        "id": "F03332",
        "name": "Ilonatelep H (Georgina utca)",
        "lat": "47.524759",
        "lon": "19.229479",
        "parent": "CSF03334"
    },
    {
        "id": "F03333",
        "name": "Ilonatelep H",
        "lat": "47.525893",
        "lon": "19.229231",
        "parent": "CSF03334"
    },
    {
        "id": "F03334",
        "name": "Ilonatelep H",
        "lat": "47.525903",
        "lon": "19.228540",
        "parent": "CSF03334"
    },
    {
        "id": "F03335",
        "name": "Simongát utca",
        "lat": "47.517220",
        "lon": "19.235986",
        "parent": ""
    },
    {
        "id": "F03336",
        "name": "Nagytarcsai út",
        "lat": "47.516994",
        "lon": "19.236622",
        "parent": ""
    },
    {
        "id": "F03337",
        "name": "Erdei bekötőút",
        "lat": "47.507858",
        "lon": "19.235249",
        "parent": "CSF03337"
    },
    {
        "id": "F03338",
        "name": "Erdei bekötőút",
        "lat": "47.507597",
        "lon": "19.235394",
        "parent": "CSF03337"
    },
    {
        "id": "F03339",
        "name": "Margit utca",
        "lat": "47.517715",
        "lon": "19.190848",
        "parent": "CSF03339"
    },
    {
        "id": "F03340",
        "name": "Margit utca",
        "lat": "47.517231",
        "lon": "19.190643",
        "parent": "CSF03339"
    },
    {
        "id": "F03341",
        "name": "Centenáriumi lakótelep",
        "lat": "47.516245",
        "lon": "19.187985",
        "parent": ""
    },
    {
        "id": "F03342",
        "name": "Szent Korona utca",
        "lat": "47.529649",
        "lon": "19.178724",
        "parent": "CSF03343"
    },
    {
        "id": "F03343",
        "name": "Szent Korona utca",
        "lat": "47.530261",
        "lon": "19.178274",
        "parent": "CSF03343"
    },
    {
        "id": "F03344",
        "name": "Garat utca",
        "lat": "47.505927",
        "lon": "19.181268",
        "parent": "CSF03345"
    },
    {
        "id": "F03345",
        "name": "Garat utca",
        "lat": "47.506493",
        "lon": "19.181150",
        "parent": "CSF03345"
    },
    {
        "id": "F03346",
        "name": "Vörösmarty utca",
        "lat": "47.532337",
        "lon": "19.163125",
        "parent": ""
    },
    {
        "id": "F03347",
        "name": "Péterke utca",
        "lat": "47.533149",
        "lon": "19.185692",
        "parent": "CSF03348"
    },
    {
        "id": "F03348",
        "name": "Péterke utca",
        "lat": "47.533329",
        "lon": "19.185015",
        "parent": "CSF03348"
    },
    {
        "id": "F03349",
        "name": "Baross utca",
        "lat": "47.533500",
        "lon": "19.168879",
        "parent": "CSF03349"
    },
    {
        "id": "F03350",
        "name": "Baross utca",
        "lat": "47.532930",
        "lon": "19.169573",
        "parent": "CSF03349"
    },
    {
        "id": "F03351",
        "name": "Szilas-patak",
        "lat": "47.530143",
        "lon": "19.187012",
        "parent": "CSF03351"
    },
    {
        "id": "F03352",
        "name": "Ida utca",
        "lat": "47.526308",
        "lon": "19.182036",
        "parent": "CSF03352"
    },
    {
        "id": "F03353",
        "name": "Ida utca",
        "lat": "47.526020",
        "lon": "19.182473",
        "parent": "CSF03352"
    },
    {
        "id": "F03354",
        "name": "Sasvár utca",
        "lat": "47.518160",
        "lon": "19.181073",
        "parent": "CS009240"
    },
    {
        "id": "F03355",
        "name": "Sasvár utca",
        "lat": "47.514336",
        "lon": "19.173548",
        "parent": "CSF03356"
    },
    {
        "id": "F03356",
        "name": "Sasvár utca",
        "lat": "47.514616",
        "lon": "19.173058",
        "parent": "CSF03356"
    },
    {
        "id": "F03357",
        "name": "Szent Korona utca",
        "lat": "47.526079",
        "lon": "19.169273",
        "parent": "CSF03357"
    },
    {
        "id": "F03358",
        "name": "Diófa utca",
        "lat": "47.525109",
        "lon": "19.176070",
        "parent": "CS009382"
    },
    {
        "id": "F03359",
        "name": "Szent Korona utca",
        "lat": "47.523817",
        "lon": "19.164528",
        "parent": "CSF03359"
    },
    {
        "id": "F03360",
        "name": "Szent Korona utca",
        "lat": "47.523538",
        "lon": "19.164979",
        "parent": "CSF03359"
    },
    {
        "id": "F03361",
        "name": "Baross utca",
        "lat": "47.526651",
        "lon": "19.154720",
        "parent": "CSF03361"
    },
    {
        "id": "F03362",
        "name": "Baross utca",
        "lat": "47.526273",
        "lon": "19.155264",
        "parent": "CSF03361"
    },
    {
        "id": "F03363",
        "name": "Szent Korona utca",
        "lat": "47.520306",
        "lon": "19.158691",
        "parent": "CSF03364"
    },
    {
        "id": "F03364",
        "name": "Szent Korona utca",
        "lat": "47.520603",
        "lon": "19.158559",
        "parent": "CSF03364"
    },
    {
        "id": "F03365",
        "name": "Őrmester utca",
        "lat": "47.511995",
        "lon": "19.167383",
        "parent": ""
    },
    {
        "id": "F03366",
        "name": "Sasvár utca",
        "lat": "47.512067",
        "lon": "19.167476",
        "parent": ""
    },
    {
        "id": "F03367",
        "name": "Sashalmi tér",
        "lat": "47.509591",
        "lon": "19.170457",
        "parent": "CSF03368"
    },
    {
        "id": "F03368",
        "name": "Sashalmi tér",
        "lat": "47.509690",
        "lon": "19.170165",
        "parent": "CSF03368"
    },
    {
        "id": "F03369",
        "name": "Baross utca",
        "lat": "47.524101",
        "lon": "19.150359",
        "parent": "CSF03370"
    },
    {
        "id": "F03370",
        "name": "Baross utca",
        "lat": "47.524515",
        "lon": "19.149789",
        "parent": "CSF03370"
    },
    {
        "id": "F03371",
        "name": "Szent Korona utcai lakótelep",
        "lat": "47.518791",
        "lon": "19.153204",
        "parent": "CSF03371"
    },
    {
        "id": "F03372",
        "name": "Szent Korona utcai lakótelep",
        "lat": "47.518179",
        "lon": "19.153654",
        "parent": "CSF03371"
    },
    {
        "id": "F03373",
        "name": "Szabadságtelep H",
        "lat": "47.535337",
        "lon": "19.204811",
        "parent": ""
    },
    {
        "id": "F03374",
        "name": "Mazsola utca",
        "lat": "47.535445",
        "lon": "19.198037",
        "parent": ""
    },
    {
        "id": "F03375",
        "name": "Rozsos utca",
        "lat": "47.534047",
        "lon": "19.194142",
        "parent": ""
    },
    {
        "id": "F03376",
        "name": "Muzsika utca",
        "lat": "47.532126",
        "lon": "19.204655",
        "parent": ""
    },
    {
        "id": "F03377",
        "name": "Felsőmalom utca",
        "lat": "47.526356",
        "lon": "19.201305",
        "parent": "CSF03377"
    },
    {
        "id": "F03378",
        "name": "Felsőmalom utca",
        "lat": "47.525968",
        "lon": "19.201941",
        "parent": "CSF03377"
    },
    {
        "id": "F03379",
        "name": "Cinkota H",
        "lat": "47.519398",
        "lon": "19.217550",
        "parent": "CSF03379"
    },
    {
        "id": "F03380",
        "name": "Cinkota H",
        "lat": "47.518958",
        "lon": "19.216925",
        "parent": "CSF03379"
    },
    {
        "id": "F03382",
        "name": "Papír utca",
        "lat": "47.510554",
        "lon": "19.213141",
        "parent": "CSF03382"
    },
    {
        "id": "F03383",
        "name": "Papír utca",
        "lat": "47.510347",
        "lon": "19.212928",
        "parent": "CSF03382"
    },
    {
        "id": "F03384",
        "name": "Farkashalom utca",
        "lat": "47.512015",
        "lon": "19.216558",
        "parent": "CSF03385"
    },
    {
        "id": "F03385",
        "name": "Farkashalom utca",
        "lat": "47.512051",
        "lon": "19.216385",
        "parent": "CSF03385"
    },
    {
        "id": "F03386",
        "name": "Cinke utca",
        "lat": "47.517250",
        "lon": "19.222881",
        "parent": "CSF03386"
    },
    {
        "id": "F03387",
        "name": "Cinke utca",
        "lat": "47.517007",
        "lon": "19.222867",
        "parent": "CSF03386"
    },
    {
        "id": "F03388",
        "name": "Jókai Mór utca (Újszász utca)",
        "lat": "47.504957",
        "lon": "19.194553",
        "parent": "CSF03389"
    },
    {
        "id": "F03389",
        "name": "Jókai Mór utca",
        "lat": "47.505038",
        "lon": "19.194460",
        "parent": "CSF03389"
    },
    {
        "id": "F03390",
        "name": "Alsómalom utca",
        "lat": "47.524957",
        "lon": "19.204501",
        "parent": "CSF03390"
    },
    {
        "id": "F03391",
        "name": "Alsómalom utca",
        "lat": "47.524579",
        "lon": "19.205111",
        "parent": "CSF03390"
    },
    {
        "id": "F03392",
        "name": "Jókai Mór utca (Rendőrség)",
        "lat": "47.510801",
        "lon": "19.189511",
        "parent": "CSF03393"
    },
    {
        "id": "F03393",
        "name": "Jókai Mór utca (Rendőrség)",
        "lat": "47.510952",
        "lon": "19.190985",
        "parent": "CSF03393"
    },
    {
        "id": "F03394",
        "name": "Csinszka utca",
        "lat": "47.515636",
        "lon": "19.206678",
        "parent": "CSF03394"
    },
    {
        "id": "F03395",
        "name": "Csinszka utca",
        "lat": "47.515394",
        "lon": "19.206252",
        "parent": "CSF03394"
    },
    {
        "id": "F03396",
        "name": "Mátyásföld, Imre utca H",
        "lat": "47.513486",
        "lon": "19.200060",
        "parent": "CSF03397"
    },
    {
        "id": "F03397",
        "name": "Mátyásföld, Imre utca H",
        "lat": "47.513755",
        "lon": "19.200618",
        "parent": "CSF03397"
    },
    {
        "id": "F03398",
        "name": "Műkő utca",
        "lat": "47.522843",
        "lon": "19.223789",
        "parent": ""
    },
    {
        "id": "F03399",
        "name": "Nebántsvirág utca",
        "lat": "47.505996",
        "lon": "19.211401",
        "parent": ""
    },
    {
        "id": "F03400",
        "name": "Petőfi tér",
        "lat": "47.506491",
        "lon": "19.211044",
        "parent": ""
    },
    {
        "id": "F03401",
        "name": "Zsemlékes út",
        "lat": "47.502888",
        "lon": "19.214418",
        "parent": "CSF03402"
    },
    {
        "id": "F03402",
        "name": "Zsemlékes út",
        "lat": "47.503167",
        "lon": "19.214313",
        "parent": "CSF03402"
    },
    {
        "id": "F03403",
        "name": "EGIS Gyógyszergyár",
        "lat": "47.497144",
        "lon": "19.224394",
        "parent": "CSF03403"
    },
    {
        "id": "F03404",
        "name": "EGIS Gyógyszergyár",
        "lat": "47.496377",
        "lon": "19.225878",
        "parent": "CSF03403"
    },
    {
        "id": "F03405",
        "name": "Cinkotai köztemető",
        "lat": "47.530873",
        "lon": "19.236552",
        "parent": "CSF03405"
    },
    {
        "id": "F03406",
        "name": "Cinkotai köztemető",
        "lat": "47.530613",
        "lon": "19.235901",
        "parent": "CSF03405"
    },
    {
        "id": "F03407",
        "name": "Gida utca",
        "lat": "47.514666",
        "lon": "19.191924",
        "parent": "CSF03408"
    },
    {
        "id": "F03408",
        "name": "Gida utca",
        "lat": "47.514945",
        "lon": "19.191407",
        "parent": "CSF03408"
    },
    {
        "id": "F03409",
        "name": "Árpádföld",
        "lat": "47.533231",
        "lon": "19.212043",
        "parent": "CSF03409"
    },
    {
        "id": "F03410",
        "name": "Árpádföld",
        "lat": "47.532726",
        "lon": "19.213064",
        "parent": "CSF03409"
    },
    {
        "id": "F03411",
        "name": "Szabadságtelep",
        "lat": "47.537862",
        "lon": "19.206293",
        "parent": "CSF03411"
    },
    {
        "id": "F03412",
        "name": "Szabadságtelep",
        "lat": "47.536945",
        "lon": "19.206077",
        "parent": "CSF03411"
    },
    {
        "id": "F03413",
        "name": "Cinkota",
        "lat": "47.519435",
        "lon": "19.217338",
        "parent": "CSF03414"
    },
    {
        "id": "F03414",
        "name": "Cinkota",
        "lat": "47.519437",
        "lon": "19.217504",
        "parent": "CSF03414"
    },
    {
        "id": "F03415",
        "name": "Mátyásföld alsó",
        "lat": "47.515986",
        "lon": "19.207343",
        "parent": "CSF03416"
    },
    {
        "id": "F03416",
        "name": "Mátyásföld alsó",
        "lat": "47.515986",
        "lon": "19.207568",
        "parent": "CSF03416"
    },
    {
        "id": "F03417",
        "name": "Mátyásföld, Imre utca",
        "lat": "47.513783",
        "lon": "19.200260",
        "parent": "CSF03417"
    },
    {
        "id": "F03418",
        "name": "Mátyásföld, Imre utca",
        "lat": "47.513308",
        "lon": "19.198904",
        "parent": "CSF03417"
    },
    {
        "id": "F03419",
        "name": "Mátyásföld, repülőtér",
        "lat": "47.512063",
        "lon": "19.194665",
        "parent": "CSF03419"
    },
    {
        "id": "F03420",
        "name": "Mátyásföld, repülőtér",
        "lat": "47.511651",
        "lon": "19.193443",
        "parent": "CSF03419"
    },
    {
        "id": "F03421",
        "name": "Ilonatelep",
        "lat": "47.526929",
        "lon": "19.229772",
        "parent": "CSF03421"
    },
    {
        "id": "F03422",
        "name": "Ilonatelep",
        "lat": "47.526325",
        "lon": "19.229033",
        "parent": "CSF03421"
    },
    {
        "id": "F03423",
        "name": "Nagyicce",
        "lat": "47.507030",
        "lon": "19.167597",
        "parent": "CSF03423"
    },
    {
        "id": "F03424",
        "name": "Nagyicce",
        "lat": "47.507003",
        "lon": "19.167783",
        "parent": "CSF03423"
    },
    {
        "id": "F03425",
        "name": "Sashalom",
        "lat": "47.509113",
        "lon": "19.179404",
        "parent": "CSF03425"
    },
    {
        "id": "F03426",
        "name": "Sashalom",
        "lat": "47.508791",
        "lon": "19.177890",
        "parent": "CSF03425"
    },
    {
        "id": "F03427",
        "name": "Frangepán utca",
        "lat": "47.456367",
        "lon": "19.201501",
        "parent": "CSF03427"
    },
    {
        "id": "F03428",
        "name": "Frangepán utca",
        "lat": "47.456017",
        "lon": "19.201142",
        "parent": "CSF03427"
    },
    {
        "id": "F03429",
        "name": "Lőrinci út",
        "lat": "47.453165",
        "lon": "19.220654",
        "parent": "CSF03430"
    },
    {
        "id": "F03430",
        "name": "Lőrinci út",
        "lat": "47.453427",
        "lon": "19.219952",
        "parent": "CSF03430"
    },
    {
        "id": "F03431",
        "name": "Bélatelepi út",
        "lat": "47.450738",
        "lon": "19.224996",
        "parent": ""
    },
    {
        "id": "F03432",
        "name": "Baross utca",
        "lat": "47.450755",
        "lon": "19.226044",
        "parent": ""
    },
    {
        "id": "F03433",
        "name": "Ebergény utca",
        "lat": "47.490945",
        "lon": "19.302460",
        "parent": "CSF03433"
    },
    {
        "id": "F03434",
        "name": "Ebergény utca",
        "lat": "47.490736",
        "lon": "19.303308",
        "parent": "CSF03433"
    },
    {
        "id": "F03435",
        "name": "Pöröly utca",
        "lat": "47.491523",
        "lon": "19.297300",
        "parent": "CSF03435"
    },
    {
        "id": "F03436",
        "name": "Pöröly utca",
        "lat": "47.491406",
        "lon": "19.297406",
        "parent": "CSF03435"
    },
    {
        "id": "F03437",
        "name": "Sági utca",
        "lat": "47.473843",
        "lon": "19.273178",
        "parent": "CSF03437"
    },
    {
        "id": "F03438",
        "name": "Sági utca",
        "lat": "47.473572",
        "lon": "19.273747",
        "parent": "CSF03437"
    },
    {
        "id": "F03439",
        "name": "Czeglédi Mihály utca",
        "lat": "47.489479",
        "lon": "19.289713",
        "parent": "CSF03440"
    },
    {
        "id": "F03440",
        "name": "Czeglédi Mihály utca",
        "lat": "47.489864",
        "lon": "19.290803",
        "parent": "CSF03440"
    },
    {
        "id": "F03441",
        "name": "Rákoscsaba vasútállomás",
        "lat": "47.491105",
        "lon": "19.281837",
        "parent": "CSF03442"
    },
    {
        "id": "F03442",
        "name": "Rákoscsaba vasútállomás",
        "lat": "47.491744",
        "lon": "19.281880",
        "parent": "CSF03442"
    },
    {
        "id": "F03443",
        "name": "Aranykút utca",
        "lat": "47.493901",
        "lon": "19.278028",
        "parent": "CSF03443"
    },
    {
        "id": "F03444",
        "name": "Színes utca",
        "lat": "47.490667",
        "lon": "19.306068",
        "parent": "CSF03445"
    },
    {
        "id": "F03445",
        "name": "Színes utca",
        "lat": "47.490705",
        "lon": "19.305272",
        "parent": "CSF03445"
    },
    {
        "id": "F03446",
        "name": "Hősök tere",
        "lat": "47.489215",
        "lon": "19.259429",
        "parent": "CSF03447"
    },
    {
        "id": "F03447",
        "name": "Hősök tere",
        "lat": "47.490006",
        "lon": "19.259763",
        "parent": "CSF03447"
    },
    {
        "id": "F03448",
        "name": "Tura utca",
        "lat": "47.489181",
        "lon": "19.277025",
        "parent": "CS009484"
    },
    {
        "id": "F03449",
        "name": "Vidor utca",
        "lat": "47.495346",
        "lon": "19.240607",
        "parent": "CSF03449"
    },
    {
        "id": "F03450",
        "name": "Vidor utca",
        "lat": "47.494896",
        "lon": "19.240711",
        "parent": "CSF03449"
    },
    {
        "id": "F03451",
        "name": "Cinkotai út",
        "lat": "47.491492",
        "lon": "19.243393",
        "parent": ""
    },
    {
        "id": "F03452",
        "name": "Gyöngytyúk utca",
        "lat": "47.491043",
        "lon": "19.243020",
        "parent": "CSF03452"
    },
    {
        "id": "F03453",
        "name": "Gyöngytyúk utca",
        "lat": "47.490628",
        "lon": "19.243416",
        "parent": "CSF03452"
    },
    {
        "id": "F03454",
        "name": "Liget sor",
        "lat": "47.488540",
        "lon": "19.244059",
        "parent": "CSF03454"
    },
    {
        "id": "F03455",
        "name": "Liget sor",
        "lat": "47.487632",
        "lon": "19.243989",
        "parent": "CSF03454"
    },
    {
        "id": "F03456",
        "name": "Liszt Ferenc utca",
        "lat": "47.487308",
        "lon": "19.249429",
        "parent": ""
    },
    {
        "id": "F03457",
        "name": "Rákosliget vasútállomás",
        "lat": "47.485196",
        "lon": "19.258577",
        "parent": "CSF03459"
    },
    {
        "id": "F03458",
        "name": "IV. utca",
        "lat": "47.487326",
        "lon": "19.259089",
        "parent": ""
    },
    {
        "id": "F03459",
        "name": "Rákosliget vasútállomás",
        "lat": "47.486545",
        "lon": "19.258728",
        "parent": "CSF03459"
    },
    {
        "id": "F03460",
        "name": "Harsona utca",
        "lat": "47.490687",
        "lon": "19.270701",
        "parent": ""
    },
    {
        "id": "F03461",
        "name": "Rákoscsaba-Újtelep vasútállomás",
        "lat": "47.488136",
        "lon": "19.273544",
        "parent": "CS009485"
    },
    {
        "id": "F03462",
        "name": "Bártfai utca",
        "lat": "47.492832",
        "lon": "19.268494",
        "parent": "CSF03463"
    },
    {
        "id": "F03463",
        "name": "Bártfai utca",
        "lat": "47.493163",
        "lon": "19.269040",
        "parent": "CSF03463"
    },
    {
        "id": "F03464",
        "name": "Ároktő út",
        "lat": "47.491490",
        "lon": "19.264759",
        "parent": "CSF03465"
    },
    {
        "id": "F03465",
        "name": "Ároktő út",
        "lat": "47.491543",
        "lon": "19.265184",
        "parent": "CSF03465"
    },
    {
        "id": "F03466",
        "name": "XVII. utca",
        "lat": "47.492191",
        "lon": "19.259772",
        "parent": "CSF03469"
    },
    {
        "id": "F03468",
        "name": "XVIII. utca",
        "lat": "47.491983",
        "lon": "19.260700",
        "parent": "CSF03469"
    },
    {
        "id": "F03469",
        "name": "XVIII. utca",
        "lat": "47.492541",
        "lon": "19.260371",
        "parent": "CSF03469"
    },
    {
        "id": "F03471",
        "name": "Tarack utca",
        "lat": "47.492692",
        "lon": "19.251572",
        "parent": "CSF03471"
    },
    {
        "id": "F03472",
        "name": "Tarack utca",
        "lat": "47.492628",
        "lon": "19.251838",
        "parent": "CSF03471"
    },
    {
        "id": "F03473",
        "name": "Egészségház",
        "lat": "47.478175",
        "lon": "19.255869",
        "parent": ""
    },
    {
        "id": "F03474",
        "name": "Szárny utca",
        "lat": "47.480964",
        "lon": "19.265353",
        "parent": "CSF03474"
    },
    {
        "id": "F03475",
        "name": "Szárny utca",
        "lat": "47.480552",
        "lon": "19.264476",
        "parent": "CSF03474"
    },
    {
        "id": "F03476",
        "name": "Szabadság sugárút",
        "lat": "47.482998",
        "lon": "19.274225",
        "parent": "CS066712"
    },
    {
        "id": "F03477",
        "name": "Szabadság sugárút",
        "lat": "47.482613",
        "lon": "19.273228",
        "parent": "CS066712"
    },
    {
        "id": "F03478",
        "name": "Lemberg utca",
        "lat": "47.483566",
        "lon": "19.278314",
        "parent": "CSF03481"
    },
    {
        "id": "F03479",
        "name": "Péceli út",
        "lat": "47.484007",
        "lon": "19.278131",
        "parent": ""
    },
    {
        "id": "F03480",
        "name": "Lemberg utca",
        "lat": "47.484249",
        "lon": "19.278570",
        "parent": "CSF03481"
    },
    {
        "id": "F03481",
        "name": "Lemberg utca",
        "lat": "47.484553",
        "lon": "19.279181",
        "parent": "CSF03481"
    },
    {
        "id": "F03482",
        "name": "Csaba vezér tér",
        "lat": "47.486806",
        "lon": "19.286317",
        "parent": "CSF03485"
    },
    {
        "id": "F03483",
        "name": "Csaba vezér tér",
        "lat": "47.486869",
        "lon": "19.286224",
        "parent": "CSF03485"
    },
    {
        "id": "F03484",
        "name": "Csaba vezér tér",
        "lat": "47.486300",
        "lon": "19.287337",
        "parent": "CSF03485"
    },
    {
        "id": "F03485",
        "name": "Csaba vezér tér",
        "lat": "47.487873",
        "lon": "19.287742",
        "parent": "CSF03485"
    },
    {
        "id": "F03486",
        "name": "Lemberg utca",
        "lat": "47.480628",
        "lon": "19.280849",
        "parent": ""
    },
    {
        "id": "F03487",
        "name": "Csabagyöngye utca",
        "lat": "47.480693",
        "lon": "19.280239",
        "parent": ""
    },
    {
        "id": "F03488",
        "name": "Alsódabas utca",
        "lat": "47.483543",
        "lon": "19.289620",
        "parent": "CSF03488"
    },
    {
        "id": "F03489",
        "name": "Alsódabas utca",
        "lat": "47.483013",
        "lon": "19.289325",
        "parent": "CSF03488"
    },
    {
        "id": "F03490",
        "name": "Alsódabas utca",
        "lat": "47.482768",
        "lon": "19.290041",
        "parent": "CSF03488"
    },
    {
        "id": "F03491",
        "name": "Óvónő utca",
        "lat": "47.485303",
        "lon": "19.281984",
        "parent": "CSF03492"
    },
    {
        "id": "F03492",
        "name": "Óvónő utca",
        "lat": "47.485617",
        "lon": "19.282583",
        "parent": "CSF03492"
    },
    {
        "id": "F03493",
        "name": "Regélő utca",
        "lat": "47.477492",
        "lon": "19.292484",
        "parent": "CSF03493"
    },
    {
        "id": "F03494",
        "name": "Regélő utca",
        "lat": "47.477249",
        "lon": "19.292749",
        "parent": "CSF03493"
    },
    {
        "id": "F03495",
        "name": "Nagyszentmiklósi út",
        "lat": "47.472099",
        "lon": "19.294808",
        "parent": "CSF03495"
    },
    {
        "id": "F03496",
        "name": "Nagyszentmiklósi út",
        "lat": "47.471820",
        "lon": "19.294979",
        "parent": "CSF03495"
    },
    {
        "id": "F03498",
        "name": "Kucorgó tér",
        "lat": "47.469078",
        "lon": "19.294144",
        "parent": "CS008948"
    },
    {
        "id": "F03499",
        "name": "Kucorgó tér",
        "lat": "47.469113",
        "lon": "19.294608",
        "parent": "CS008948"
    },
    {
        "id": "F03500",
        "name": "Nyomdász utca",
        "lat": "47.465584",
        "lon": "19.308268",
        "parent": "CSF03500"
    },
    {
        "id": "F03501",
        "name": "Nyomdász utca",
        "lat": "47.465106",
        "lon": "19.309074",
        "parent": "CSF03500"
    },
    {
        "id": "F03502",
        "name": "Pesti út",
        "lat": "47.464180",
        "lon": "19.312638",
        "parent": ""
    },
    {
        "id": "F03503",
        "name": "Sáránd utca",
        "lat": "47.464045",
        "lon": "19.312544",
        "parent": ""
    },
    {
        "id": "F03504",
        "name": "Rákoskert sugárút",
        "lat": "47.461096",
        "lon": "19.313478",
        "parent": ""
    },
    {
        "id": "F03505",
        "name": "Sáránd utca",
        "lat": "47.461222",
        "lon": "19.313585",
        "parent": ""
    },
    {
        "id": "F03506",
        "name": "Zrínyi utca",
        "lat": "47.459648",
        "lon": "19.299790",
        "parent": ""
    },
    {
        "id": "F03507",
        "name": "Rákoskert sugárút",
        "lat": "47.459629",
        "lon": "19.300493",
        "parent": ""
    },
    {
        "id": "F03508",
        "name": "Szabadság sugárút",
        "lat": "47.471333",
        "lon": "19.286911",
        "parent": "CSF03508"
    },
    {
        "id": "F03509",
        "name": "Szabadság sugárút",
        "lat": "47.471280",
        "lon": "19.286353",
        "parent": "CSF03508"
    },
    {
        "id": "F03510",
        "name": "Tápióbicske utca",
        "lat": "47.472367",
        "lon": "19.278279",
        "parent": "CSF03510"
    },
    {
        "id": "F03511",
        "name": "Tápióbicske utca",
        "lat": "47.472006",
        "lon": "19.279233",
        "parent": "CSF03510"
    },
    {
        "id": "F03512",
        "name": "Oroszvár utca",
        "lat": "47.474468",
        "lon": "19.270925",
        "parent": "CSF03513"
    },
    {
        "id": "F03513",
        "name": "Oroszvár utca",
        "lat": "47.474578",
        "lon": "19.270183",
        "parent": "CSF03513"
    },
    {
        "id": "F03514",
        "name": "Mezőtárkány utca",
        "lat": "47.477072",
        "lon": "19.264170",
        "parent": "CSF03515"
    },
    {
        "id": "F03515",
        "name": "Mezőtárkány utca",
        "lat": "47.477226",
        "lon": "19.263467",
        "parent": "CSF03515"
    },
    {
        "id": "F03516",
        "name": "Széchenyi utca",
        "lat": "47.473538",
        "lon": "19.253688",
        "parent": "CSF03517"
    },
    {
        "id": "F03517",
        "name": "Széchenyi utca",
        "lat": "47.473888",
        "lon": "19.254087",
        "parent": "CSF03517"
    },
    {
        "id": "F03518",
        "name": "Ferihegyi út",
        "lat": "47.467404",
        "lon": "19.248398",
        "parent": ""
    },
    {
        "id": "F03519",
        "name": "Szabadság utca",
        "lat": "47.467557",
        "lon": "19.247961",
        "parent": ""
    },
    {
        "id": "F03520",
        "name": "Kerülő utca",
        "lat": "47.463664",
        "lon": "19.247058",
        "parent": ""
    },
    {
        "id": "F03521",
        "name": "Rákoshegy, Ferihegyi út",
        "lat": "47.460535",
        "lon": "19.246303",
        "parent": ""
    },
    {
        "id": "F03522",
        "name": "Baross utca",
        "lat": "47.462966",
        "lon": "19.239627",
        "parent": ""
    },
    {
        "id": "F03523",
        "name": "Melczer utca",
        "lat": "47.462958",
        "lon": "19.238977",
        "parent": ""
    },
    {
        "id": "F03524",
        "name": "Melczer utca",
        "lat": "47.463425",
        "lon": "19.239589",
        "parent": ""
    },
    {
        "id": "F03525",
        "name": "Rákoshegy vasútállomás",
        "lat": "47.467690",
        "lon": "19.243849",
        "parent": "CSF03528"
    },
    {
        "id": "F03526",
        "name": "Rákoshegy vasútállomás",
        "lat": "47.468051",
        "lon": "19.243598",
        "parent": "CSF03528"
    },
    {
        "id": "F03528",
        "name": "Rákoshegy vasútállomás",
        "lat": "47.468354",
        "lon": "19.245178",
        "parent": "CSF03528"
    },
    {
        "id": "F03529",
        "name": "Lőrinci út (Szabadság utca)",
        "lat": "47.469986",
        "lon": "19.237304",
        "parent": "CSF03529"
    },
    {
        "id": "F03530",
        "name": "Lőrinci út (Szabadság utca)",
        "lat": "47.469534",
        "lon": "19.238483",
        "parent": "CSF03529"
    },
    {
        "id": "F03531",
        "name": "Lőrinci út",
        "lat": "47.469413",
        "lon": "19.237104",
        "parent": "CSF03529"
    },
    {
        "id": "F03532",
        "name": "Lőrinci út",
        "lat": "47.469575",
        "lon": "19.237012",
        "parent": "CSF03529"
    },
    {
        "id": "F03533",
        "name": "Bánya part",
        "lat": "47.471018",
        "lon": "19.238980",
        "parent": "CSF03534"
    },
    {
        "id": "F03534",
        "name": "Bánya part",
        "lat": "47.471574",
        "lon": "19.239725",
        "parent": "CSF03534"
    },
    {
        "id": "F03535",
        "name": "Bulyovszky utca",
        "lat": "47.473864",
        "lon": "19.241802",
        "parent": "CSF03536"
    },
    {
        "id": "F03536",
        "name": "Bulyovszky utca",
        "lat": "47.474125",
        "lon": "19.242228",
        "parent": "CSF03536"
    },
    {
        "id": "F03537",
        "name": "Árpád fejedelem utca",
        "lat": "47.476846",
        "lon": "19.244745",
        "parent": "CSF03537"
    },
    {
        "id": "F03538",
        "name": "Árpád fejedelem utca",
        "lat": "47.476055",
        "lon": "19.244172",
        "parent": "CSF03537"
    },
    {
        "id": "F03541",
        "name": "Bakancsos utca",
        "lat": "47.482262",
        "lon": "19.243903",
        "parent": "CSF03541"
    },
    {
        "id": "F03542",
        "name": "Bakancsos utca",
        "lat": "47.482209",
        "lon": "19.243544",
        "parent": "CSF03541"
    },
    {
        "id": "F03543",
        "name": "Rákoskeresztúr, Kis utcai lakótelep",
        "lat": "47.482131",
        "lon": "19.241395",
        "parent": ""
    },
    {
        "id": "F03544",
        "name": "Kis utca",
        "lat": "47.483314",
        "lon": "19.238878",
        "parent": "CSF03544"
    },
    {
        "id": "F03545",
        "name": "Kis utca",
        "lat": "47.483297",
        "lon": "19.238321",
        "parent": "CSF03544"
    },
    {
        "id": "F03546",
        "name": "Borsó utca",
        "lat": "47.484213",
        "lon": "19.233733",
        "parent": "CSF03546"
    },
    {
        "id": "F03547",
        "name": "Borsó utca",
        "lat": "47.484087",
        "lon": "19.233825",
        "parent": "CSF03546"
    },
    {
        "id": "F03549",
        "name": "509. utca",
        "lat": "47.484810",
        "lon": "19.225800",
        "parent": "CS011715"
    },
    {
        "id": "F03550",
        "name": "Pesti út",
        "lat": "47.483984",
        "lon": "19.230746",
        "parent": ""
    },
    {
        "id": "F03551",
        "name": "501. utca",
        "lat": "47.482238",
        "lon": "19.219263",
        "parent": ""
    },
    {
        "id": "F03552",
        "name": "Akadémiaújtelep, 525. tér",
        "lat": "47.480735",
        "lon": "19.219829",
        "parent": ""
    },
    {
        "id": "F03553",
        "name": "513. utca",
        "lat": "47.480462",
        "lon": "19.227935",
        "parent": ""
    },
    {
        "id": "F03554",
        "name": "Uszoda",
        "lat": "47.479346",
        "lon": "19.233888",
        "parent": "CS009493"
    },
    {
        "id": "F03556",
        "name": "Szürkebegy utca",
        "lat": "47.475497",
        "lon": "19.238929",
        "parent": ""
    },
    {
        "id": "F03557",
        "name": "Rákoskeresztúr, Aranylúd utca",
        "lat": "47.471743",
        "lon": "19.235374",
        "parent": ""
    },
    {
        "id": "F03558",
        "name": "Barátka utca",
        "lat": "47.473387",
        "lon": "19.230869",
        "parent": ""
    },
    {
        "id": "F03559",
        "name": "Vadkacsa utca",
        "lat": "47.477072",
        "lon": "19.227565",
        "parent": ""
    },
    {
        "id": "F03561",
        "name": "Melczer utca",
        "lat": "47.465476",
        "lon": "19.234145",
        "parent": ""
    },
    {
        "id": "F03562",
        "name": "Bocskai István utca",
        "lat": "47.456385",
        "lon": "19.232508",
        "parent": "CSF03563"
    },
    {
        "id": "F03563",
        "name": "Bocskai István utca",
        "lat": "47.456717",
        "lon": "19.233000",
        "parent": "CSF03563"
    },
    {
        "id": "F03564",
        "name": "Orgoványi utca",
        "lat": "47.452990",
        "lon": "19.228876",
        "parent": "CSF03565"
    },
    {
        "id": "F03565",
        "name": "Orgoványi utca",
        "lat": "47.453457",
        "lon": "19.229607",
        "parent": "CSF03565"
    },
    {
        "id": "F03566",
        "name": "Óvónő utca",
        "lat": "47.481629",
        "lon": "19.284317",
        "parent": "CSF03567"
    },
    {
        "id": "F03567",
        "name": "Óvónő utca",
        "lat": "47.481789",
        "lon": "19.285220",
        "parent": "CSF03567"
    },
    {
        "id": "F03568",
        "name": "Nyomdok utca",
        "lat": "47.466769",
        "lon": "19.305408",
        "parent": "CSF03568"
    },
    {
        "id": "F03569",
        "name": "Nyomdok utca",
        "lat": "47.466598",
        "lon": "19.305566",
        "parent": "CSF03568"
    },
    {
        "id": "F03570",
        "name": "Erzsébet körút",
        "lat": "47.460280",
        "lon": "19.307021",
        "parent": "CSF03570"
    },
    {
        "id": "F03571",
        "name": "Erzsébet körút",
        "lat": "47.460155",
        "lon": "19.306556",
        "parent": "CSF03570"
    },
    {
        "id": "F03572",
        "name": "Ároktő út",
        "lat": "47.495779",
        "lon": "19.260729",
        "parent": ""
    },
    {
        "id": "F03573",
        "name": "Ananász utca",
        "lat": "47.495993",
        "lon": "19.261234",
        "parent": ""
    },
    {
        "id": "F03574",
        "name": "Olcsva utca",
        "lat": "47.468127",
        "lon": "19.301661",
        "parent": "CSF03574"
    },
    {
        "id": "F03575",
        "name": "Olcsva utca",
        "lat": "47.467801",
        "lon": "19.302296",
        "parent": "CSF03574"
    },
    {
        "id": "F03576",
        "name": "Bártfai utca",
        "lat": "47.497256",
        "lon": "19.264093",
        "parent": "CSF03577"
    },
    {
        "id": "F03577",
        "name": "Bártfai utca",
        "lat": "47.497472",
        "lon": "19.264359",
        "parent": "CSF03577"
    },
    {
        "id": "F03578",
        "name": "Rákoscsaba-Újtelep, Naplás út",
        "lat": "47.499010",
        "lon": "19.269223",
        "parent": ""
    },
    {
        "id": "F03579",
        "name": "Almásháza utca",
        "lat": "47.498874",
        "lon": "19.269687",
        "parent": ""
    },
    {
        "id": "F03580",
        "name": "Diadal utca",
        "lat": "47.495924",
        "lon": "19.274347",
        "parent": ""
    },
    {
        "id": "F03581",
        "name": "Jászágó utca",
        "lat": "47.496645",
        "lon": "19.273407",
        "parent": "CSF03581"
    },
    {
        "id": "F03582",
        "name": "Gőzös utca",
        "lat": "47.494594",
        "lon": "19.287082",
        "parent": "CSF03583"
    },
    {
        "id": "F03583",
        "name": "Gőzös utca",
        "lat": "47.494711",
        "lon": "19.286936",
        "parent": "CSF03583"
    },
    {
        "id": "F03584",
        "name": "Rákoscsaba-Újtelep, Tóalmás utca",
        "lat": "47.499416",
        "lon": "19.286626",
        "parent": "CSF03584"
    },
    {
        "id": "F03585",
        "name": "Rózsaszál utca",
        "lat": "47.463566",
        "lon": "19.297620",
        "parent": "CSF03586"
    },
    {
        "id": "F03586",
        "name": "Rózsaszál utca",
        "lat": "47.463926",
        "lon": "19.297316",
        "parent": "CSF03586"
    },
    {
        "id": "F03587",
        "name": "Bulyovszky utca",
        "lat": "47.471229",
        "lon": "19.251928",
        "parent": "CSF03587"
    },
    {
        "id": "F03588",
        "name": "Bulyovszky utca",
        "lat": "47.470807",
        "lon": "19.251767",
        "parent": "CSF03587"
    },
    {
        "id": "F03589",
        "name": "Ady Endre utca",
        "lat": "47.465841",
        "lon": "19.241826",
        "parent": "CSF03590"
    },
    {
        "id": "F03590",
        "name": "Ady Endre utca",
        "lat": "47.466074",
        "lon": "19.242212",
        "parent": "CSF03590"
    },
    {
        "id": "F03591",
        "name": "Vörösmarty utca",
        "lat": "47.461737",
        "lon": "19.237951",
        "parent": "CSF03591"
    },
    {
        "id": "F03592",
        "name": "Vörösmarty utca",
        "lat": "47.461432",
        "lon": "19.237499",
        "parent": "CSF03591"
    },
    {
        "id": "F03593",
        "name": "Szent kereszt tér",
        "lat": "47.480739",
        "lon": "19.250837",
        "parent": "CSF03594"
    },
    {
        "id": "F03594",
        "name": "Szent kereszt tér",
        "lat": "47.481173",
        "lon": "19.249485",
        "parent": "CSF03594"
    },
    {
        "id": "F03595",
        "name": "Újlak utca, lakótelep",
        "lat": "47.482072",
        "lon": "19.233407",
        "parent": "CS009494"
    },
    {
        "id": "F03596",
        "name": "Rákóczi Ferenc utca",
        "lat": "47.458845",
        "lon": "19.234930",
        "parent": "CSF03597"
    },
    {
        "id": "F03597",
        "name": "Rákóczi Ferenc utca",
        "lat": "47.459294",
        "lon": "19.235516",
        "parent": "CSF03597"
    },
    {
        "id": "F03598",
        "name": "Kis Károshíd utca",
        "lat": "47.497301",
        "lon": "19.286922",
        "parent": ""
    },
    {
        "id": "F03599",
        "name": "Harsona utca",
        "lat": "47.497059",
        "lon": "19.286801",
        "parent": ""
    },
    {
        "id": "F03600",
        "name": "Homokiszőlők",
        "lat": "47.455708",
        "lon": "19.215875",
        "parent": "CSF03600"
    },
    {
        "id": "F03601",
        "name": "Homokiszőlők",
        "lat": "47.455564",
        "lon": "19.215928",
        "parent": "CSF03600"
    },
    {
        "id": "F03602",
        "name": "Császárfa utca",
        "lat": "47.474503",
        "lon": "19.293811",
        "parent": "CSF03602"
    },
    {
        "id": "F03603",
        "name": "Császárfa utca",
        "lat": "47.474197",
        "lon": "19.294075",
        "parent": "CSF03602"
    },
    {
        "id": "F03604",
        "name": "Rákosliget vasútállomás",
        "lat": "47.486357",
        "lon": "19.258103",
        "parent": "CSF03459"
    },
    {
        "id": "F03605",
        "name": "Városközpont (Ferihegyi út)",
        "lat": "47.480117",
        "lon": "19.256805",
        "parent": "CSF03605"
    },
    {
        "id": "F03610",
        "name": "Városközpont (Ferihegyi út)",
        "lat": "47.479838",
        "lon": "19.256804",
        "parent": "CSF03605"
    },
    {
        "id": "F03620",
        "name": "Szent Lőrinc-telep",
        "lat": "47.433409",
        "lon": "19.174378",
        "parent": "CSF03620"
    },
    {
        "id": "F03621",
        "name": "Szent Lőrinc-telep",
        "lat": "47.433103",
        "lon": "19.174338",
        "parent": "CSF03620"
    },
    {
        "id": "F03622",
        "name": "Ipacsfa utca",
        "lat": "47.429485",
        "lon": "19.167661",
        "parent": "CSF03623"
    },
    {
        "id": "F03623",
        "name": "Ipacsfa utca",
        "lat": "47.430194",
        "lon": "19.169108",
        "parent": "CSF03623"
    },
    {
        "id": "F03624",
        "name": "Ipacsfa utca",
        "lat": "47.429987",
        "lon": "19.168922",
        "parent": "CSF03623"
    },
    {
        "id": "F03625",
        "name": "Besence utca",
        "lat": "47.428139",
        "lon": "19.164875",
        "parent": "CSF03625"
    },
    {
        "id": "F03626",
        "name": "Besence utca",
        "lat": "47.428120",
        "lon": "19.165060",
        "parent": "CSF03625"
    },
    {
        "id": "F03627",
        "name": "Ipacsfa utca (Közdűlő út)",
        "lat": "47.425656",
        "lon": "19.173485",
        "parent": ""
    },
    {
        "id": "F03628",
        "name": "Közdűlő út",
        "lat": "47.423600",
        "lon": "19.169835",
        "parent": ""
    },
    {
        "id": "F03629",
        "name": "Szentlőrinci út (gyorsétterem)",
        "lat": "47.424601",
        "lon": "19.158836",
        "parent": "CSF03632"
    },
    {
        "id": "F03631",
        "name": "Szentlőrinci út",
        "lat": "47.425276",
        "lon": "19.158215",
        "parent": "CSF03632"
    },
    {
        "id": "F03632",
        "name": "Szentlőrinci út",
        "lat": "47.425474",
        "lon": "19.157804",
        "parent": "CSF03632"
    },
    {
        "id": "F03633",
        "name": "Varjú utca",
        "lat": "47.433750",
        "lon": "19.182943",
        "parent": "CSF03634"
    },
    {
        "id": "F03634",
        "name": "Varjú utca",
        "lat": "47.434083",
        "lon": "19.182904",
        "parent": "CSF03634"
    },
    {
        "id": "F03635",
        "name": "Obszervatórium",
        "lat": "47.430206",
        "lon": "19.182735",
        "parent": "CSF03635"
    },
    {
        "id": "F03636",
        "name": "Obszervatórium",
        "lat": "47.429918",
        "lon": "19.182827",
        "parent": "CSF03635"
    },
    {
        "id": "F03637",
        "name": "Gilice tér",
        "lat": "47.432119",
        "lon": "19.185073",
        "parent": "CSF03637"
    },
    {
        "id": "F03638",
        "name": "Gilice tér",
        "lat": "47.432101",
        "lon": "19.185643",
        "parent": "CSF03637"
    },
    {
        "id": "F03639",
        "name": "Dalmady Győző utca",
        "lat": "47.433529",
        "lon": "19.194542",
        "parent": "CSF03639"
    },
    {
        "id": "F03640",
        "name": "Dalmady Győző utca",
        "lat": "47.433385",
        "lon": "19.194329",
        "parent": "CSF03639"
    },
    {
        "id": "F03641",
        "name": "Péterhalmi út",
        "lat": "47.423128",
        "lon": "19.189609",
        "parent": "CSF03642"
    },
    {
        "id": "F03642",
        "name": "Péterhalmi út",
        "lat": "47.423353",
        "lon": "19.189477",
        "parent": "CSF03642"
    },
    {
        "id": "F03643",
        "name": "Kettős-Körös utca",
        "lat": "47.418773",
        "lon": "19.182732",
        "parent": "CSF03644"
    },
    {
        "id": "F03644",
        "name": "Kettős-Körös utca",
        "lat": "47.419583",
        "lon": "19.182840",
        "parent": "CSF03644"
    },
    {
        "id": "F03645",
        "name": "Szálfa utca",
        "lat": "47.415402",
        "lon": "19.186532",
        "parent": "CSF03645"
    },
    {
        "id": "F03646",
        "name": "Szálfa utca",
        "lat": "47.415131",
        "lon": "19.186915",
        "parent": "CSF03645"
    },
    {
        "id": "F03647",
        "name": "Vezér utca",
        "lat": "47.411011",
        "lon": "19.190160",
        "parent": "CSF03647"
    },
    {
        "id": "F03648",
        "name": "Vezér utca",
        "lat": "47.410723",
        "lon": "19.190543",
        "parent": "CSF03647"
    },
    {
        "id": "F03649",
        "name": "Kisfaludy utca (Nemes utca)",
        "lat": "47.408894",
        "lon": "19.192950",
        "parent": "CSF03651"
    },
    {
        "id": "F03650",
        "name": "Kisfaludy utca",
        "lat": "47.408991",
        "lon": "19.193891",
        "parent": "CSF03651"
    },
    {
        "id": "F03651",
        "name": "Kisfaludy utca",
        "lat": "47.409027",
        "lon": "19.194103",
        "parent": "CSF03651"
    },
    {
        "id": "F03652",
        "name": "Kisfaludy utca",
        "lat": "47.408218",
        "lon": "19.193677",
        "parent": "CSF03651"
    },
    {
        "id": "F03653",
        "name": "Damjanich utca",
        "lat": "47.411541",
        "lon": "19.198019",
        "parent": "CSF03653"
    },
    {
        "id": "F03654",
        "name": "Damjanich utca",
        "lat": "47.411182",
        "lon": "19.197263",
        "parent": "CSF03653"
    },
    {
        "id": "F03655",
        "name": "Szigeti Kálmán utca",
        "lat": "47.405073",
        "lon": "19.198027",
        "parent": "CSF03655"
    },
    {
        "id": "F03656",
        "name": "Szigeti Kálmán utca",
        "lat": "47.404235",
        "lon": "19.198966",
        "parent": "CSF03655"
    },
    {
        "id": "F03657",
        "name": "Ár utca",
        "lat": "47.396900",
        "lon": "19.195302",
        "parent": ""
    },
    {
        "id": "F03658",
        "name": "Paula utca",
        "lat": "47.396630",
        "lon": "19.195871",
        "parent": ""
    },
    {
        "id": "F03659",
        "name": "Pestszentimre, Ültetvény utca",
        "lat": "47.396789",
        "lon": "19.175112",
        "parent": "CS007924"
    },
    {
        "id": "F03661",
        "name": "Vásáros tér",
        "lat": "47.410317",
        "lon": "19.184076",
        "parent": ""
    },
    {
        "id": "F03662",
        "name": "Törvény utca",
        "lat": "47.408881",
        "lon": "19.180932",
        "parent": ""
    },
    {
        "id": "F03663",
        "name": "Ady Endre utca",
        "lat": "47.405858",
        "lon": "19.189046",
        "parent": "CSF03664"
    },
    {
        "id": "F03664",
        "name": "Ady Endre utca",
        "lat": "47.406361",
        "lon": "19.189975",
        "parent": "CSF03664"
    },
    {
        "id": "F03665",
        "name": "Pestszentimre vasútállomás (Vasút utca)",
        "lat": "47.404504",
        "lon": "19.185823",
        "parent": "CSF03665"
    },
    {
        "id": "F03668",
        "name": "Pestszentimre vasútállomás (Bocskai u.)",
        "lat": "47.403182",
        "lon": "19.185687",
        "parent": "CSF03665"
    },
    {
        "id": "F03672",
        "name": "Pestszentimre vasútállomás (Dózsa Gy.u.)",
        "lat": "47.403542",
        "lon": "19.185436",
        "parent": "CSF03665"
    },
    {
        "id": "F03674",
        "name": "Pestszentimre felső vasútállomás",
        "lat": "47.413990",
        "lon": "19.172622",
        "parent": "CSF03674"
    },
    {
        "id": "F03675",
        "name": "Pestszentimre felső vasútállomás",
        "lat": "47.413099",
        "lon": "19.173747",
        "parent": "CSF03674"
    },
    {
        "id": "F03676",
        "name": "Lajos utca",
        "lat": "47.399097",
        "lon": "19.178536",
        "parent": "CSF03676"
    },
    {
        "id": "F03677",
        "name": "Lajos utca",
        "lat": "47.398893",
        "lon": "19.178568",
        "parent": "CSF03676"
    },
    {
        "id": "F03678",
        "name": "Besence utca 9.",
        "lat": "47.424762",
        "lon": "19.168367",
        "parent": ""
    },
    {
        "id": "F03679",
        "name": "Közdűlő út",
        "lat": "47.420205",
        "lon": "19.164500",
        "parent": "CSF03679"
    },
    {
        "id": "F03680",
        "name": "Közdűlő út",
        "lat": "47.419863",
        "lon": "19.165148",
        "parent": "CSF03679"
    },
    {
        "id": "F03681",
        "name": "Kamiontelep",
        "lat": "47.421764",
        "lon": "19.162422",
        "parent": "CSF03682"
    },
    {
        "id": "F03682",
        "name": "Kamiontelep",
        "lat": "47.422304",
        "lon": "19.161946",
        "parent": "CSF03682"
    },
    {
        "id": "F03683",
        "name": "Wlassics Gyula utca",
        "lat": "47.437446",
        "lon": "19.183973",
        "parent": "CSF03684"
    },
    {
        "id": "F03684",
        "name": "Wlassics Gyula utca",
        "lat": "47.438147",
        "lon": "19.184001",
        "parent": "CSF03684"
    },
    {
        "id": "F03685",
        "name": "Dobozi utca",
        "lat": "47.435611",
        "lon": "19.183464",
        "parent": "CSF03686"
    },
    {
        "id": "F03686",
        "name": "Dobozi utca",
        "lat": "47.435953",
        "lon": "19.183412",
        "parent": "CSF03686"
    },
    {
        "id": "F03687",
        "name": "Törvény utca",
        "lat": "47.413163",
        "lon": "19.188416",
        "parent": "CSF03688"
    },
    {
        "id": "F03688",
        "name": "Törvény utca",
        "lat": "47.413772",
        "lon": "19.188025",
        "parent": "CSF03688"
    },
    {
        "id": "F03689",
        "name": "Iparvasút",
        "lat": "47.436341",
        "lon": "19.197042",
        "parent": "CSF03692"
    },
    {
        "id": "F03690",
        "name": "Iparvasút",
        "lat": "47.436431",
        "lon": "19.196989",
        "parent": "CSF03692"
    },
    {
        "id": "F03691",
        "name": "Iparvasút",
        "lat": "47.436522",
        "lon": "19.196233",
        "parent": "CSF03692"
    },
    {
        "id": "F03692",
        "name": "Iparvasút",
        "lat": "47.436720",
        "lon": "19.195942",
        "parent": "CSF03692"
    },
    {
        "id": "F03693",
        "name": "Csévéző utca",
        "lat": "47.452955",
        "lon": "19.196743",
        "parent": "CSF03695"
    },
    {
        "id": "F03694",
        "name": "Gyömrői út",
        "lat": "47.453489",
        "lon": "19.196486",
        "parent": ""
    },
    {
        "id": "F03695",
        "name": "Csévéző utca",
        "lat": "47.453558",
        "lon": "19.196798",
        "parent": "CSF03695"
    },
    {
        "id": "F03696",
        "name": "Csévéző utca",
        "lat": "47.452803",
        "lon": "19.196279",
        "parent": "CSF03695"
    },
    {
        "id": "F03697",
        "name": "Fedezék utca",
        "lat": "47.452058",
        "lon": "19.194845",
        "parent": "CSF03699"
    },
    {
        "id": "F03698",
        "name": "Fedezék utca",
        "lat": "47.452142",
        "lon": "19.195090",
        "parent": "CSF03699"
    },
    {
        "id": "F03699",
        "name": "Pestszentlőrinc, Fedezék utca",
        "lat": "47.452165",
        "lon": "19.195362",
        "parent": "CSF03699"
    },
    {
        "id": "F03700",
        "name": "Lőrinci temető",
        "lat": "47.447430",
        "lon": "19.191636",
        "parent": "CSF03700"
    },
    {
        "id": "F03701",
        "name": "Lőrinci temető",
        "lat": "47.447215",
        "lon": "19.190999",
        "parent": "CSF03700"
    },
    {
        "id": "F03702",
        "name": "Lőrinci temető",
        "lat": "47.446629",
        "lon": "19.191369",
        "parent": "CSF03700"
    },
    {
        "id": "F03703",
        "name": "Gárdonyi Géza utca",
        "lat": "47.443529",
        "lon": "19.189067",
        "parent": "CSF03703"
    },
    {
        "id": "F03704",
        "name": "Gárdonyi Géza utca",
        "lat": "47.443151",
        "lon": "19.188960",
        "parent": "CSF03703"
    },
    {
        "id": "F03705",
        "name": "Regény utca",
        "lat": "47.443505",
        "lon": "19.186521",
        "parent": "CSF03706"
    },
    {
        "id": "F03706",
        "name": "Regény utca",
        "lat": "47.444152",
        "lon": "19.187477",
        "parent": "CSF03706"
    },
    {
        "id": "F03707",
        "name": "Thököly út",
        "lat": "47.443064",
        "lon": "19.178776",
        "parent": "CSF03707"
    },
    {
        "id": "F03708",
        "name": "Thököly út",
        "lat": "47.442767",
        "lon": "19.179518",
        "parent": "CSF03707"
    },
    {
        "id": "F03709",
        "name": "Thököly út",
        "lat": "47.442776",
        "lon": "19.179174",
        "parent": "CSF03707"
    },
    {
        "id": "F03710",
        "name": "Thököly út",
        "lat": "47.442586",
        "lon": "19.180061",
        "parent": "CSF03707"
    },
    {
        "id": "F03711",
        "name": "Pestszentlőrinc, Szarvas csárda tér",
        "lat": "47.441585",
        "lon": "19.186070",
        "parent": "CSF03711"
    },
    {
        "id": "F03713",
        "name": "Szarvas csárda tér",
        "lat": "47.440259",
        "lon": "19.185425",
        "parent": "CSF03711"
    },
    {
        "id": "F03714",
        "name": "Szarvas csárda tér",
        "lat": "47.439483",
        "lon": "19.187452",
        "parent": "CSF03711"
    },
    {
        "id": "F03715",
        "name": "Szarvas csárda tér",
        "lat": "47.440405",
        "lon": "19.186849",
        "parent": "CSF03711"
    },
    {
        "id": "F03716",
        "name": "Szarvas csárda tér",
        "lat": "47.440330",
        "lon": "19.186605",
        "parent": "CSF03711"
    },
    {
        "id": "F03718",
        "name": "Szarvas csárda tér",
        "lat": "47.440313",
        "lon": "19.185412",
        "parent": "CSF03711"
    },
    {
        "id": "F03719",
        "name": "Szarvas csárda tér",
        "lat": "47.440006",
        "lon": "19.186180",
        "parent": "CSF03711"
    },
    {
        "id": "F03720",
        "name": "Szarvas csárda tér",
        "lat": "47.441016",
        "lon": "19.184804",
        "parent": "CSF03711"
    },
    {
        "id": "F03721",
        "name": "Szarvas csárda tér",
        "lat": "47.441159",
        "lon": "19.184990",
        "parent": "CSF03711"
    },
    {
        "id": "F03722",
        "name": "Iker utca",
        "lat": "47.435906",
        "lon": "19.169161",
        "parent": "CSF03722"
    },
    {
        "id": "F03723",
        "name": "Iker utca",
        "lat": "47.435528",
        "lon": "19.168948",
        "parent": "CSF03722"
    },
    {
        "id": "F03724",
        "name": "Kapocs utca",
        "lat": "47.402172",
        "lon": "19.201676",
        "parent": "CSF03724"
    },
    {
        "id": "F03725",
        "name": "Kapocs utca",
        "lat": "47.401685",
        "lon": "19.202509",
        "parent": "CSF03724"
    },
    {
        "id": "F03726",
        "name": "Kolozsvár utca (temető)",
        "lat": "47.438158",
        "lon": "19.157101",
        "parent": "CSF03727"
    },
    {
        "id": "F03727",
        "name": "Kolozsvár utca (temető)",
        "lat": "47.438571",
        "lon": "19.157686",
        "parent": "CSF03727"
    },
    {
        "id": "F03728",
        "name": "Csapó utca",
        "lat": "47.441258",
        "lon": "19.160475",
        "parent": "CSF03728"
    },
    {
        "id": "F03729",
        "name": "Csapó utca",
        "lat": "47.440907",
        "lon": "19.160673",
        "parent": "CSF03728"
    },
    {
        "id": "F03730",
        "name": "Bozsik Stadion",
        "lat": "47.444618",
        "lon": "19.155205",
        "parent": "CSF03730"
    },
    {
        "id": "F03731",
        "name": "Bozsik Stadion",
        "lat": "47.444186",
        "lon": "19.155324",
        "parent": "CSF03730"
    },
    {
        "id": "F03732",
        "name": "Kispest vasútállomás",
        "lat": "47.447619",
        "lon": "19.158566",
        "parent": "CSF03732"
    },
    {
        "id": "F03733",
        "name": "Kispest vasútállomás",
        "lat": "47.447188",
        "lon": "19.158234",
        "parent": "CSF03732"
    },
    {
        "id": "F03734",
        "name": "Lajosmizsei sorompó",
        "lat": "47.450570",
        "lon": "19.161310",
        "parent": "CSF03735"
    },
    {
        "id": "F03735",
        "name": "Lajosmizsei sorompó",
        "lat": "47.451532",
        "lon": "19.158680",
        "parent": "CSF03735"
    },
    {
        "id": "F03737",
        "name": "Lajosmizsei sorompó",
        "lat": "47.451036",
        "lon": "19.160098",
        "parent": "CSF03735"
    },
    {
        "id": "F03738",
        "name": "Tinódi utca",
        "lat": "47.449287",
        "lon": "19.163953",
        "parent": "CSF03741"
    },
    {
        "id": "F03739",
        "name": "Tinódi utca",
        "lat": "47.449584",
        "lon": "19.163516",
        "parent": "CSF03741"
    },
    {
        "id": "F03740",
        "name": "Tinódi utca",
        "lat": "47.449728",
        "lon": "19.163145",
        "parent": "CSF03741"
    },
    {
        "id": "F03741",
        "name": "Tinódi utca",
        "lat": "47.449845",
        "lon": "19.163040",
        "parent": "CSF03741"
    },
    {
        "id": "F03742",
        "name": "Hőerőmű",
        "lat": "47.456437",
        "lon": "19.164314",
        "parent": "CSF03742"
    },
    {
        "id": "F03743",
        "name": "Hőerőmű",
        "lat": "47.455951",
        "lon": "19.165135",
        "parent": "CSF03742"
    },
    {
        "id": "F03744",
        "name": "Csillag utca",
        "lat": "47.457258",
        "lon": "19.162193",
        "parent": "CSF03745"
    },
    {
        "id": "F03745",
        "name": "Csillag utca",
        "lat": "47.457708",
        "lon": "19.161452",
        "parent": "CSF03745"
    },
    {
        "id": "F03746",
        "name": "Felsőcsatári köz",
        "lat": "47.456361",
        "lon": "19.176634",
        "parent": "CS008692"
    },
    {
        "id": "F03747",
        "name": "Felsőcsatári köz",
        "lat": "47.456226",
        "lon": "19.176793",
        "parent": "CS008692"
    },
    {
        "id": "F03748",
        "name": "Lakatos úti lakótelep",
        "lat": "47.452082",
        "lon": "19.174343",
        "parent": "CSF03749"
    },
    {
        "id": "F03749",
        "name": "Lakatos úti lakótelep",
        "lat": "47.452271",
        "lon": "19.174197",
        "parent": "CSF03749"
    },
    {
        "id": "F03750",
        "name": "Üllői út",
        "lat": "47.447256",
        "lon": "19.170181",
        "parent": ""
    },
    {
        "id": "F03751",
        "name": "Lakatos út",
        "lat": "47.448146",
        "lon": "19.170912",
        "parent": ""
    },
    {
        "id": "F03752",
        "name": "Margó Tivadar utca",
        "lat": "47.448150",
        "lon": "19.166842",
        "parent": "CSF03752"
    },
    {
        "id": "F03753",
        "name": "Margó Tivadar utca",
        "lat": "47.446692",
        "lon": "19.168045",
        "parent": "CSF03752"
    },
    {
        "id": "F03754",
        "name": "Margó Tivadar utca",
        "lat": "47.447267",
        "lon": "19.168683",
        "parent": "CSF03752"
    },
    {
        "id": "F03755",
        "name": "Margó Tivadar utca",
        "lat": "47.447943",
        "lon": "19.167318",
        "parent": "CSF03752"
    },
    {
        "id": "F03756",
        "name": "Margó Tivadar utca",
        "lat": "47.447898",
        "lon": "19.167597",
        "parent": "CSF03752"
    },
    {
        "id": "F03757",
        "name": "Dembinszky utca",
        "lat": "47.443548",
        "lon": "19.163424",
        "parent": ""
    },
    {
        "id": "F03758",
        "name": "Havanna utca",
        "lat": "47.444352",
        "lon": "19.169352",
        "parent": ""
    },
    {
        "id": "F03759",
        "name": "Vörösmarty Mihály utca",
        "lat": "47.439680",
        "lon": "19.164184",
        "parent": ""
    },
    {
        "id": "F03760",
        "name": "Kondor Béla sétány",
        "lat": "47.439156",
        "lon": "19.166623",
        "parent": ""
    },
    {
        "id": "F03761",
        "name": "Barta Lajos utca",
        "lat": "47.437911",
        "lon": "19.169470",
        "parent": ""
    },
    {
        "id": "F03762",
        "name": "Margó Tivadar utca",
        "lat": "47.439415",
        "lon": "19.172356",
        "parent": ""
    },
    {
        "id": "F03763",
        "name": "Baross utca",
        "lat": "47.439793",
        "lon": "19.171774",
        "parent": ""
    },
    {
        "id": "F03764",
        "name": "Margó Tivadar utca",
        "lat": "47.437775",
        "lon": "19.171074",
        "parent": ""
    },
    {
        "id": "F03765",
        "name": "Fiatalság utca",
        "lat": "47.436586",
        "lon": "19.172649",
        "parent": ""
    },
    {
        "id": "F03766",
        "name": "Kinizsi Pál utca",
        "lat": "47.436756",
        "lon": "19.173485",
        "parent": ""
    },
    {
        "id": "F03767",
        "name": "Kossuth Lajos utca",
        "lat": "47.442924",
        "lon": "19.175753",
        "parent": ""
    },
    {
        "id": "F03768",
        "name": "Baross utca",
        "lat": "47.444543",
        "lon": "19.175306",
        "parent": "CSF03768"
    },
    {
        "id": "F03769",
        "name": "Baross utca",
        "lat": "47.443319",
        "lon": "19.175966",
        "parent": "CSF03768"
    },
    {
        "id": "F03770",
        "name": "Baross utca",
        "lat": "47.444075",
        "lon": "19.176167",
        "parent": "CSF03768"
    },
    {
        "id": "F03771",
        "name": "Baross utca",
        "lat": "47.444489",
        "lon": "19.175584",
        "parent": "CSF03768"
    },
    {
        "id": "F03772",
        "name": "Baross utca",
        "lat": "47.444390",
        "lon": "19.175637",
        "parent": "CSF03768"
    },
    {
        "id": "F03774",
        "name": "Mikszáth Kálmán utca",
        "lat": "47.450802",
        "lon": "19.177337",
        "parent": "CS008850"
    },
    {
        "id": "F03776",
        "name": "Pestszentlőrinc vasútállomás",
        "lat": "47.454782",
        "lon": "19.181590",
        "parent": "CSF03845"
    },
    {
        "id": "F03778",
        "name": "Kalász utca",
        "lat": "47.393043",
        "lon": "19.200550",
        "parent": "CSF03779"
    },
    {
        "id": "F03779",
        "name": "Kalász utca",
        "lat": "47.393098",
        "lon": "19.200285",
        "parent": "CSF03779"
    },
    {
        "id": "F03780",
        "name": "Repülőtéri Rendőr Igazgatóság",
        "lat": "47.422865",
        "lon": "19.240636",
        "parent": "CSF03781"
    },
    {
        "id": "F03781",
        "name": "Repülőtéri Rendőr Igazgatóság",
        "lat": "47.423280",
        "lon": "19.239961",
        "parent": "CSF03781"
    },
    {
        "id": "F03782",
        "name": "Repülőtér, D porta",
        "lat": "47.426551",
        "lon": "19.236500",
        "parent": "CSF03782"
    },
    {
        "id": "F03783",
        "name": "Repülőtér, D porta",
        "lat": "47.425956",
        "lon": "19.236962",
        "parent": "CSF03782"
    },
    {
        "id": "F03784",
        "name": "Duna utca",
        "lat": "47.433457",
        "lon": "19.220683",
        "parent": "CS050182"
    },
    {
        "id": "F03785",
        "name": "Duna utca",
        "lat": "47.433034",
        "lon": "19.220562",
        "parent": "CS050182"
    },
    {
        "id": "F03786",
        "name": "Tövishát utca",
        "lat": "47.427276",
        "lon": "19.172852",
        "parent": ""
    },
    {
        "id": "F03787",
        "name": "Pestszentlőrinc, Béke tér",
        "lat": "47.428881",
        "lon": "19.218932",
        "parent": "CS008951"
    },
    {
        "id": "F03788",
        "name": "Pestszentlőrinc, Béke tér",
        "lat": "47.429509",
        "lon": "19.218371",
        "parent": "CS008951"
    },
    {
        "id": "F03789",
        "name": "Pestszentlőrinc, Béke tér",
        "lat": "47.429655",
        "lon": "19.218298",
        "parent": "CS008951"
    },
    {
        "id": "F03790",
        "name": "Pestszentlőrinc, Béke tér",
        "lat": "47.428755",
        "lon": "19.218998",
        "parent": "CS008951"
    },
    {
        "id": "F03791",
        "name": "Pestszentlőrinc, Béke tér",
        "lat": "47.429368",
        "lon": "19.217873",
        "parent": "CS008951"
    },
    {
        "id": "F03792",
        "name": "Béke tér",
        "lat": "47.429297",
        "lon": "19.217488",
        "parent": "CS008951"
    },
    {
        "id": "F03793",
        "name": "Gyergyó utca",
        "lat": "47.426108",
        "lon": "19.226253",
        "parent": "CSF03794"
    },
    {
        "id": "F03794",
        "name": "Gyergyó utca",
        "lat": "47.426253",
        "lon": "19.225617",
        "parent": "CSF03794"
    },
    {
        "id": "F03795",
        "name": "Ganztelep, Mednyánszky utca",
        "lat": "47.423864",
        "lon": "19.234635",
        "parent": "CSF03795"
    },
    {
        "id": "F03796",
        "name": "Kupeczky János utca",
        "lat": "47.424816",
        "lon": "19.230198",
        "parent": "CSF03796"
    },
    {
        "id": "F03797",
        "name": "Kupeczky János utca",
        "lat": "47.424554",
        "lon": "19.230728",
        "parent": "CSF03796"
    },
    {
        "id": "F03798",
        "name": "Kétújfalu utca",
        "lat": "47.419019",
        "lon": "19.208536",
        "parent": "CS008904"
    },
    {
        "id": "F03799",
        "name": "Alacskai út",
        "lat": "47.416971",
        "lon": "19.206595",
        "parent": ""
    },
    {
        "id": "F03800",
        "name": "Pestszentimre, Benjámin utca",
        "lat": "47.399054",
        "lon": "19.205588",
        "parent": ""
    },
    {
        "id": "F03801",
        "name": "Honvéd utca",
        "lat": "47.434501",
        "lon": "19.200616",
        "parent": "CSF03806"
    },
    {
        "id": "F03802",
        "name": "Üllői út",
        "lat": "47.435273",
        "lon": "19.202182",
        "parent": ""
    },
    {
        "id": "F03803",
        "name": "Honvéd utca",
        "lat": "47.434833",
        "lon": "19.201518",
        "parent": "CSF03806"
    },
    {
        "id": "F03804",
        "name": "Honvéd utca",
        "lat": "47.434346",
        "lon": "19.202617",
        "parent": "CSF03806"
    },
    {
        "id": "F03805",
        "name": "Honvéd utca",
        "lat": "47.434770",
        "lon": "19.201889",
        "parent": "CSF03806"
    },
    {
        "id": "F03806",
        "name": "Honvéd utca",
        "lat": "47.435026",
        "lon": "19.200809",
        "parent": "CSF03806"
    },
    {
        "id": "F03807",
        "name": "Szent László utca",
        "lat": "47.441814",
        "lon": "19.207651",
        "parent": ""
    },
    {
        "id": "F03808",
        "name": "Szemeretelep vasútállomás",
        "lat": "47.443148",
        "lon": "19.212242",
        "parent": "CSF03870"
    },
    {
        "id": "F03809",
        "name": "Szent László utca",
        "lat": "47.439856",
        "lon": "19.211861",
        "parent": ""
    },
    {
        "id": "F03810",
        "name": "Ferihegy vasútállomás",
        "lat": "47.436809",
        "lon": "19.222603",
        "parent": "CS007927"
    },
    {
        "id": "F03814",
        "name": "Billentyű utca",
        "lat": "47.447580",
        "lon": "19.207641",
        "parent": ""
    },
    {
        "id": "F03816",
        "name": "Gyékény tér",
        "lat": "47.430909",
        "lon": "19.196271",
        "parent": "CSF03817"
    },
    {
        "id": "F03817",
        "name": "Gyékény tér",
        "lat": "47.430972",
        "lon": "19.196364",
        "parent": "CSF03817"
    },
    {
        "id": "F03818",
        "name": "Bethlen Gábor utca",
        "lat": "47.410883",
        "lon": "19.176696",
        "parent": ""
    },
    {
        "id": "F03819",
        "name": "Arany János utca",
        "lat": "47.410549",
        "lon": "19.177358",
        "parent": ""
    },
    {
        "id": "F03820",
        "name": "Szélső utca",
        "lat": "47.401189",
        "lon": "19.181813",
        "parent": "CSF03820"
    },
    {
        "id": "F03821",
        "name": "Szélső utca",
        "lat": "47.400884",
        "lon": "19.181495",
        "parent": "CSF03820"
    },
    {
        "id": "F03822",
        "name": "Madarász utca",
        "lat": "47.437858",
        "lon": "19.192764",
        "parent": "CSF03822"
    },
    {
        "id": "F03823",
        "name": "Madarász utca",
        "lat": "47.437713",
        "lon": "19.193028",
        "parent": "CSF03822"
    },
    {
        "id": "F03824",
        "name": "Madarász utca",
        "lat": "47.437840",
        "lon": "19.192591",
        "parent": "CSF03822"
    },
    {
        "id": "F03825",
        "name": "Madarász utca",
        "lat": "47.437813",
        "lon": "19.192353",
        "parent": "CSF03822"
    },
    {
        "id": "F03826",
        "name": "Csaba utca",
        "lat": "47.454600",
        "lon": "19.190144",
        "parent": "CSF03826"
    },
    {
        "id": "F03827",
        "name": "Thököly út",
        "lat": "47.448651",
        "lon": "19.185752",
        "parent": "CSF03827"
    },
    {
        "id": "F03828",
        "name": "Thököly út",
        "lat": "47.448561",
        "lon": "19.185592",
        "parent": "CSF03827"
    },
    {
        "id": "F03829",
        "name": "Kosztolányi Dezső utca",
        "lat": "47.449119",
        "lon": "19.192967",
        "parent": "CSF03830"
    },
    {
        "id": "F03830",
        "name": "Kosztolányi Dezső utca",
        "lat": "47.449596",
        "lon": "19.193140",
        "parent": "CSF03830"
    },
    {
        "id": "F03831",
        "name": "Csörötnek utca",
        "lat": "47.449718",
        "lon": "19.181219",
        "parent": "CSF03831"
    },
    {
        "id": "F03832",
        "name": "Csörötnek utca",
        "lat": "47.449600",
        "lon": "19.182041",
        "parent": "CSF03831"
    },
    {
        "id": "F03833",
        "name": "Kemény Zsigmond utca",
        "lat": "47.445806",
        "lon": "19.172339",
        "parent": "CSF03836"
    },
    {
        "id": "F03834",
        "name": "Kemény Zsigmond utca",
        "lat": "47.446067",
        "lon": "19.171902",
        "parent": "CSF03836"
    },
    {
        "id": "F03835",
        "name": "Kemény Zsigmond utca",
        "lat": "47.445427",
        "lon": "19.173028",
        "parent": "CSF03836"
    },
    {
        "id": "F03836",
        "name": "Kemény Zsigmond utca",
        "lat": "47.446077",
        "lon": "19.171663",
        "parent": "CSF03836"
    },
    {
        "id": "F03837",
        "name": "Kispesti temető",
        "lat": "47.442964",
        "lon": "19.157462",
        "parent": "CSF03837"
    },
    {
        "id": "F03838",
        "name": "Kispesti temető",
        "lat": "47.442708",
        "lon": "19.158132",
        "parent": "CSF03837"
    },
    {
        "id": "F03839",
        "name": "Lakatos úti lakótelep",
        "lat": "47.451238",
        "lon": "19.172816",
        "parent": "CSF03749"
    },
    {
        "id": "F03840",
        "name": "Lakatos úti lakótelep",
        "lat": "47.451688",
        "lon": "19.172963",
        "parent": "CSF03749"
    },
    {
        "id": "F03841",
        "name": "Tinódi utca",
        "lat": "47.454673",
        "lon": "19.168282",
        "parent": "CSF03841"
    },
    {
        "id": "F03842",
        "name": "Tinódi utca",
        "lat": "47.453832",
        "lon": "19.170156",
        "parent": "CSF03841"
    },
    {
        "id": "F03843",
        "name": "Vajk utca",
        "lat": "47.455776",
        "lon": "19.185412",
        "parent": "CSF03843"
    },
    {
        "id": "F03845",
        "name": "Pestszentlőrinc vasútállomás (átjáró)",
        "lat": "47.456381",
        "lon": "19.182907",
        "parent": "CSF03845"
    },
    {
        "id": "F03846",
        "name": "Beszterce utca",
        "lat": "47.425784",
        "lon": "19.214720",
        "parent": "CSF03846"
    },
    {
        "id": "F03847",
        "name": "Beszterce utca",
        "lat": "47.425316",
        "lon": "19.214440",
        "parent": "CSF03846"
    },
    {
        "id": "F03848",
        "name": "Halomi út",
        "lat": "47.422774",
        "lon": "19.211994",
        "parent": "CSF03848"
    },
    {
        "id": "F03849",
        "name": "Halomi út",
        "lat": "47.422100",
        "lon": "19.211528",
        "parent": "CSF03848"
    },
    {
        "id": "F03850",
        "name": "Királyhágó út",
        "lat": "47.422595",
        "lon": "19.211304",
        "parent": ""
    },
    {
        "id": "F03851",
        "name": "Selmecbánya utca",
        "lat": "47.438409",
        "lon": "19.204790",
        "parent": ""
    },
    {
        "id": "F03852",
        "name": "Selmecbánya utca",
        "lat": "47.436262",
        "lon": "19.209357",
        "parent": ""
    },
    {
        "id": "F03853",
        "name": "Ungvár utca",
        "lat": "47.431256",
        "lon": "19.212099",
        "parent": "CSF03856"
    },
    {
        "id": "F03854",
        "name": "Ungvár utca",
        "lat": "47.431238",
        "lon": "19.212325",
        "parent": "CSF03856"
    },
    {
        "id": "F03855",
        "name": "Ungvár utca",
        "lat": "47.431031",
        "lon": "19.212417",
        "parent": "CSF03856"
    },
    {
        "id": "F03856",
        "name": "Ungvár utca",
        "lat": "47.431518",
        "lon": "19.211331",
        "parent": "CSF03856"
    },
    {
        "id": "F03857",
        "name": "Sas utca",
        "lat": "47.432716",
        "lon": "19.189847",
        "parent": "CSF03857"
    },
    {
        "id": "F03858",
        "name": "Sas utca",
        "lat": "47.432708",
        "lon": "19.189104",
        "parent": "CSF03857"
    },
    {
        "id": "F03859",
        "name": "Alacskai úti lakótelep",
        "lat": "47.414198",
        "lon": "19.202028",
        "parent": "CSF03859"
    },
    {
        "id": "F03860",
        "name": "Alacskai úti lakótelep",
        "lat": "47.413767",
        "lon": "19.201563",
        "parent": "CSF03859"
    },
    {
        "id": "F03861",
        "name": "Alacskai úti lakótelep",
        "lat": "47.413200",
        "lon": "19.201482",
        "parent": "CSF03859"
    },
    {
        "id": "F03862",
        "name": "Alacskai úti lakótelep",
        "lat": "47.413047",
        "lon": "19.201813",
        "parent": "CSF03859"
    },
    {
        "id": "F03863",
        "name": "Tarkő utca",
        "lat": "47.425102",
        "lon": "19.207017",
        "parent": "CSF03863"
    },
    {
        "id": "F03864",
        "name": "Tarkő utca",
        "lat": "47.425093",
        "lon": "19.207190",
        "parent": "CSF03863"
    },
    {
        "id": "F03865",
        "name": "Nagyenyed utca",
        "lat": "47.427365",
        "lon": "19.203167",
        "parent": "CSF03866"
    },
    {
        "id": "F03866",
        "name": "Nagyenyed utca",
        "lat": "47.427428",
        "lon": "19.203233",
        "parent": "CSF03866"
    },
    {
        "id": "F03867",
        "name": "Rába utca",
        "lat": "47.427807",
        "lon": "19.221540",
        "parent": "CSF03867"
    },
    {
        "id": "F03868",
        "name": "Rába utca",
        "lat": "47.427797",
        "lon": "19.221858",
        "parent": "CSF03867"
    },
    {
        "id": "F03869",
        "name": "Szemeretelep vasútállomás",
        "lat": "47.444055",
        "lon": "19.212974",
        "parent": "CSF03870"
    },
    {
        "id": "F03870",
        "name": "Szemeretelep vasútállomás",
        "lat": "47.444244",
        "lon": "19.213267",
        "parent": "CSF03870"
    },
    {
        "id": "F03871",
        "name": "Zöldségpiac",
        "lat": "47.416684",
        "lon": "19.168971",
        "parent": "CSF03872"
    },
    {
        "id": "F03872",
        "name": "Zöldségpiac",
        "lat": "47.417530",
        "lon": "19.168112",
        "parent": "CSF03872"
    },
    {
        "id": "F03873",
        "name": "Eke utca",
        "lat": "47.407856",
        "lon": "19.180969",
        "parent": "CSF03873"
    },
    {
        "id": "F03874",
        "name": "Eke utca",
        "lat": "47.406667",
        "lon": "19.182370",
        "parent": "CSF03873"
    },
    {
        "id": "F03875",
        "name": "Csolt utca",
        "lat": "47.399666",
        "lon": "19.191613",
        "parent": "CSF03875"
    },
    {
        "id": "F03876",
        "name": "Csolt utca",
        "lat": "47.399396",
        "lon": "19.192156",
        "parent": "CSF03875"
    },
    {
        "id": "F03877",
        "name": "Olt utca",
        "lat": "47.429952",
        "lon": "19.198800",
        "parent": "CSF03877"
    },
    {
        "id": "F03878",
        "name": "Olt utca",
        "lat": "47.429709",
        "lon": "19.199369",
        "parent": "CSF03877"
    },
    {
        "id": "F03879",
        "name": "Goroszló utca",
        "lat": "47.428595",
        "lon": "19.175401",
        "parent": ""
    },
    {
        "id": "F03880",
        "name": "Pestszentlőrinc vasútállomás (átjáró)",
        "lat": "47.456093",
        "lon": "19.183013",
        "parent": "CSF03845"
    },
    {
        "id": "F03881",
        "name": "Vajk utca",
        "lat": "47.455316",
        "lon": "19.186167",
        "parent": "CSF03843"
    },
    {
        "id": "F03882",
        "name": "Csaba utca",
        "lat": "47.454403",
        "lon": "19.189944",
        "parent": "CSF03826"
    },
    {
        "id": "F03883",
        "name": "Üllői út",
        "lat": "47.433179",
        "lon": "19.207227",
        "parent": ""
    },
    {
        "id": "F03884",
        "name": "Bajcsy-Zsilinszky út",
        "lat": "47.433144",
        "lon": "19.206697",
        "parent": "CSF03886"
    },
    {
        "id": "F03885",
        "name": "Bajcsy-Zsilinszky út",
        "lat": "47.432982",
        "lon": "19.206988",
        "parent": "CSF03886"
    },
    {
        "id": "F03886",
        "name": "Bajcsy-Zsilinszky út",
        "lat": "47.433153",
        "lon": "19.206498",
        "parent": "CSF03886"
    },
    {
        "id": "F03887",
        "name": "Bajcsy-Zsilinszky út",
        "lat": "47.432928",
        "lon": "19.206815",
        "parent": "CSF03886"
    },
    {
        "id": "F03888",
        "name": "Autópiac",
        "lat": "47.432840",
        "lon": "19.148964",
        "parent": "CSF03888"
    },
    {
        "id": "F03889",
        "name": "Autópiac",
        "lat": "47.432084",
        "lon": "19.149798",
        "parent": "CSF03888"
    },
    {
        "id": "F03890",
        "name": "Karton utca",
        "lat": "47.434151",
        "lon": "19.161640",
        "parent": "CSF03891"
    },
    {
        "id": "F03891",
        "name": "Karton utca",
        "lat": "47.434367",
        "lon": "19.160911",
        "parent": "CSF03891"
    },
    {
        "id": "F03892",
        "name": "Csíky utca",
        "lat": "47.432303",
        "lon": "19.165534",
        "parent": "CSF03894"
    },
    {
        "id": "F03893",
        "name": "Csíky utca",
        "lat": "47.432005",
        "lon": "19.166090",
        "parent": "CSF03894"
    },
    {
        "id": "F03894",
        "name": "Csíky utca",
        "lat": "47.432491",
        "lon": "19.165918",
        "parent": "CSF03894"
    },
    {
        "id": "F03895",
        "name": "Batthyány utca",
        "lat": "47.443945",
        "lon": "19.130568",
        "parent": ""
    },
    {
        "id": "F03896",
        "name": "Debrecen utca",
        "lat": "47.443297",
        "lon": "19.131124",
        "parent": ""
    },
    {
        "id": "F03897",
        "name": "Rákóczi utca",
        "lat": "47.452760",
        "lon": "19.117122",
        "parent": ""
    },
    {
        "id": "F03898",
        "name": "Gomb utca",
        "lat": "47.452895",
        "lon": "19.117321",
        "parent": ""
    },
    {
        "id": "F03899",
        "name": "Corvin körút",
        "lat": "47.462113",
        "lon": "19.134125",
        "parent": "CSF03899"
    },
    {
        "id": "F03900",
        "name": "Corvin körút",
        "lat": "47.462004",
        "lon": "19.134509",
        "parent": "CSF03899"
    },
    {
        "id": "F03901",
        "name": "Nyáry Pál utca",
        "lat": "47.461665",
        "lon": "19.134835",
        "parent": "CSF03902"
    },
    {
        "id": "F03902",
        "name": "Nyáry Pál utca",
        "lat": "47.462320",
        "lon": "19.133621",
        "parent": "CSF03902"
    },
    {
        "id": "F03903",
        "name": "Árpád utca",
        "lat": "47.454578",
        "lon": "19.151791",
        "parent": "CSF03906"
    },
    {
        "id": "F03904",
        "name": "Árpád utca",
        "lat": "47.454804",
        "lon": "19.151393",
        "parent": "CSF03906"
    },
    {
        "id": "F03905",
        "name": "Árpád utca",
        "lat": "47.454290",
        "lon": "19.152188",
        "parent": "CSF03906"
    },
    {
        "id": "F03906",
        "name": "Árpád utca",
        "lat": "47.454939",
        "lon": "19.150916",
        "parent": "CSF03906"
    },
    {
        "id": "F03907",
        "name": "Naszód utca (Használtcikk piac)",
        "lat": "47.435894",
        "lon": "19.143734",
        "parent": "CSF03907"
    },
    {
        "id": "F03908",
        "name": "Használtcikk piac",
        "lat": "47.435614",
        "lon": "19.145443",
        "parent": "CSF03907"
    },
    {
        "id": "F03909",
        "name": "Alvinc utca",
        "lat": "47.437668",
        "lon": "19.140634",
        "parent": ""
    },
    {
        "id": "F03911",
        "name": "Kéreg utca",
        "lat": "47.439182",
        "lon": "19.137760",
        "parent": ""
    },
    {
        "id": "F03912",
        "name": "Vas Gereben utca",
        "lat": "47.439361",
        "lon": "19.137946",
        "parent": "CSF03986"
    },
    {
        "id": "F03913",
        "name": "Zrínyi utca",
        "lat": "47.441181",
        "lon": "19.134913",
        "parent": ""
    },
    {
        "id": "F03914",
        "name": "Radnó utca",
        "lat": "47.440524",
        "lon": "19.135442",
        "parent": ""
    },
    {
        "id": "F03915",
        "name": "Nagysándor József utca",
        "lat": "47.446197",
        "lon": "19.126647",
        "parent": ""
    },
    {
        "id": "F03916",
        "name": "Hunyadi utca",
        "lat": "47.446305",
        "lon": "19.126899",
        "parent": ""
    },
    {
        "id": "F03917",
        "name": "Kossuth Lajos utca",
        "lat": "47.449798",
        "lon": "19.121401",
        "parent": ""
    },
    {
        "id": "F03918",
        "name": "Újlaki utca",
        "lat": "47.450581",
        "lon": "19.120699",
        "parent": ""
    },
    {
        "id": "F03919",
        "name": "Álmos utca",
        "lat": "47.455791",
        "lon": "19.117630",
        "parent": ""
    },
    {
        "id": "F03920",
        "name": "Hungária út",
        "lat": "47.454927",
        "lon": "19.118597",
        "parent": ""
    },
    {
        "id": "F03921",
        "name": "Pannónia út",
        "lat": "47.454752",
        "lon": "19.125532",
        "parent": ""
    },
    {
        "id": "F03922",
        "name": "Kós Károly tér",
        "lat": "47.454724",
        "lon": "19.126660",
        "parent": ""
    },
    {
        "id": "F03923",
        "name": "Kós Károly tér",
        "lat": "47.456488",
        "lon": "19.125363",
        "parent": ""
    },
    {
        "id": "F03924",
        "name": "Corvin körút",
        "lat": "47.459698",
        "lon": "19.126455",
        "parent": "CSF03924"
    },
    {
        "id": "F03925",
        "name": "Corvin körút",
        "lat": "47.459303",
        "lon": "19.126547",
        "parent": "CSF03924"
    },
    {
        "id": "F03926",
        "name": "Corvin körút",
        "lat": "47.460282",
        "lon": "19.131837",
        "parent": "CSF03926"
    },
    {
        "id": "F03927",
        "name": "Corvin körút",
        "lat": "47.460224",
        "lon": "19.132035",
        "parent": "CSF03926"
    },
    {
        "id": "F03928",
        "name": "Határ út M",
        "lat": "47.464728",
        "lon": "19.127638",
        "parent": "CSF03930"
    },
    {
        "id": "F03929",
        "name": "Határ út M",
        "lat": "47.465140",
        "lon": "19.127219",
        "parent": "CSF03930"
    },
    {
        "id": "F03930",
        "name": "Határ út M",
        "lat": "47.465169",
        "lon": "19.127175",
        "parent": "CSF03930"
    },
    {
        "id": "F03931",
        "name": "Lehel utca",
        "lat": "47.459517",
        "lon": "19.140261",
        "parent": "CSF03934"
    },
    {
        "id": "F03932",
        "name": "Lehel utca",
        "lat": "47.459364",
        "lon": "19.140792",
        "parent": "CSF03934"
    },
    {
        "id": "F03933",
        "name": "Lehel utca",
        "lat": "47.459499",
        "lon": "19.140009",
        "parent": "CSF03934"
    },
    {
        "id": "F03934",
        "name": "Lehel utca",
        "lat": "47.459824",
        "lon": "19.139493",
        "parent": "CSF03934"
    },
    {
        "id": "F03940",
        "name": "Kőbánya-Kispest M",
        "lat": "47.461922",
        "lon": "19.149623",
        "parent": "CS009592"
    },
    {
        "id": "F03941",
        "name": "Kőbánya-Kispest M",
        "lat": "47.462156",
        "lon": "19.149995",
        "parent": "CS009592"
    },
    {
        "id": "F03942",
        "name": "Sós utca",
        "lat": "47.459177",
        "lon": "19.149240",
        "parent": ""
    },
    {
        "id": "F03943",
        "name": "Wesselényi utca",
        "lat": "47.461440",
        "lon": "19.153037",
        "parent": "CSF03943"
    },
    {
        "id": "F03944",
        "name": "Wesselényi utca",
        "lat": "47.460558",
        "lon": "19.154375",
        "parent": "CSF03943"
    },
    {
        "id": "F03945",
        "name": "Kispest, Kossuth tér",
        "lat": "47.458325",
        "lon": "19.145750",
        "parent": "CSF03945"
    },
    {
        "id": "F03946",
        "name": "Kossuth tér",
        "lat": "47.457787",
        "lon": "19.144436",
        "parent": "CSF03945"
    },
    {
        "id": "F03947",
        "name": "Kossuth tér",
        "lat": "47.457517",
        "lon": "19.144913",
        "parent": "CSF03945"
    },
    {
        "id": "F03948",
        "name": "Kispest, Kossuth tér",
        "lat": "47.458139",
        "lon": "19.143163",
        "parent": "CSF03945"
    },
    {
        "id": "F03949",
        "name": "Kossuth tér",
        "lat": "47.457841",
        "lon": "19.144131",
        "parent": "CSF03945"
    },
    {
        "id": "F03950",
        "name": "Simonyi Zsigmond utca",
        "lat": "47.457488",
        "lon": "19.146863",
        "parent": ""
    },
    {
        "id": "F03951",
        "name": "Fő utca",
        "lat": "47.456120",
        "lon": "19.147881",
        "parent": "CSF03954"
    },
    {
        "id": "F03952",
        "name": "Fő utca",
        "lat": "47.456561",
        "lon": "19.147100",
        "parent": "CSF03954"
    },
    {
        "id": "F03953",
        "name": "Fő utca",
        "lat": "47.456354",
        "lon": "19.147616",
        "parent": "CSF03954"
    },
    {
        "id": "F03954",
        "name": "Fő utca",
        "lat": "47.456624",
        "lon": "19.147166",
        "parent": "CSF03954"
    },
    {
        "id": "F03955",
        "name": "Kisfaludy utca",
        "lat": "47.454155",
        "lon": "19.142042",
        "parent": ""
    },
    {
        "id": "F03956",
        "name": "Ady Endre út (Báthory utca)",
        "lat": "47.454695",
        "lon": "19.140916",
        "parent": "CSF03956"
    },
    {
        "id": "F03957",
        "name": "Ady Endre út (Hunyadi utca)",
        "lat": "47.454562",
        "lon": "19.139152",
        "parent": "CSF03956"
    },
    {
        "id": "F03958",
        "name": "Hungária út",
        "lat": "47.456057",
        "lon": "19.136675",
        "parent": "CSF03960"
    },
    {
        "id": "F03959",
        "name": "Ady Endre út (Rendőrség)",
        "lat": "47.455958",
        "lon": "19.137152",
        "parent": ""
    },
    {
        "id": "F03960",
        "name": "Hungária út",
        "lat": "47.456284",
        "lon": "19.137439",
        "parent": "CSF03960"
    },
    {
        "id": "F03961",
        "name": "Hungária út",
        "lat": "47.456029",
        "lon": "19.137961",
        "parent": "CSF03960"
    },
    {
        "id": "F03963",
        "name": "Gutenberg körút",
        "lat": "47.455916",
        "lon": "19.132351",
        "parent": "CSF03963"
    },
    {
        "id": "F03964",
        "name": "Gutenberg körút",
        "lat": "47.455791",
        "lon": "19.131223",
        "parent": "CSF03963"
    },
    {
        "id": "F03965",
        "name": "Zoltán utca",
        "lat": "47.451506",
        "lon": "19.127682",
        "parent": "CSF03966"
    },
    {
        "id": "F03966",
        "name": "Zoltán utca",
        "lat": "47.451731",
        "lon": "19.127073",
        "parent": "CSF03966"
    },
    {
        "id": "F03967",
        "name": "Thököly utca",
        "lat": "47.453270",
        "lon": "19.121167",
        "parent": "CSF03967"
    },
    {
        "id": "F03968",
        "name": "Thököly utca",
        "lat": "47.453064",
        "lon": "19.121273",
        "parent": "CSF03967"
    },
    {
        "id": "F03969",
        "name": "Pannónia út",
        "lat": "47.450839",
        "lon": "19.125606",
        "parent": ""
    },
    {
        "id": "F03970",
        "name": "Zalaegerszeg utca",
        "lat": "47.450876",
        "lon": "19.124519",
        "parent": ""
    },
    {
        "id": "F03971",
        "name": "Hunyadi tér",
        "lat": "47.449306",
        "lon": "19.131173",
        "parent": "CSF03971"
    },
    {
        "id": "F03972",
        "name": "Hunyadi tér",
        "lat": "47.449234",
        "lon": "19.130749",
        "parent": "CSF03971"
    },
    {
        "id": "F03973",
        "name": "Hunyadi tér",
        "lat": "47.448812",
        "lon": "19.130656",
        "parent": "CSF03971"
    },
    {
        "id": "F03974",
        "name": "Hunyadi tér",
        "lat": "47.448766",
        "lon": "19.131650",
        "parent": "CSF03971"
    },
    {
        "id": "F03975",
        "name": "Áchim András utca",
        "lat": "47.452181",
        "lon": "19.135435",
        "parent": "CSF03975"
    },
    {
        "id": "F03976",
        "name": "Áchim András utca",
        "lat": "47.451723",
        "lon": "19.134983",
        "parent": "CSF03975"
    },
    {
        "id": "F03977",
        "name": "Kossuth Lajos utca",
        "lat": "47.449771",
        "lon": "19.145787",
        "parent": ""
    },
    {
        "id": "F03978",
        "name": "Ady Endre út",
        "lat": "47.449897",
        "lon": "19.146146",
        "parent": ""
    },
    {
        "id": "F03979",
        "name": "Kossuth Lajos utca",
        "lat": "47.450059",
        "lon": "19.146464",
        "parent": "CSF03980"
    },
    {
        "id": "F03980",
        "name": "Kossuth Lajos utca",
        "lat": "47.450176",
        "lon": "19.146159",
        "parent": "CSF03980"
    },
    {
        "id": "F03981",
        "name": "Kossuth Lajos utca",
        "lat": "47.444642",
        "lon": "19.137517",
        "parent": ""
    },
    {
        "id": "F03982",
        "name": "Nádasdy utca",
        "lat": "47.444587",
        "lon": "19.138074",
        "parent": ""
    },
    {
        "id": "F03983",
        "name": "Kossuth Lajos utca",
        "lat": "47.444129",
        "lon": "19.138073",
        "parent": ""
    },
    {
        "id": "F03984",
        "name": "Kossuth Lajos utca",
        "lat": "47.444803",
        "lon": "19.138565",
        "parent": ""
    },
    {
        "id": "F03985",
        "name": "Zalaegerszeg utca",
        "lat": "47.442556",
        "lon": "19.135923",
        "parent": ""
    },
    {
        "id": "F03986",
        "name": "Vas Gereben utca",
        "lat": "47.440746",
        "lon": "19.138532",
        "parent": "CSF03986"
    },
    {
        "id": "F03989",
        "name": "Vas Gereben utca",
        "lat": "47.442463",
        "lon": "19.140656",
        "parent": "CSF03989"
    },
    {
        "id": "F03990",
        "name": "Kispest, Vas Gereben utca",
        "lat": "47.441716",
        "lon": "19.140933",
        "parent": "CSF03989"
    },
    {
        "id": "F03991",
        "name": "Pincér utca",
        "lat": "47.441436",
        "lon": "19.141940",
        "parent": ""
    },
    {
        "id": "F03992",
        "name": "Hofherr Albert utca",
        "lat": "47.438464",
        "lon": "19.146138",
        "parent": "CSF03993"
    },
    {
        "id": "F03993",
        "name": "Hofherr Albert utca",
        "lat": "47.438571",
        "lon": "19.147437",
        "parent": "CSF03993"
    },
    {
        "id": "F03994",
        "name": "Áchim András utca",
        "lat": "47.441258",
        "lon": "19.149908",
        "parent": ""
    },
    {
        "id": "F03995",
        "name": "Ajtósi utca",
        "lat": "47.436400",
        "lon": "19.150946",
        "parent": ""
    },
    {
        "id": "F03996",
        "name": "Ipolyság utca",
        "lat": "47.436112",
        "lon": "19.151741",
        "parent": ""
    },
    {
        "id": "F03997",
        "name": "Kassa utca",
        "lat": "47.436818",
        "lon": "19.155998",
        "parent": "CSF03997"
    },
    {
        "id": "F03998",
        "name": "Kassa utca",
        "lat": "47.436351",
        "lon": "19.155732",
        "parent": "CSF03997"
    },
    {
        "id": "F03999",
        "name": "Kassa utca",
        "lat": "47.436530",
        "lon": "19.156236",
        "parent": "CSF03997"
    },
    {
        "id": "F04000",
        "name": "Ady Endre út",
        "lat": "47.444619",
        "lon": "19.153548",
        "parent": ""
    },
    {
        "id": "F04002",
        "name": "Vas Gereben utca (Ady Endre út)",
        "lat": "47.447582",
        "lon": "19.149364",
        "parent": "CSF04003"
    },
    {
        "id": "F04003",
        "name": "Vas Gereben utca",
        "lat": "47.447834",
        "lon": "19.149576",
        "parent": "CSF04003"
    },
    {
        "id": "F04004",
        "name": "Vas Gereben utca",
        "lat": "47.447708",
        "lon": "19.149828",
        "parent": "CSF04003"
    },
    {
        "id": "F04005",
        "name": "Bocskai utca",
        "lat": "47.459196",
        "lon": "19.157980",
        "parent": "CSF04005"
    },
    {
        "id": "F04006",
        "name": "Bocskai utca",
        "lat": "47.458764",
        "lon": "19.158709",
        "parent": "CSF04005"
    },
    {
        "id": "F04014",
        "name": "Határ út M",
        "lat": "47.464582",
        "lon": "19.127337",
        "parent": "CSF03930"
    },
    {
        "id": "F04015",
        "name": "Határ út M",
        "lat": "47.464807",
        "lon": "19.127139",
        "parent": "CSF03930"
    },
    {
        "id": "F04017",
        "name": "Határ út M",
        "lat": "47.464474",
        "lon": "19.126714",
        "parent": "CSF03930"
    },
    {
        "id": "F04018",
        "name": "Határ út M",
        "lat": "47.464240",
        "lon": "19.126912",
        "parent": "CSF03930"
    },
    {
        "id": "F04019",
        "name": "Határ út M",
        "lat": "47.464222",
        "lon": "19.127748",
        "parent": "CSF03930"
    },
    {
        "id": "F04020",
        "name": "Templom tér",
        "lat": "47.452364",
        "lon": "19.143312",
        "parent": "CSF04021"
    },
    {
        "id": "F04021",
        "name": "Templom tér",
        "lat": "47.452859",
        "lon": "19.142451",
        "parent": "CSF04021"
    },
    {
        "id": "F04022",
        "name": "Templom tér",
        "lat": "47.452607",
        "lon": "19.142729",
        "parent": "CSF04021"
    },
    {
        "id": "F04024",
        "name": "Batthyány utca",
        "lat": "47.446560",
        "lon": "19.134763",
        "parent": "CSF04025"
    },
    {
        "id": "F04025",
        "name": "Batthyány utca",
        "lat": "47.446821",
        "lon": "19.134206",
        "parent": "CSF04025"
    },
    {
        "id": "F04026",
        "name": "Áchim András utca",
        "lat": "47.447094",
        "lon": "19.141977",
        "parent": "CSF04027"
    },
    {
        "id": "F04027",
        "name": "Áchim András utca",
        "lat": "47.447391",
        "lon": "19.142256",
        "parent": "CSF04027"
    },
    {
        "id": "F04028",
        "name": "Villanytelep",
        "lat": "47.452568",
        "lon": "19.156242",
        "parent": "CSF04029"
    },
    {
        "id": "F04029",
        "name": "Villanytelep",
        "lat": "47.452679",
        "lon": "19.156183",
        "parent": "CSF04029"
    },
    {
        "id": "F04030",
        "name": "Villanytelep",
        "lat": "47.452505",
        "lon": "19.156680",
        "parent": "CSF04029"
    },
    {
        "id": "F04031",
        "name": "Villanytelep",
        "lat": "47.452622",
        "lon": "19.156547",
        "parent": "CSF04029"
    },
    {
        "id": "F04033",
        "name": "Garázs utca",
        "lat": "47.440040",
        "lon": "19.143900",
        "parent": ""
    },
    {
        "id": "F04034",
        "name": "Madarassy László utca",
        "lat": "47.440418",
        "lon": "19.143543",
        "parent": ""
    },
    {
        "id": "F04035",
        "name": "Mészáros Lőrinc utca",
        "lat": "47.444043",
        "lon": "19.143868",
        "parent": ""
    },
    {
        "id": "F04036",
        "name": "Szegfű utca",
        "lat": "47.446001",
        "lon": "19.146921",
        "parent": ""
    },
    {
        "id": "F04037",
        "name": "Pannónia út",
        "lat": "47.447655",
        "lon": "19.124952",
        "parent": ""
    },
    {
        "id": "F04038",
        "name": "Irányi utca",
        "lat": "47.447160",
        "lon": "19.125243",
        "parent": ""
    },
    {
        "id": "F04039",
        "name": "Kispest, Tulipán utca",
        "lat": "47.445700",
        "lon": "19.152662",
        "parent": ""
    },
    {
        "id": "F04041",
        "name": "Baross utca",
        "lat": "47.432870",
        "lon": "19.104118",
        "parent": ""
    },
    {
        "id": "F04042",
        "name": "Nagykőrösi út",
        "lat": "47.445128",
        "lon": "19.124935",
        "parent": "CSF04042"
    },
    {
        "id": "F04043",
        "name": "Nagykőrösi út",
        "lat": "47.444894",
        "lon": "19.124789",
        "parent": "CSF04042"
    },
    {
        "id": "F04044",
        "name": "Pöltenberg utca",
        "lat": "47.433082",
        "lon": "19.111688",
        "parent": ""
    },
    {
        "id": "F04045",
        "name": "Pesterzsébet, Ady Endre tér",
        "lat": "47.432632",
        "lon": "19.127383",
        "parent": "CSF04092"
    },
    {
        "id": "F04046",
        "name": "Ady Endre tér",
        "lat": "47.432246",
        "lon": "19.126905",
        "parent": "CSF04092"
    },
    {
        "id": "F04048",
        "name": "Ady Endre tér",
        "lat": "47.432928",
        "lon": "19.128404",
        "parent": "CSF04092"
    },
    {
        "id": "F04049",
        "name": "Szilágyság utca",
        "lat": "47.432850",
        "lon": "19.136821",
        "parent": ""
    },
    {
        "id": "F04050",
        "name": "Torontál utca H",
        "lat": "47.423515",
        "lon": "19.104864",
        "parent": "CSF04050"
    },
    {
        "id": "F04051",
        "name": "Torontál utca H",
        "lat": "47.422598",
        "lon": "19.105247",
        "parent": "CSF04050"
    },
    {
        "id": "F04052",
        "name": "Torontál utca",
        "lat": "47.423380",
        "lon": "19.105036",
        "parent": "CSF04052"
    },
    {
        "id": "F04053",
        "name": "Torontál utca",
        "lat": "47.423002",
        "lon": "19.105380",
        "parent": "CSF04052"
    },
    {
        "id": "F04054",
        "name": "Nagysándor József utca",
        "lat": "47.432583",
        "lon": "19.103031",
        "parent": "CSF04055"
    },
    {
        "id": "F04055",
        "name": "Nagysándor József utca",
        "lat": "47.432628",
        "lon": "19.102805",
        "parent": "CSF04055"
    },
    {
        "id": "F04056",
        "name": "Tinódi utca",
        "lat": "47.429137",
        "lon": "19.106089",
        "parent": "CSF04056"
    },
    {
        "id": "F04057",
        "name": "Tinódi utca",
        "lat": "47.428660",
        "lon": "19.106420",
        "parent": "CSF04056"
    },
    {
        "id": "F04058",
        "name": "Klapka utca",
        "lat": "47.427301",
        "lon": "19.108036",
        "parent": ""
    },
    {
        "id": "F04059",
        "name": "Torontál utca",
        "lat": "47.426581",
        "lon": "19.108658",
        "parent": ""
    },
    {
        "id": "F04060",
        "name": "Pöltenberg utca",
        "lat": "47.430880",
        "lon": "19.108822",
        "parent": ""
    },
    {
        "id": "F04061",
        "name": "Székelyhíd utca",
        "lat": "47.430679",
        "lon": "19.115503",
        "parent": ""
    },
    {
        "id": "F04062",
        "name": "Klapka utca",
        "lat": "47.431245",
        "lon": "19.116232",
        "parent": ""
    },
    {
        "id": "F04063",
        "name": "Wesselényi utca",
        "lat": "47.428023",
        "lon": "19.119728",
        "parent": "CSF04064"
    },
    {
        "id": "F04064",
        "name": "Wesselényi utca",
        "lat": "47.428247",
        "lon": "19.120033",
        "parent": "CSF04064"
    },
    {
        "id": "F04065",
        "name": "Jósika utca",
        "lat": "47.429172",
        "lon": "19.123533",
        "parent": ""
    },
    {
        "id": "F04066",
        "name": "Rózsás utca",
        "lat": "47.428667",
        "lon": "19.124089",
        "parent": ""
    },
    {
        "id": "F04067",
        "name": "Szalárdi Mór utca",
        "lat": "47.429458",
        "lon": "19.125641",
        "parent": ""
    },
    {
        "id": "F04068",
        "name": "Wesselényi utca",
        "lat": "47.431230",
        "lon": "19.125631",
        "parent": ""
    },
    {
        "id": "F04069",
        "name": "Eperjes utca",
        "lat": "47.431176",
        "lon": "19.124955",
        "parent": ""
    },
    {
        "id": "F04070",
        "name": "Eperjes utca",
        "lat": "47.429410",
        "lon": "19.130082",
        "parent": ""
    },
    {
        "id": "F04071",
        "name": "Pacsirta utca",
        "lat": "47.428486",
        "lon": "19.127032",
        "parent": ""
    },
    {
        "id": "F04072",
        "name": "Királyhágó utca",
        "lat": "47.427290",
        "lon": "19.126049",
        "parent": "CSF04072"
    },
    {
        "id": "F04073",
        "name": "Előd utca",
        "lat": "47.425912",
        "lon": "19.128075",
        "parent": "CSF04073"
    },
    {
        "id": "F04074",
        "name": "Királyhágó utca",
        "lat": "47.427254",
        "lon": "19.126274",
        "parent": "CSF04072"
    },
    {
        "id": "F04075",
        "name": "Előd utca",
        "lat": "47.425381",
        "lon": "19.128923",
        "parent": "CSF04073"
    },
    {
        "id": "F04077",
        "name": "Vágóhíd utca",
        "lat": "47.419290",
        "lon": "19.116774",
        "parent": ""
    },
    {
        "id": "F04078",
        "name": "Előd utca",
        "lat": "47.420503",
        "lon": "19.119439",
        "parent": ""
    },
    {
        "id": "F04080",
        "name": "Ábrahám Géza utca",
        "lat": "47.421259",
        "lon": "19.119135",
        "parent": ""
    },
    {
        "id": "F04081",
        "name": "Pesterzsébet, Pacsirtatelep",
        "lat": "47.422111",
        "lon": "19.122596",
        "parent": ""
    },
    {
        "id": "F04082",
        "name": "Jahn Ferenc Kórház",
        "lat": "47.424003",
        "lon": "19.131094",
        "parent": "CSF04082"
    },
    {
        "id": "F04083",
        "name": "Jahn Ferenc Kórház",
        "lat": "47.423529",
        "lon": "19.131816",
        "parent": "CSF04082"
    },
    {
        "id": "F04084",
        "name": "Jahn Ferenc Kórház",
        "lat": "47.423832",
        "lon": "19.131014",
        "parent": "CSF04082"
    },
    {
        "id": "F04085",
        "name": "Írisz utca",
        "lat": "47.417190",
        "lon": "19.140446",
        "parent": "CSF04086"
    },
    {
        "id": "F04086",
        "name": "Írisz utca",
        "lat": "47.417541",
        "lon": "19.140155",
        "parent": "CSF04086"
    },
    {
        "id": "F04087",
        "name": "Hunyadi János tér",
        "lat": "47.435628",
        "lon": "19.139106",
        "parent": ""
    },
    {
        "id": "F04088",
        "name": "Udvarhely utca",
        "lat": "47.438141",
        "lon": "19.134391",
        "parent": ""
    },
    {
        "id": "F04089",
        "name": "Temesvár utca",
        "lat": "47.435912",
        "lon": "19.131895",
        "parent": ""
    },
    {
        "id": "F04090",
        "name": "Mártírok útja",
        "lat": "47.436443",
        "lon": "19.131326",
        "parent": ""
    },
    {
        "id": "F04092",
        "name": "Pesterzsébet, Ady Endre tér",
        "lat": "47.433289",
        "lon": "19.126920",
        "parent": "CSF04092"
    },
    {
        "id": "F04094",
        "name": "Magyar utca",
        "lat": "47.435377",
        "lon": "19.124391",
        "parent": "CSF04094"
    },
    {
        "id": "F04095",
        "name": "Magyar utca",
        "lat": "47.435243",
        "lon": "19.124390",
        "parent": "CSF04094"
    },
    {
        "id": "F04096",
        "name": "Magyar utca",
        "lat": "47.438433",
        "lon": "19.128333",
        "parent": "CSF04096"
    },
    {
        "id": "F04097",
        "name": "Magyar utca",
        "lat": "47.438199",
        "lon": "19.128876",
        "parent": "CSF04096"
    },
    {
        "id": "F04098",
        "name": "Mártírok útja",
        "lat": "47.442782",
        "lon": "19.121378",
        "parent": ""
    },
    {
        "id": "F04099",
        "name": "Nagyszőlős utca",
        "lat": "47.442476",
        "lon": "19.122558",
        "parent": ""
    },
    {
        "id": "F04100",
        "name": "Zalán utca",
        "lat": "47.443681",
        "lon": "19.122984",
        "parent": ""
    },
    {
        "id": "F04101",
        "name": "Nagysándor József utca",
        "lat": "47.443349",
        "lon": "19.121538",
        "parent": ""
    },
    {
        "id": "F04102",
        "name": "Nagysándor József utca",
        "lat": "47.439969",
        "lon": "19.117888",
        "parent": "CSF04102"
    },
    {
        "id": "F04103",
        "name": "Lázár utca",
        "lat": "47.440392",
        "lon": "19.117981",
        "parent": ""
    },
    {
        "id": "F04104",
        "name": "Jókai Mór utca",
        "lat": "47.440608",
        "lon": "19.118100",
        "parent": ""
    },
    {
        "id": "F04105",
        "name": "Nagysándor József utca",
        "lat": "47.439771",
        "lon": "19.117980",
        "parent": "CSF04102"
    },
    {
        "id": "F04106",
        "name": "Szabótelep",
        "lat": "47.440374",
        "lon": "19.116695",
        "parent": ""
    },
    {
        "id": "F04107",
        "name": "Vécsey utca",
        "lat": "47.438576",
        "lon": "19.115274",
        "parent": ""
    },
    {
        "id": "F04108",
        "name": "Szent Imre herceg utca",
        "lat": "47.436671",
        "lon": "19.112355",
        "parent": "CSF04109"
    },
    {
        "id": "F04109",
        "name": "Szent Imre herceg utca",
        "lat": "47.437112",
        "lon": "19.112276",
        "parent": "CSF04109"
    },
    {
        "id": "F04110",
        "name": "Székelyhíd utca",
        "lat": "47.432305",
        "lon": "19.119071",
        "parent": ""
    },
    {
        "id": "F04111",
        "name": "Nagysándor József utca",
        "lat": "47.436043",
        "lon": "19.109530",
        "parent": "CSF04111"
    },
    {
        "id": "F04112",
        "name": "Nagysándor József utca",
        "lat": "47.435512",
        "lon": "19.110219",
        "parent": "CSF04111"
    },
    {
        "id": "F04113",
        "name": "Török Flóris utca",
        "lat": "47.435548",
        "lon": "19.109517",
        "parent": "CSF04115"
    },
    {
        "id": "F04114",
        "name": "Nagysándor József utca",
        "lat": "47.435018",
        "lon": "19.108972",
        "parent": "CSF04111"
    },
    {
        "id": "F04115",
        "name": "Török Flóris utca",
        "lat": "47.435548",
        "lon": "19.109145",
        "parent": "CSF04115"
    },
    {
        "id": "F04116",
        "name": "Vörösmarty utca",
        "lat": "47.434344",
        "lon": "19.106638",
        "parent": "CSF04116"
    },
    {
        "id": "F04117",
        "name": "Vörösmarty utca",
        "lat": "47.433589",
        "lon": "19.105537",
        "parent": "CSF04116"
    },
    {
        "id": "F04118",
        "name": "Pesterzsébet, Kossuth Lajos utca",
        "lat": "47.435301",
        "lon": "19.099878",
        "parent": "CSF04118"
    },
    {
        "id": "F04119",
        "name": "Pesterzsébet, Kossuth Lajos utca",
        "lat": "47.435265",
        "lon": "19.100077",
        "parent": "CSF04118"
    },
    {
        "id": "F04120",
        "name": "Pesterzsébet vasútállomás",
        "lat": "47.433611",
        "lon": "19.097769",
        "parent": "CSF04121"
    },
    {
        "id": "F04121",
        "name": "Pesterzsébet vasútállomás",
        "lat": "47.434016",
        "lon": "19.097571",
        "parent": "CSF04121"
    },
    {
        "id": "F04122",
        "name": "Pesterzsébet, városközpont",
        "lat": "47.437576",
        "lon": "19.101246",
        "parent": "CSF04124"
    },
    {
        "id": "F04123",
        "name": "Pesterzsébet, városközpont",
        "lat": "47.437666",
        "lon": "19.100915",
        "parent": "CSF04124"
    },
    {
        "id": "F04124",
        "name": "Pesterzsébet, városközpont",
        "lat": "47.437810",
        "lon": "19.101193",
        "parent": "CSF04124"
    },
    {
        "id": "F04125",
        "name": "János utca",
        "lat": "47.438433",
        "lon": "19.096898",
        "parent": "CSF04126"
    },
    {
        "id": "F04126",
        "name": "János utca",
        "lat": "47.439818",
        "lon": "19.096568",
        "parent": "CSF04126"
    },
    {
        "id": "F04127",
        "name": "Ady Endre utca (Topánka utca)",
        "lat": "47.438942",
        "lon": "19.103210",
        "parent": "CSF04128"
    },
    {
        "id": "F04128",
        "name": "Ady Endre utca",
        "lat": "47.439437",
        "lon": "19.103502",
        "parent": "CSF04128"
    },
    {
        "id": "F04129",
        "name": "Ady Endre utca (Topánka utca)",
        "lat": "47.439401",
        "lon": "19.104562",
        "parent": ""
    },
    {
        "id": "F04130",
        "name": "Kossuth Lajos utca",
        "lat": "47.439382",
        "lon": "19.105570",
        "parent": ""
    },
    {
        "id": "F04131",
        "name": "János tér",
        "lat": "47.441758",
        "lon": "19.102576",
        "parent": "CS009582"
    },
    {
        "id": "F04132",
        "name": "János tér",
        "lat": "47.441506",
        "lon": "19.103000",
        "parent": "CS009582"
    },
    {
        "id": "F04133",
        "name": "Szent Erzsébet tér",
        "lat": "47.440586",
        "lon": "19.107905",
        "parent": "CSF04133"
    },
    {
        "id": "F04134",
        "name": "Szent Erzsébet tér",
        "lat": "47.440452",
        "lon": "19.107335",
        "parent": "CSF04133"
    },
    {
        "id": "F04135",
        "name": "Szent Erzsébet tér",
        "lat": "47.439641",
        "lon": "19.108713",
        "parent": "CSF04133"
    },
    {
        "id": "F04136",
        "name": "Tátra tér",
        "lat": "47.442959",
        "lon": "19.111567",
        "parent": "CSF04136"
    },
    {
        "id": "F04137",
        "name": "Tátra tér",
        "lat": "47.442635",
        "lon": "19.111301",
        "parent": "CSF04136"
    },
    {
        "id": "F04138",
        "name": "Kossuth Lajos utca",
        "lat": "47.443210",
        "lon": "19.112628",
        "parent": ""
    },
    {
        "id": "F04139",
        "name": "Kossuth Lajos utca (Mártírok útja)",
        "lat": "47.446599",
        "lon": "19.116729",
        "parent": "CSF04139"
    },
    {
        "id": "F04140",
        "name": "Mártírok útja",
        "lat": "47.446185",
        "lon": "19.116636",
        "parent": "CSF04139"
    },
    {
        "id": "F04141",
        "name": "Kossuth Lajos utca",
        "lat": "47.446266",
        "lon": "19.117379",
        "parent": ""
    },
    {
        "id": "F04142",
        "name": "Pesterzsébet felső H",
        "lat": "47.439171",
        "lon": "19.094155",
        "parent": "CSF04142"
    },
    {
        "id": "F04143",
        "name": "Pesterzsébet felső H",
        "lat": "47.437952",
        "lon": "19.094046",
        "parent": "CSF04142"
    },
    {
        "id": "F04144",
        "name": "Pesterzsébet, Baross utca",
        "lat": "47.436871",
        "lon": "19.097213",
        "parent": "CSF04126"
    },
    {
        "id": "F04145",
        "name": "Pesterzsébet, Baross utca",
        "lat": "47.436714",
        "lon": "19.097692",
        "parent": "CSF04126"
    },
    {
        "id": "F04146",
        "name": "Csepeli átjáró",
        "lat": "47.436122",
        "lon": "19.095027",
        "parent": "CSF04147"
    },
    {
        "id": "F04147",
        "name": "Csepeli átjáró",
        "lat": "47.436574",
        "lon": "19.095140",
        "parent": "CSF04147"
    },
    {
        "id": "F04148",
        "name": "Sósfürdő",
        "lat": "47.436393",
        "lon": "19.090374",
        "parent": "CSF04148"
    },
    {
        "id": "F04149",
        "name": "Sósfürdő",
        "lat": "47.436243",
        "lon": "19.091003",
        "parent": "CSF04148"
    },
    {
        "id": "F04150",
        "name": "Pesterzsébet felső",
        "lat": "47.438416",
        "lon": "19.093425",
        "parent": "CSF04150"
    },
    {
        "id": "F04151",
        "name": "Pesterzsébet felső",
        "lat": "47.437903",
        "lon": "19.093796",
        "parent": "CSF04150"
    },
    {
        "id": "F04152",
        "name": "Török Flóris utca",
        "lat": "47.444179",
        "lon": "19.099635",
        "parent": "CSF04152"
    },
    {
        "id": "F04153",
        "name": "Török Flóris utca",
        "lat": "47.444035",
        "lon": "19.099940",
        "parent": "CSF04152"
    },
    {
        "id": "F04154",
        "name": "Pesterzsébet, Mátyás király tér",
        "lat": "47.432745",
        "lon": "19.132924",
        "parent": ""
    },
    {
        "id": "F04155",
        "name": "Attila utca",
        "lat": "47.431405",
        "lon": "19.101638",
        "parent": "CSF04156"
    },
    {
        "id": "F04156",
        "name": "Attila utca",
        "lat": "47.431927",
        "lon": "19.102725",
        "parent": "CSF04156"
    },
    {
        "id": "F04157",
        "name": "Akácfa utca",
        "lat": "47.424439",
        "lon": "19.111161",
        "parent": "CSF04157"
    },
    {
        "id": "F04158",
        "name": "Akácfa utca",
        "lat": "47.423737",
        "lon": "19.111769",
        "parent": "CSF04157"
    },
    {
        "id": "F04159",
        "name": "Akácfa utca",
        "lat": "47.425912",
        "lon": "19.114118",
        "parent": ""
    },
    {
        "id": "F04160",
        "name": "Klapka utca",
        "lat": "47.428684",
        "lon": "19.111179",
        "parent": ""
    },
    {
        "id": "F04161",
        "name": "Bolyai János utca",
        "lat": "47.422234",
        "lon": "19.113398",
        "parent": ""
    },
    {
        "id": "F04162",
        "name": "Lehel utca",
        "lat": "47.421936",
        "lon": "19.113888",
        "parent": ""
    },
    {
        "id": "F04163",
        "name": "Károly utca",
        "lat": "47.423257",
        "lon": "19.117004",
        "parent": ""
    },
    {
        "id": "F04164",
        "name": "Frangepán utca",
        "lat": "47.424305",
        "lon": "19.123314",
        "parent": ""
    },
    {
        "id": "F04165",
        "name": "Mesgye utca",
        "lat": "47.419969",
        "lon": "19.136681",
        "parent": "CSF04166"
    },
    {
        "id": "F04166",
        "name": "Mesgye utca",
        "lat": "47.420492",
        "lon": "19.135780",
        "parent": "CSF04166"
    },
    {
        "id": "F04167",
        "name": "Vaskapu utca",
        "lat": "47.434328",
        "lon": "19.139112",
        "parent": ""
    },
    {
        "id": "F04168",
        "name": "Mézes utca",
        "lat": "47.438042",
        "lon": "19.120603",
        "parent": ""
    },
    {
        "id": "F04169",
        "name": "Kiss Ernő utca",
        "lat": "47.437637",
        "lon": "19.120987",
        "parent": ""
    },
    {
        "id": "F04170",
        "name": "Zobor utca",
        "lat": "47.440603",
        "lon": "19.125446",
        "parent": ""
    },
    {
        "id": "F04171",
        "name": "Mézes utca",
        "lat": "47.440846",
        "lon": "19.124889",
        "parent": ""
    },
    {
        "id": "F04172",
        "name": "Thököly utca",
        "lat": "47.445749",
        "lon": "19.109038",
        "parent": ""
    },
    {
        "id": "F04173",
        "name": "Szigligeti utca",
        "lat": "47.449192",
        "lon": "19.113033",
        "parent": "CSF04173"
    },
    {
        "id": "F04174",
        "name": "Szigligeti utca",
        "lat": "47.448930",
        "lon": "19.113576",
        "parent": "CSF04173"
    },
    {
        "id": "F04175",
        "name": "Jahn Ferenc Kórház",
        "lat": "47.423652",
        "lon": "19.131942",
        "parent": "CSF04082"
    },
    {
        "id": "F04177",
        "name": "Karácsony Sándor utca H",
        "lat": "47.427207",
        "lon": "19.067502",
        "parent": "CSF04177"
    },
    {
        "id": "F04178",
        "name": "József Attila utca",
        "lat": "47.425017",
        "lon": "19.084136",
        "parent": "CSF04178"
    },
    {
        "id": "F04179",
        "name": "József Attila utca",
        "lat": "47.424198",
        "lon": "19.083910",
        "parent": "CSF04178"
    },
    {
        "id": "F04180",
        "name": "Csepel, Horgásztanya",
        "lat": "47.388058",
        "lon": "19.103502",
        "parent": "CS009369"
    },
    {
        "id": "F04181",
        "name": "Csepel-Királyerdő",
        "lat": "47.397913",
        "lon": "19.106556",
        "parent": ""
    },
    {
        "id": "F04182",
        "name": "Károli Gáspár utca",
        "lat": "47.429310",
        "lon": "19.072354",
        "parent": ""
    },
    {
        "id": "F04183",
        "name": "Karácsony Sándor utca",
        "lat": "47.426838",
        "lon": "19.067250",
        "parent": "CSF04183"
    },
    {
        "id": "F04184",
        "name": "Karácsony Sándor utca",
        "lat": "47.426766",
        "lon": "19.067316",
        "parent": "CSF04183"
    },
    {
        "id": "F04185",
        "name": "II. Rákóczi Ferenc út",
        "lat": "47.422934",
        "lon": "19.067593",
        "parent": ""
    },
    {
        "id": "F04186",
        "name": "Kolozsvári utca",
        "lat": "47.426179",
        "lon": "19.078185",
        "parent": ""
    },
    {
        "id": "F04187",
        "name": "Katona József utca",
        "lat": "47.426395",
        "lon": "19.078715",
        "parent": ""
    },
    {
        "id": "F04188",
        "name": "Komáromi utca",
        "lat": "47.426367",
        "lon": "19.081936",
        "parent": "CSF04188"
    },
    {
        "id": "F04189",
        "name": "Komáromi utca",
        "lat": "47.426231",
        "lon": "19.083169",
        "parent": "CSF04188"
    },
    {
        "id": "F04190",
        "name": "Kossuth Lajos utca",
        "lat": "47.423077",
        "lon": "19.069767",
        "parent": ""
    },
    {
        "id": "F04191",
        "name": "Széchenyi István utca",
        "lat": "47.424022",
        "lon": "19.069728",
        "parent": "CSF04191"
    },
    {
        "id": "F04192",
        "name": "Széchenyi István utca",
        "lat": "47.423617",
        "lon": "19.069754",
        "parent": "CSF04191"
    },
    {
        "id": "F04193",
        "name": "Szent István út",
        "lat": "47.422133",
        "lon": "19.068508",
        "parent": "CSF04191"
    },
    {
        "id": "F04194",
        "name": "Görgey Artúr tér",
        "lat": "47.422960",
        "lon": "19.072762",
        "parent": "CSF04195"
    },
    {
        "id": "F04195",
        "name": "Görgey Artúr tér",
        "lat": "47.424021",
        "lon": "19.071941",
        "parent": "CSF04195"
    },
    {
        "id": "F04196",
        "name": "Bajcsy-Zsilinszky út",
        "lat": "47.422780",
        "lon": "19.074684",
        "parent": "CSF04197"
    },
    {
        "id": "F04197",
        "name": "Bajcsy-Zsilinszky út",
        "lat": "47.422851",
        "lon": "19.075307",
        "parent": "CSF04197"
    },
    {
        "id": "F04198",
        "name": "Kikötő utca",
        "lat": "47.422434",
        "lon": "19.087089",
        "parent": "CSF04198"
    },
    {
        "id": "F04199",
        "name": "Kikötő utca",
        "lat": "47.422317",
        "lon": "19.088083",
        "parent": "CSF04198"
    },
    {
        "id": "F04200",
        "name": "Völgy utca",
        "lat": "47.418769",
        "lon": "19.066836",
        "parent": "CSF04291"
    },
    {
        "id": "F04201",
        "name": "Kölcsey utca",
        "lat": "47.412023",
        "lon": "19.068040",
        "parent": "CSF04202"
    },
    {
        "id": "F04202",
        "name": "Kölcsey utca (Erdősor utca)",
        "lat": "47.412671",
        "lon": "19.067152",
        "parent": "CSF04202"
    },
    {
        "id": "F04203",
        "name": "Sporttelep",
        "lat": "47.420594",
        "lon": "19.072735",
        "parent": "CSF04203"
    },
    {
        "id": "F04204",
        "name": "Sporttelep",
        "lat": "47.420108",
        "lon": "19.073344",
        "parent": "CSF04203"
    },
    {
        "id": "F04205",
        "name": "Béke tér",
        "lat": "47.417861",
        "lon": "19.068824",
        "parent": ""
    },
    {
        "id": "F04206",
        "name": "Bánya utca",
        "lat": "47.417420",
        "lon": "19.069500",
        "parent": ""
    },
    {
        "id": "F04207",
        "name": "Kölcsey utca",
        "lat": "47.416367",
        "lon": "19.071646",
        "parent": "CSF04208"
    },
    {
        "id": "F04208",
        "name": "Völgy utca",
        "lat": "47.416583",
        "lon": "19.072203",
        "parent": "CSF04208"
    },
    {
        "id": "F04209",
        "name": "Kölcsey utca",
        "lat": "47.416025",
        "lon": "19.072494",
        "parent": "CSF04208"
    },
    {
        "id": "F04210",
        "name": "Völgy utca",
        "lat": "47.415503",
        "lon": "19.071619",
        "parent": "CSF04208"
    },
    {
        "id": "F04211",
        "name": "Dr. Koncz János tér",
        "lat": "47.413624",
        "lon": "19.069074",
        "parent": "CSF04212"
    },
    {
        "id": "F04212",
        "name": "Dr. Koncz János tér",
        "lat": "47.414039",
        "lon": "19.069783",
        "parent": "CSF04212"
    },
    {
        "id": "F04213",
        "name": "Szebeni utca",
        "lat": "47.420088",
        "lon": "19.083576",
        "parent": ""
    },
    {
        "id": "F04214",
        "name": "Kassai utca",
        "lat": "47.420241",
        "lon": "19.083708",
        "parent": ""
    },
    {
        "id": "F04215",
        "name": "Kikötő utca",
        "lat": "47.419709",
        "lon": "19.086186",
        "parent": "CSF04216"
    },
    {
        "id": "F04216",
        "name": "Kikötő utca",
        "lat": "47.419772",
        "lon": "19.086836",
        "parent": "CSF04216"
    },
    {
        "id": "F04217",
        "name": "Szebeni utca",
        "lat": "47.419213",
        "lon": "19.091142",
        "parent": ""
    },
    {
        "id": "F04218",
        "name": "Késmárki utca",
        "lat": "47.418808",
        "lon": "19.091301",
        "parent": ""
    },
    {
        "id": "F04219",
        "name": "Strandfürdő",
        "lat": "47.408073",
        "lon": "19.099746",
        "parent": "CSF04219"
    },
    {
        "id": "F04220",
        "name": "Strandfürdő",
        "lat": "47.407452",
        "lon": "19.100156",
        "parent": "CSF04219"
    },
    {
        "id": "F04221",
        "name": "Csepel csónakház",
        "lat": "47.404655",
        "lon": "19.101107",
        "parent": "CSF04221"
    },
    {
        "id": "F04222",
        "name": "Csepel csónakház",
        "lat": "47.404025",
        "lon": "19.101491",
        "parent": "CSF04221"
    },
    {
        "id": "F04223",
        "name": "Ladik utca",
        "lat": "47.401461",
        "lon": "19.102866",
        "parent": "CSF04223"
    },
    {
        "id": "F04224",
        "name": "Ladik utca",
        "lat": "47.401289",
        "lon": "19.103184",
        "parent": "CSF04223"
    },
    {
        "id": "F04226",
        "name": "Csepel, Soroksári rév",
        "lat": "47.398248",
        "lon": "19.105923",
        "parent": ""
    },
    {
        "id": "F04227",
        "name": "Csepel, Soroksári rév",
        "lat": "47.397744",
        "lon": "19.106545",
        "parent": ""
    },
    {
        "id": "F04228",
        "name": "Csepel, Hollandi út",
        "lat": "47.392032",
        "lon": "19.105771",
        "parent": "CSF04229"
    },
    {
        "id": "F04229",
        "name": "Csepel, Hollandi út",
        "lat": "47.392158",
        "lon": "19.105387",
        "parent": "CSF04229"
    },
    {
        "id": "F04230",
        "name": "Szent István út",
        "lat": "47.391429",
        "lon": "19.106181",
        "parent": "CSF04231"
    },
    {
        "id": "F04231",
        "name": "Szent István út",
        "lat": "47.391825",
        "lon": "19.106340",
        "parent": "CSF04231"
    },
    {
        "id": "F04232",
        "name": "Erdősor utca",
        "lat": "47.410061",
        "lon": "19.072372",
        "parent": ""
    },
    {
        "id": "F04233",
        "name": "Csikó sétány",
        "lat": "47.409189",
        "lon": "19.072981",
        "parent": ""
    },
    {
        "id": "F04234",
        "name": "Csille utca",
        "lat": "47.406651",
        "lon": "19.077220",
        "parent": ""
    },
    {
        "id": "F04235",
        "name": "Szent László utcai lakótelep",
        "lat": "47.406848",
        "lon": "19.080228",
        "parent": ""
    },
    {
        "id": "F04236",
        "name": "Fémmű utca",
        "lat": "47.408845",
        "lon": "19.078308",
        "parent": ""
    },
    {
        "id": "F04237",
        "name": "Posztó utca",
        "lat": "47.410861",
        "lon": "19.076149",
        "parent": ""
    },
    {
        "id": "F04238",
        "name": "Festő utca",
        "lat": "47.413541",
        "lon": "19.076800",
        "parent": ""
    },
    {
        "id": "F04239",
        "name": "Martinász utca",
        "lat": "47.413307",
        "lon": "19.077436",
        "parent": ""
    },
    {
        "id": "F04240",
        "name": "Varrógép utca",
        "lat": "47.408167",
        "lon": "19.082149",
        "parent": "CSF04240"
    },
    {
        "id": "F04241",
        "name": "Varrógép utca",
        "lat": "47.408104",
        "lon": "19.082016",
        "parent": "CSF04240"
    },
    {
        "id": "F04242",
        "name": "Tihanyi utca",
        "lat": "47.404697",
        "lon": "19.085434",
        "parent": "CSF04243"
    },
    {
        "id": "F04243",
        "name": "Tihanyi utca",
        "lat": "47.405155",
        "lon": "19.085275",
        "parent": "CSF04243"
    },
    {
        "id": "F04244",
        "name": "Fátra utca",
        "lat": "47.401845",
        "lon": "19.087180",
        "parent": "CSF04244"
    },
    {
        "id": "F04245",
        "name": "Fátra utca",
        "lat": "47.401485",
        "lon": "19.087617",
        "parent": "CSF04244"
    },
    {
        "id": "F04247",
        "name": "Csepel, Királyerdő út",
        "lat": "47.390669",
        "lon": "19.096418",
        "parent": ""
    },
    {
        "id": "F04248",
        "name": "Martinász utca",
        "lat": "47.415465",
        "lon": "19.079729",
        "parent": ""
    },
    {
        "id": "F04249",
        "name": "Nyárfás utca",
        "lat": "47.415267",
        "lon": "19.080286",
        "parent": ""
    },
    {
        "id": "F04250",
        "name": "Borz út",
        "lat": "47.413107",
        "lon": "19.085638",
        "parent": ""
    },
    {
        "id": "F04251",
        "name": "Orgonás utca",
        "lat": "47.413017",
        "lon": "19.085956",
        "parent": ""
    },
    {
        "id": "F04252",
        "name": "Pinty utca",
        "lat": "47.411406",
        "lon": "19.087956",
        "parent": ""
    },
    {
        "id": "F04253",
        "name": "Tölgyes út",
        "lat": "47.410623",
        "lon": "19.088843",
        "parent": ""
    },
    {
        "id": "F04254",
        "name": "Szarka utca",
        "lat": "47.408140",
        "lon": "19.090643",
        "parent": "CSF04254"
    },
    {
        "id": "F04255",
        "name": "Iszalag utca",
        "lat": "47.407807",
        "lon": "19.090762",
        "parent": "CSF04254"
    },
    {
        "id": "F04256",
        "name": "Repkény út",
        "lat": "47.405882",
        "lon": "19.090615",
        "parent": "CSF04256"
    },
    {
        "id": "F04257",
        "name": "Repkény út",
        "lat": "47.405010",
        "lon": "19.090760",
        "parent": "CSF04256"
    },
    {
        "id": "F04258",
        "name": "Királyerdei Művelődési Ház",
        "lat": "47.401311",
        "lon": "19.094082",
        "parent": "CSF04258"
    },
    {
        "id": "F04259",
        "name": "Királyerdei Művelődési Ház",
        "lat": "47.401068",
        "lon": "19.094678",
        "parent": "CSF04258"
    },
    {
        "id": "F04260",
        "name": "Árnyas utca",
        "lat": "47.398323",
        "lon": "19.098385",
        "parent": ""
    },
    {
        "id": "F04261",
        "name": "Denevér utca",
        "lat": "47.397190",
        "lon": "19.099073",
        "parent": ""
    },
    {
        "id": "F04262",
        "name": "Sólyom utca",
        "lat": "47.395327",
        "lon": "19.100436",
        "parent": "CSF04263"
    },
    {
        "id": "F04263",
        "name": "Sólyom utca",
        "lat": "47.395624",
        "lon": "19.100078",
        "parent": "CSF04263"
    },
    {
        "id": "F04264",
        "name": "Sáska utca",
        "lat": "47.394418",
        "lon": "19.101733",
        "parent": ""
    },
    {
        "id": "F04265",
        "name": "Hárosi Csárda",
        "lat": "47.388582",
        "lon": "19.028163",
        "parent": "CSF04265"
    },
    {
        "id": "F04266",
        "name": "Hárosi Csárda",
        "lat": "47.387853",
        "lon": "19.026653",
        "parent": "CSF04265"
    },
    {
        "id": "F04267",
        "name": "Karácsony Sándor utca H",
        "lat": "47.426208",
        "lon": "19.067091",
        "parent": "CSF04177"
    },
    {
        "id": "F04268",
        "name": "Karácsony Sándor utca H",
        "lat": "47.426946",
        "lon": "19.066389",
        "parent": "CSF04177"
    },
    {
        "id": "F04269",
        "name": "Mansfeld Péter utca",
        "lat": "47.425624",
        "lon": "19.063008",
        "parent": ""
    },
    {
        "id": "F04272",
        "name": "Csepel",
        "lat": "47.421171",
        "lon": "19.065803",
        "parent": ""
    },
    {
        "id": "F04273",
        "name": "Vas Gereben utca",
        "lat": "47.413319",
        "lon": "19.058579",
        "parent": "CSF04273"
    },
    {
        "id": "F04274",
        "name": "Vas Gereben utca",
        "lat": "47.412168",
        "lon": "19.057373",
        "parent": "CSF04273"
    },
    {
        "id": "F04276",
        "name": "Csepel, Csillagtelep",
        "lat": "47.410162",
        "lon": "19.060460",
        "parent": "CSF04277"
    },
    {
        "id": "F04277",
        "name": "Csepel, Csillagtelep",
        "lat": "47.410414",
        "lon": "19.060592",
        "parent": "CSF04277"
    },
    {
        "id": "F04278",
        "name": "Karácsony Sándor utca",
        "lat": "47.425965",
        "lon": "19.069914",
        "parent": "CSF04279"
    },
    {
        "id": "F04279",
        "name": "Karácsony Sándor utca",
        "lat": "47.427413",
        "lon": "19.070193",
        "parent": "CSF04279"
    },
    {
        "id": "F04280",
        "name": "Kölcsey utca",
        "lat": "47.409973",
        "lon": "19.062182",
        "parent": ""
    },
    {
        "id": "F04281",
        "name": "Szabadság utca",
        "lat": "47.410108",
        "lon": "19.062885",
        "parent": ""
    },
    {
        "id": "F04282",
        "name": "Jupiter utca",
        "lat": "47.408345",
        "lon": "19.062222",
        "parent": ""
    },
    {
        "id": "F04283",
        "name": "Tejút utca",
        "lat": "47.410648",
        "lon": "19.056167",
        "parent": "CSF04283"
    },
    {
        "id": "F04284",
        "name": "Tejút utca",
        "lat": "47.410027",
        "lon": "19.055531",
        "parent": "CSF04283"
    },
    {
        "id": "F04285",
        "name": "Csepeli temető",
        "lat": "47.405764",
        "lon": "19.053264",
        "parent": "CSF04286"
    },
    {
        "id": "F04286",
        "name": "Csepeli temető",
        "lat": "47.405989",
        "lon": "19.053569",
        "parent": "CSF04286"
    },
    {
        "id": "F04287",
        "name": "Hárosi iskola",
        "lat": "47.399791",
        "lon": "19.050945",
        "parent": "CSF04287"
    },
    {
        "id": "F04288",
        "name": "Hárosi iskola",
        "lat": "47.399780",
        "lon": "19.051145",
        "parent": "CSF04287"
    },
    {
        "id": "F04289",
        "name": "Almafa utca",
        "lat": "47.393818",
        "lon": "19.040255",
        "parent": "CSF04289"
    },
    {
        "id": "F04290",
        "name": "Almafa utca",
        "lat": "47.393764",
        "lon": "19.039911",
        "parent": "CSF04289"
    },
    {
        "id": "F04291",
        "name": "Kossuth Lajos utca (Völgy utca)",
        "lat": "47.419111",
        "lon": "19.066346",
        "parent": "CSF04291"
    },
    {
        "id": "F04292",
        "name": "Völgy utca",
        "lat": "47.419048",
        "lon": "19.065511",
        "parent": "CSF04291"
    },
    {
        "id": "F04293",
        "name": "Völgy utca",
        "lat": "47.419066",
        "lon": "19.065710",
        "parent": "CSF04291"
    },
    {
        "id": "F04294",
        "name": "Csepel H",
        "lat": "47.421819",
        "lon": "19.065777",
        "parent": "CSF04294"
    },
    {
        "id": "F04295",
        "name": "Deák tér",
        "lat": "47.426414",
        "lon": "19.072247",
        "parent": "CSF04296"
    },
    {
        "id": "F04296",
        "name": "Deák tér",
        "lat": "47.426963",
        "lon": "19.072154",
        "parent": "CSF04296"
    },
    {
        "id": "F04297",
        "name": "Csepeli híd",
        "lat": "47.460577",
        "lon": "19.071904",
        "parent": "CSF04298"
    },
    {
        "id": "F04298",
        "name": "Csepeli híd",
        "lat": "47.460676",
        "lon": "19.072249",
        "parent": "CSF04298"
    },
    {
        "id": "F04299",
        "name": "Szállító utca 6.",
        "lat": "47.441972",
        "lon": "19.083882",
        "parent": "CSF04357"
    },
    {
        "id": "F04300",
        "name": "Közterületfenntartó Zrt.",
        "lat": "47.441942",
        "lon": "19.076655",
        "parent": "CSF04301"
    },
    {
        "id": "F04301",
        "name": "Közterületfenntartó Zrt.",
        "lat": "47.441965",
        "lon": "19.076881",
        "parent": "CSF04301"
    },
    {
        "id": "F04302",
        "name": "Szállító utca",
        "lat": "47.441726",
        "lon": "19.077795",
        "parent": "CSF04302"
    },
    {
        "id": "F04303",
        "name": "Szállító utca",
        "lat": "47.441690",
        "lon": "19.077795",
        "parent": "CSF04302"
    },
    {
        "id": "F04306",
        "name": "Papírgyár",
        "lat": "47.434723",
        "lon": "19.081451",
        "parent": "CSF04307"
    },
    {
        "id": "F04307",
        "name": "Papírgyár",
        "lat": "47.435002",
        "lon": "19.083148",
        "parent": "CSF04307"
    },
    {
        "id": "F04311",
        "name": "Corvin-csomópont",
        "lat": "47.438872",
        "lon": "19.071616",
        "parent": ""
    },
    {
        "id": "F04312",
        "name": "Corvin-csomópont",
        "lat": "47.437928",
        "lon": "19.071603",
        "parent": ""
    },
    {
        "id": "F04314",
        "name": "Csepel, Kossuth Lajos utca",
        "lat": "47.434690",
        "lon": "19.070620",
        "parent": "CS071216"
    },
    {
        "id": "F04315",
        "name": "Ady Endre út (Kossuth Lajos utca)",
        "lat": "47.434294",
        "lon": "19.070739",
        "parent": "CS071216"
    },
    {
        "id": "F04316",
        "name": "Védgát utca",
        "lat": "47.435039",
        "lon": "19.076387",
        "parent": "CSF04316"
    },
    {
        "id": "F04317",
        "name": "Védgát utca",
        "lat": "47.434931",
        "lon": "19.076679",
        "parent": "CSF04316"
    },
    {
        "id": "F04318",
        "name": "Szent Imre tér H",
        "lat": "47.429802",
        "lon": "19.067383",
        "parent": "CS041095"
    },
    {
        "id": "F04319",
        "name": "Szent Imre tér",
        "lat": "47.431929",
        "lon": "19.067756",
        "parent": "CSF04319"
    },
    {
        "id": "F04320",
        "name": "Szent Imre tér H",
        "lat": "47.431164",
        "lon": "19.067835",
        "parent": "CS041095"
    },
    {
        "id": "F04321",
        "name": "Kiss János altábornagy utca",
        "lat": "47.431883",
        "lon": "19.071454",
        "parent": ""
    },
    {
        "id": "F04322",
        "name": "Szent Imre tér",
        "lat": "47.430715",
        "lon": "19.067556",
        "parent": "CSF04319"
    },
    {
        "id": "F04323",
        "name": "Szent Imre tér",
        "lat": "47.431227",
        "lon": "19.070327",
        "parent": "CS041095"
    },
    {
        "id": "F04324",
        "name": "Szent Imre tér",
        "lat": "47.431236",
        "lon": "19.070486",
        "parent": "CS041095"
    },
    {
        "id": "F04325",
        "name": "Kossuth Lajos utca",
        "lat": "47.430345",
        "lon": "19.071215",
        "parent": ""
    },
    {
        "id": "F04327",
        "name": "Csepel, Szent Imre tér",
        "lat": "47.430795",
        "lon": "19.070526",
        "parent": "CS041095"
    },
    {
        "id": "F04328",
        "name": "Csepel, Szent Imre tér",
        "lat": "47.430795",
        "lon": "19.070645",
        "parent": "CS041095"
    },
    {
        "id": "F04329",
        "name": "Csepel, Szent Imre tér",
        "lat": "47.430795",
        "lon": "19.070751",
        "parent": "CS041095"
    },
    {
        "id": "F04330",
        "name": "Csepel, Szent Imre tér",
        "lat": "47.430795",
        "lon": "19.070870",
        "parent": "CS041095"
    },
    {
        "id": "F04332",
        "name": "Csepel, Szent Imre tér",
        "lat": "47.430795",
        "lon": "19.070990",
        "parent": "CS041095"
    },
    {
        "id": "F04333",
        "name": "Csepel, Szent Imre tér",
        "lat": "47.430795",
        "lon": "19.071096",
        "parent": "CS041095"
    },
    {
        "id": "F04334",
        "name": "Iskola tér",
        "lat": "47.411511",
        "lon": "19.065522",
        "parent": "CSF04334"
    },
    {
        "id": "F04335",
        "name": "Iskola tér",
        "lat": "47.411340",
        "lon": "19.065416",
        "parent": "CSF04334"
    },
    {
        "id": "F04336",
        "name": "Csepel H",
        "lat": "47.421585",
        "lon": "19.065737",
        "parent": "CSF04294"
    },
    {
        "id": "F04337",
        "name": "Rákóczi tér",
        "lat": "47.422661",
        "lon": "19.080489",
        "parent": "CSF04337"
    },
    {
        "id": "F04338",
        "name": "Rákóczi tér",
        "lat": "47.422589",
        "lon": "19.080105",
        "parent": "CSF04337"
    },
    {
        "id": "F04339",
        "name": "Csepeli Mátyás utca",
        "lat": "47.417868",
        "lon": "19.076351",
        "parent": ""
    },
    {
        "id": "F04340",
        "name": "Cseh Mihály utca",
        "lat": "47.417598",
        "lon": "19.076868",
        "parent": ""
    },
    {
        "id": "F04341",
        "name": "Hollandi csárda",
        "lat": "47.411969",
        "lon": "19.097828",
        "parent": "CSF04342"
    },
    {
        "id": "F04342",
        "name": "Hollandi csárda",
        "lat": "47.412293",
        "lon": "19.097484",
        "parent": "CSF04342"
    },
    {
        "id": "F04343",
        "name": "Uzsoki utca",
        "lat": "47.395771",
        "lon": "19.092117",
        "parent": "CSF04343"
    },
    {
        "id": "F04344",
        "name": "Uzsoki utca",
        "lat": "47.395535",
        "lon": "19.092446",
        "parent": "CSF04343"
    },
    {
        "id": "F04345",
        "name": "Csorbatói utca",
        "lat": "47.393342",
        "lon": "19.094062",
        "parent": "CSF04345"
    },
    {
        "id": "F04346",
        "name": "Csorbatói utca",
        "lat": "47.393171",
        "lon": "19.094367",
        "parent": "CSF04345"
    },
    {
        "id": "F04347",
        "name": "Olt utca",
        "lat": "47.398498",
        "lon": "19.089894",
        "parent": ""
    },
    {
        "id": "F04348",
        "name": "Orsova utca",
        "lat": "47.398147",
        "lon": "19.090331",
        "parent": ""
    },
    {
        "id": "F04349",
        "name": "Erdősor utca",
        "lat": "47.416674",
        "lon": "19.061442",
        "parent": "CSF04350"
    },
    {
        "id": "F04350",
        "name": "Erdősor utca",
        "lat": "47.416872",
        "lon": "19.061773",
        "parent": "CSF04350"
    },
    {
        "id": "F04351",
        "name": "Szilvafa utca",
        "lat": "47.395546",
        "lon": "19.043553",
        "parent": "CSF04351"
    },
    {
        "id": "F04352",
        "name": "Szilvafa utca",
        "lat": "47.395168",
        "lon": "19.043037",
        "parent": "CSF04351"
    },
    {
        "id": "F04353",
        "name": "Vízművek lakótelep",
        "lat": "47.391542",
        "lon": "19.035738",
        "parent": "CSF04353"
    },
    {
        "id": "F04354",
        "name": "Vízművek lakótelep",
        "lat": "47.391254",
        "lon": "19.035381",
        "parent": "CSF04353"
    },
    {
        "id": "F04355",
        "name": "Vámhivatal",
        "lat": "47.441964",
        "lon": "19.080395",
        "parent": "CSF04355"
    },
    {
        "id": "F04356",
        "name": "Vámhivatal",
        "lat": "47.441964",
        "lon": "19.080647",
        "parent": "CSF04355"
    },
    {
        "id": "F04357",
        "name": "Szállító utca 6.",
        "lat": "47.441972",
        "lon": "19.083630",
        "parent": "CSF04357"
    },
    {
        "id": "F04358",
        "name": "Szabadkikötő H",
        "lat": "47.444845",
        "lon": "19.071804",
        "parent": "CSF04358"
    },
    {
        "id": "F04359",
        "name": "Szabadkikötő H",
        "lat": "47.444593",
        "lon": "19.071950",
        "parent": "CSF04358"
    },
    {
        "id": "F04360",
        "name": "Technikus utca",
        "lat": "47.414479",
        "lon": "19.064079",
        "parent": "CSF04361"
    },
    {
        "id": "F04361",
        "name": "Technikus utca",
        "lat": "47.415325",
        "lon": "19.062992",
        "parent": "CSF04361"
    },
    {
        "id": "F04362",
        "name": "Határ utca",
        "lat": "47.416270",
        "lon": "19.093300",
        "parent": "CSF04363"
    },
    {
        "id": "F04363",
        "name": "Határ utca",
        "lat": "47.416666",
        "lon": "19.092863",
        "parent": "CSF04363"
    },
    {
        "id": "F04364",
        "name": "Csepel, Határ utca",
        "lat": "47.416100",
        "lon": "19.093128",
        "parent": "CSF04363"
    },
    {
        "id": "F04366",
        "name": "Erdősor utca",
        "lat": "47.416530",
        "lon": "19.062264",
        "parent": "CSF04350"
    },
    {
        "id": "F04367",
        "name": "Kossuth Lajos utca",
        "lat": "47.416953",
        "lon": "19.062979",
        "parent": ""
    },
    {
        "id": "F04368",
        "name": "Szabadkikötő",
        "lat": "47.444008",
        "lon": "19.071592",
        "parent": "CSF04369"
    },
    {
        "id": "F04369",
        "name": "Szabadkikötő",
        "lat": "47.444944",
        "lon": "19.071632",
        "parent": "CSF04369"
    },
    {
        "id": "F04370",
        "name": "Tordai út",
        "lat": "47.440623",
        "lon": "19.012578",
        "parent": "CSF04370"
    },
    {
        "id": "F04371",
        "name": "Tordai út",
        "lat": "47.439688",
        "lon": "19.012764",
        "parent": "CSF04370"
    },
    {
        "id": "F04372",
        "name": "Szabina út",
        "lat": "47.436963",
        "lon": "19.013972",
        "parent": "CS061286"
    },
    {
        "id": "F04373",
        "name": "Szabina út",
        "lat": "47.436828",
        "lon": "19.014118",
        "parent": "CS061286"
    },
    {
        "id": "F04374",
        "name": "Lomnici utca",
        "lat": "47.436433",
        "lon": "19.020124",
        "parent": "CS050279"
    },
    {
        "id": "F04375",
        "name": "Pék utca",
        "lat": "47.442307",
        "lon": "19.018490",
        "parent": "CSF04376"
    },
    {
        "id": "F04376",
        "name": "Pék utca",
        "lat": "47.442406",
        "lon": "19.018066",
        "parent": "CSF04376"
    },
    {
        "id": "F04377",
        "name": "Rózsavölgy felső",
        "lat": "47.441067",
        "lon": "19.023065",
        "parent": "CS008102"
    },
    {
        "id": "F04378",
        "name": "Rózsavölgy felső",
        "lat": "47.441085",
        "lon": "19.022879",
        "parent": "CS008102"
    },
    {
        "id": "F04379",
        "name": "Rózsavölgy alsó",
        "lat": "47.438414",
        "lon": "19.030358",
        "parent": "CSF04379"
    },
    {
        "id": "F04380",
        "name": "Rózsavölgy alsó",
        "lat": "47.438244",
        "lon": "19.030703",
        "parent": "CSF04379"
    },
    {
        "id": "F04381",
        "name": "Leányka utcai lakótelep",
        "lat": "47.432272",
        "lon": "19.037227",
        "parent": "CSF04383"
    },
    {
        "id": "F04382",
        "name": "Leányka utcai lakótelep",
        "lat": "47.432533",
        "lon": "19.037253",
        "parent": "CSF04383"
    },
    {
        "id": "F04383",
        "name": "Leányka utcai lakótelep",
        "lat": "47.433198",
        "lon": "19.036948",
        "parent": "CSF04383"
    },
    {
        "id": "F04384",
        "name": "Leányka utcai lakótelep",
        "lat": "47.432461",
        "lon": "19.037426",
        "parent": "CSF04383"
    },
    {
        "id": "F04389",
        "name": "Balatoni út \/ Dózsa György út",
        "lat": "47.419229",
        "lon": "18.983542",
        "parent": "CSF04390"
    },
    {
        "id": "F04390",
        "name": "Balatoni út \/ Dózsa György út",
        "lat": "47.419409",
        "lon": "18.983436",
        "parent": "CSF04390"
    },
    {
        "id": "F04391",
        "name": "Dózsa György út \/ Kamaraerdei út",
        "lat": "47.422256",
        "lon": "18.975904",
        "parent": "CSF04392"
    },
    {
        "id": "F04392",
        "name": "Dózsa György út \/ Kamaraerdei út",
        "lat": "47.422310",
        "lon": "18.976010",
        "parent": "CSF04392"
    },
    {
        "id": "F04393",
        "name": "Mechanikai Művek",
        "lat": "47.425958",
        "lon": "18.969073",
        "parent": ""
    },
    {
        "id": "F04394",
        "name": "Memento Park",
        "lat": "47.425939",
        "lon": "19.001454",
        "parent": "CSF04394"
    },
    {
        "id": "F04395",
        "name": "Jégmadár utca",
        "lat": "47.430627",
        "lon": "19.005493",
        "parent": "CS062513"
    },
    {
        "id": "F04396",
        "name": "Savoyai Jenő tér",
        "lat": "47.429873",
        "lon": "19.037777",
        "parent": "CS007930"
    },
    {
        "id": "F04397",
        "name": "Savoyai Jenő tér",
        "lat": "47.429618",
        "lon": "19.037850",
        "parent": "CS007930"
    },
    {
        "id": "F04398",
        "name": "Savoyai Jenő tér",
        "lat": "47.429600",
        "lon": "19.037771",
        "parent": "CS007930"
    },
    {
        "id": "F04400",
        "name": "Savoyai Jenő tér",
        "lat": "47.428876",
        "lon": "19.037256",
        "parent": "CS007930"
    },
    {
        "id": "F04402",
        "name": "Savoyai Jenő tér",
        "lat": "47.429074",
        "lon": "19.037574",
        "parent": "CS007930"
    },
    {
        "id": "F04403",
        "name": "Városház tér",
        "lat": "47.426493",
        "lon": "19.038277",
        "parent": "CSF04405"
    },
    {
        "id": "F04404",
        "name": "Városház tér",
        "lat": "47.426380",
        "lon": "19.039508",
        "parent": "CSF04405"
    },
    {
        "id": "F04405",
        "name": "Városház tér",
        "lat": "47.427087",
        "lon": "19.039165",
        "parent": "CSF04405"
    },
    {
        "id": "F04406",
        "name": "Városház tér",
        "lat": "47.426709",
        "lon": "19.039244",
        "parent": "CSF04405"
    },
    {
        "id": "F04407",
        "name": "Tóth József utca",
        "lat": "47.421550",
        "lon": "19.041563",
        "parent": "CSF04408"
    },
    {
        "id": "F04408",
        "name": "Tóth József utca",
        "lat": "47.421798",
        "lon": "19.041087",
        "parent": "CSF04408"
    },
    {
        "id": "F04409",
        "name": "Tóth József utca",
        "lat": "47.421226",
        "lon": "19.040834",
        "parent": "CSF04408"
    },
    {
        "id": "F04410",
        "name": "Komló utca",
        "lat": "47.421672",
        "lon": "19.035786",
        "parent": "CSF04410"
    },
    {
        "id": "F04411",
        "name": "Kereszt utca",
        "lat": "47.422476",
        "lon": "19.035850",
        "parent": ""
    },
    {
        "id": "F04412",
        "name": "Budafoki temető",
        "lat": "47.423019",
        "lon": "19.034041",
        "parent": ""
    },
    {
        "id": "F04413",
        "name": "Mező utca",
        "lat": "47.421837",
        "lon": "19.032113",
        "parent": ""
    },
    {
        "id": "F04414",
        "name": "Víg utca (Sporttelep)",
        "lat": "47.422898",
        "lon": "19.029701",
        "parent": "CSF04415"
    },
    {
        "id": "F04415",
        "name": "Víg utca (Sporttelep)",
        "lat": "47.422943",
        "lon": "19.030337",
        "parent": "CSF04415"
    },
    {
        "id": "F04416",
        "name": "Lőcsei utca",
        "lat": "47.423860",
        "lon": "19.025048",
        "parent": "CSF04416"
    },
    {
        "id": "F04417",
        "name": "Lőcsei utca",
        "lat": "47.423833",
        "lon": "19.024412",
        "parent": "CSF04416"
    },
    {
        "id": "F04418",
        "name": "Árpád utca",
        "lat": "47.426018",
        "lon": "19.023218",
        "parent": "CSF04419"
    },
    {
        "id": "F04419",
        "name": "Árpád utca",
        "lat": "47.426648",
        "lon": "19.022807",
        "parent": "CSF04419"
    },
    {
        "id": "F04420",
        "name": "Arany János utca",
        "lat": "47.428393",
        "lon": "19.023880",
        "parent": ""
    },
    {
        "id": "F04421",
        "name": "Regényes utca",
        "lat": "47.429814",
        "lon": "19.021440",
        "parent": "CSF04421"
    },
    {
        "id": "F04422",
        "name": "Kiránduló utca",
        "lat": "47.427726",
        "lon": "19.020314",
        "parent": ""
    },
    {
        "id": "F04423",
        "name": "Arató utca",
        "lat": "47.424425",
        "lon": "19.020064",
        "parent": "CSF04423"
    },
    {
        "id": "F04424",
        "name": "Arató utca",
        "lat": "47.424425",
        "lon": "19.020555",
        "parent": "CSF04423"
    },
    {
        "id": "F04425",
        "name": "Kazinczy utca",
        "lat": "47.425054",
        "lon": "19.016114",
        "parent": "CSF04425"
    },
    {
        "id": "F04426",
        "name": "Kazinczy utca",
        "lat": "47.425027",
        "lon": "19.017055",
        "parent": "CSF04425"
    },
    {
        "id": "F04427",
        "name": "Karácsony utca",
        "lat": "47.425664",
        "lon": "19.012773",
        "parent": "CSF04427"
    },
    {
        "id": "F04428",
        "name": "Karácsony utca",
        "lat": "47.425664",
        "lon": "19.012243",
        "parent": "CSF04427"
    },
    {
        "id": "F04429",
        "name": "Liszt Ferenc út",
        "lat": "47.428218",
        "lon": "19.008451",
        "parent": "CSF04430"
    },
    {
        "id": "F04430",
        "name": "Liszt Ferenc út",
        "lat": "47.428532",
        "lon": "19.007933",
        "parent": "CSF04430"
    },
    {
        "id": "F04431",
        "name": "Háros utca",
        "lat": "47.411366",
        "lon": "19.026193",
        "parent": "CSF04432"
    },
    {
        "id": "F04432",
        "name": "Háros utca",
        "lat": "47.411461",
        "lon": "19.025931",
        "parent": "CSF04432"
    },
    {
        "id": "F04433",
        "name": "Háros vasútállomás",
        "lat": "47.412383",
        "lon": "19.032686",
        "parent": "CSF04434"
    },
    {
        "id": "F04434",
        "name": "Háros vasútállomás",
        "lat": "47.412461",
        "lon": "19.033775",
        "parent": "CSF04434"
    },
    {
        "id": "F04435",
        "name": "Vágóhíd utca",
        "lat": "47.414279",
        "lon": "19.038491",
        "parent": "CSF04436"
    },
    {
        "id": "F04436",
        "name": "Vágóhíd utca",
        "lat": "47.414431",
        "lon": "19.038478",
        "parent": "CSF04436"
    },
    {
        "id": "F04437",
        "name": "Brassói utca",
        "lat": "47.424492",
        "lon": "19.002688",
        "parent": "CSF04437"
    },
    {
        "id": "F04438",
        "name": "Brassói utca",
        "lat": "47.424393",
        "lon": "19.002608",
        "parent": "CSF04437"
    },
    {
        "id": "F04439",
        "name": "Aradi utca",
        "lat": "47.419038",
        "lon": "19.006739",
        "parent": "CSF04440"
    },
    {
        "id": "F04440",
        "name": "Aradi utca",
        "lat": "47.419092",
        "lon": "19.006606",
        "parent": "CSF04440"
    },
    {
        "id": "F04441",
        "name": "Nyél utca",
        "lat": "47.414526",
        "lon": "19.004128",
        "parent": "CSF04442"
    },
    {
        "id": "F04442",
        "name": "Nyél utca",
        "lat": "47.414886",
        "lon": "19.004194",
        "parent": "CSF04442"
    },
    {
        "id": "F04443",
        "name": "Park utca",
        "lat": "47.412359",
        "lon": "19.006806",
        "parent": "CSF04443"
    },
    {
        "id": "F04444",
        "name": "Park utca",
        "lat": "47.412314",
        "lon": "19.006488",
        "parent": "CSF04443"
    },
    {
        "id": "F04445",
        "name": "Aszály utca",
        "lat": "47.413547",
        "lon": "19.009840",
        "parent": "CSF04446"
    },
    {
        "id": "F04446",
        "name": "Aszály utca",
        "lat": "47.413745",
        "lon": "19.010754",
        "parent": "CSF04446"
    },
    {
        "id": "F04447",
        "name": "Őszibarack utca",
        "lat": "47.415356",
        "lon": "19.012476",
        "parent": "CSF04448"
    },
    {
        "id": "F04448",
        "name": "Őszibarack utca",
        "lat": "47.415599",
        "lon": "19.012860",
        "parent": "CSF04448"
    },
    {
        "id": "F04449",
        "name": "Rizling utca (Sportpálya)",
        "lat": "47.414718",
        "lon": "19.015643",
        "parent": "CSF04450"
    },
    {
        "id": "F04450",
        "name": "Rizling utca (Sportpálya)",
        "lat": "47.414889",
        "lon": "19.015630",
        "parent": "CSF04450"
    },
    {
        "id": "F04451",
        "name": "Tűztorony",
        "lat": "47.413172",
        "lon": "19.018003",
        "parent": "CSF04452"
    },
    {
        "id": "F04452",
        "name": "Tűztorony",
        "lat": "47.413361",
        "lon": "19.017592",
        "parent": "CSF04452"
    },
    {
        "id": "F04453",
        "name": "Jókai Mór utca",
        "lat": "47.410096",
        "lon": "19.020257",
        "parent": "CS007995"
    },
    {
        "id": "F04454",
        "name": "Jókai Mór utca",
        "lat": "47.410105",
        "lon": "19.020642",
        "parent": "CS007995"
    },
    {
        "id": "F04455",
        "name": "Lépcsős utca",
        "lat": "47.408359",
        "lon": "19.016455",
        "parent": "CSF04455"
    },
    {
        "id": "F04456",
        "name": "Lépcsős utca",
        "lat": "47.408179",
        "lon": "19.016018",
        "parent": "CSF04455"
    },
    {
        "id": "F04457",
        "name": "Budatétényi sorompó",
        "lat": "47.403158",
        "lon": "19.010179",
        "parent": "CSF04458"
    },
    {
        "id": "F04458",
        "name": "Budatétényi sorompó",
        "lat": "47.403797",
        "lon": "19.011066",
        "parent": "CSF04458"
    },
    {
        "id": "F04459",
        "name": "Tűzliliom utca",
        "lat": "47.404297",
        "lon": "19.006605",
        "parent": "CSF04459"
    },
    {
        "id": "F04460",
        "name": "Tűzliliom utca",
        "lat": "47.404117",
        "lon": "19.006631",
        "parent": "CSF04459"
    },
    {
        "id": "F04461",
        "name": "Rákóczi út",
        "lat": "47.405909",
        "lon": "19.005261",
        "parent": "CSF04461"
    },
    {
        "id": "F04462",
        "name": "Rákóczi út",
        "lat": "47.405411",
        "lon": "19.005570",
        "parent": "CSF04461"
    },
    {
        "id": "F04463",
        "name": "Terv utca",
        "lat": "47.408040",
        "lon": "19.002198",
        "parent": "CSF04463"
    },
    {
        "id": "F04464",
        "name": "Terv utca",
        "lat": "47.407770",
        "lon": "19.002477",
        "parent": "CSF04463"
    },
    {
        "id": "F04466",
        "name": "Dózsa György út",
        "lat": "47.399918",
        "lon": "19.005001",
        "parent": "CSF04466"
    },
    {
        "id": "F04467",
        "name": "Dózsa György út",
        "lat": "47.399576",
        "lon": "19.003875",
        "parent": "CSF04466"
    },
    {
        "id": "F04468",
        "name": "I. utca",
        "lat": "47.401348",
        "lon": "19.003807",
        "parent": "CSF04468"
    },
    {
        "id": "F04469",
        "name": "I. utca",
        "lat": "47.401336",
        "lon": "19.003600",
        "parent": "CSF04468"
    },
    {
        "id": "F04470",
        "name": "Szent László utca",
        "lat": "47.407057",
        "lon": "18.998211",
        "parent": "CSF04470"
    },
    {
        "id": "F04471",
        "name": "Szent László utca",
        "lat": "47.406833",
        "lon": "18.998278",
        "parent": "CSF04470"
    },
    {
        "id": "F04472",
        "name": "Bem tábornok utca",
        "lat": "47.409053",
        "lon": "18.996076",
        "parent": "CSF04473"
    },
    {
        "id": "F04473",
        "name": "Bem tábornok utca",
        "lat": "47.409215",
        "lon": "18.996089",
        "parent": "CSF04473"
    },
    {
        "id": "F04474",
        "name": "XIII. utca \/ Dózsa György út",
        "lat": "47.411921",
        "lon": "18.993052",
        "parent": "CSF04475"
    },
    {
        "id": "F04475",
        "name": "XIII. utca \/ Dózsa György út",
        "lat": "47.411984",
        "lon": "18.993317",
        "parent": "CSF04475"
    },
    {
        "id": "F04476",
        "name": "Baross Gábor-telep, Ispiláng utca",
        "lat": "47.416584",
        "lon": "19.001462",
        "parent": ""
    },
    {
        "id": "F04477",
        "name": "Damjanich utca",
        "lat": "47.402320",
        "lon": "18.990788",
        "parent": "CS008109"
    },
    {
        "id": "F04478",
        "name": "Barosstelep vasútállomás",
        "lat": "47.399552",
        "lon": "18.990839",
        "parent": "CS008110"
    },
    {
        "id": "F04479",
        "name": "Bartók Béla út",
        "lat": "47.394732",
        "lon": "18.992845",
        "parent": "CSF04480"
    },
    {
        "id": "F04480",
        "name": "Bartók Béla út",
        "lat": "47.395254",
        "lon": "18.993758",
        "parent": "CSF04480"
    },
    {
        "id": "F04481",
        "name": "Szerafin-villa",
        "lat": "47.407711",
        "lon": "18.962687",
        "parent": "CSF04482"
    },
    {
        "id": "F04482",
        "name": "Szerafin-villa",
        "lat": "47.407720",
        "lon": "18.962820",
        "parent": "CSF04482"
    },
    {
        "id": "F04483",
        "name": "Németh-villa",
        "lat": "47.404754",
        "lon": "18.966481",
        "parent": "CSF04484"
    },
    {
        "id": "F04484",
        "name": "Németh-villa",
        "lat": "47.404755",
        "lon": "18.966667",
        "parent": "CSF04484"
    },
    {
        "id": "F04485",
        "name": "Barackos út \/ Angeli utca",
        "lat": "47.401763",
        "lon": "18.971904",
        "parent": "CS008111"
    },
    {
        "id": "F04486",
        "name": "Barackos út \/ Angeli utca",
        "lat": "47.400775",
        "lon": "18.973933",
        "parent": "CS008111"
    },
    {
        "id": "F04487",
        "name": "Szakiskola utca",
        "lat": "47.405265",
        "lon": "18.975901",
        "parent": "CSF04487"
    },
    {
        "id": "F04488",
        "name": "Szilvafa utca",
        "lat": "47.405170",
        "lon": "18.983069",
        "parent": "CS008113"
    },
    {
        "id": "F04489",
        "name": "Mátyás király utca",
        "lat": "47.404283",
        "lon": "18.990648",
        "parent": "CS009447"
    },
    {
        "id": "F04490",
        "name": "Nagytétény-Diósd vasútállomás",
        "lat": "47.397608",
        "lon": "18.976553",
        "parent": "CSF04491"
    },
    {
        "id": "F04491",
        "name": "Nagytétény-Diósd vasútállomás",
        "lat": "47.397653",
        "lon": "18.976792",
        "parent": "CSF04491"
    },
    {
        "id": "F04492",
        "name": "Nagytétényi temető",
        "lat": "47.394598",
        "lon": "18.978498",
        "parent": "CSF04492"
    },
    {
        "id": "F04493",
        "name": "Nagytétényi temető",
        "lat": "47.394175",
        "lon": "18.978896",
        "parent": "CSF04492"
    },
    {
        "id": "F04494",
        "name": "Petőfi Sándor utca (Kastélymúzeum)",
        "lat": "47.393237",
        "lon": "18.989336",
        "parent": "CSF04495"
    },
    {
        "id": "F04495",
        "name": "Petőfi Sándor utca (Kastélymúzeum)",
        "lat": "47.393478",
        "lon": "18.989606",
        "parent": "CSF04495"
    },
    {
        "id": "F04496",
        "name": "Szabadság utca",
        "lat": "47.392494",
        "lon": "18.984084",
        "parent": "CSF04497"
    },
    {
        "id": "F04497",
        "name": "Szabadság utca",
        "lat": "47.392540",
        "lon": "18.984706",
        "parent": "CSF04497"
    },
    {
        "id": "F04498",
        "name": "Angeli utca \/ Nagytétényi út",
        "lat": "47.390957",
        "lon": "18.981695",
        "parent": "CSF04499"
    },
    {
        "id": "F04499",
        "name": "Angeli utca \/ Nagytétényi út",
        "lat": "47.390966",
        "lon": "18.981232",
        "parent": "CSF04499"
    },
    {
        "id": "F04501",
        "name": "Akó utca",
        "lat": "47.389596",
        "lon": "18.977856",
        "parent": "CSF04502"
    },
    {
        "id": "F04502",
        "name": "Akó utca",
        "lat": "47.389830",
        "lon": "18.978240",
        "parent": "CSF04502"
    },
    {
        "id": "F04503",
        "name": "Nagytétény, Erdélyi utca",
        "lat": "47.388271",
        "lon": "18.973023",
        "parent": "CSF04504"
    },
    {
        "id": "F04504",
        "name": "Nagytétény, Erdélyi utca",
        "lat": "47.388287",
        "lon": "18.972672",
        "parent": "CSF04504"
    },
    {
        "id": "F04505",
        "name": "Bányalég utca",
        "lat": "47.390279",
        "lon": "18.963086",
        "parent": "CSF04506"
    },
    {
        "id": "F04506",
        "name": "Bányalég utca",
        "lat": "47.390378",
        "lon": "18.963761",
        "parent": "CSF04506"
    },
    {
        "id": "F04507",
        "name": "Nagytétény, ipartelep",
        "lat": "47.388926",
        "lon": "18.958519",
        "parent": "CSF04507"
    },
    {
        "id": "F04508",
        "name": "Nagytétény, ipartelep",
        "lat": "47.388917",
        "lon": "18.958161",
        "parent": "CSF04507"
    },
    {
        "id": "F04509",
        "name": "Tenkes utca",
        "lat": "47.397388",
        "lon": "18.998710",
        "parent": "CSF04509"
    },
    {
        "id": "F04510",
        "name": "Tenkes utca",
        "lat": "47.396947",
        "lon": "18.998009",
        "parent": "CSF04509"
    },
    {
        "id": "F04511",
        "name": "Tátra utca",
        "lat": "47.403919",
        "lon": "19.001089",
        "parent": "CSF04511"
    },
    {
        "id": "F04512",
        "name": "Tátra utca",
        "lat": "47.403686",
        "lon": "19.001487",
        "parent": "CSF04511"
    },
    {
        "id": "F04513",
        "name": "XVI. utca",
        "lat": "47.413920",
        "lon": "18.996283",
        "parent": "CSF04513"
    },
    {
        "id": "F04514",
        "name": "XVI. utca",
        "lat": "47.413866",
        "lon": "18.996363",
        "parent": "CSF04513"
    },
    {
        "id": "F04515",
        "name": "Diósdi utca",
        "lat": "47.403434",
        "lon": "18.968802",
        "parent": "CSF04515"
    },
    {
        "id": "F04516",
        "name": "Diósdi utca",
        "lat": "47.403272",
        "lon": "18.969266",
        "parent": "CSF04515"
    },
    {
        "id": "F04517",
        "name": "DEXTER",
        "lat": "47.405176",
        "lon": "19.022261",
        "parent": ""
    },
    {
        "id": "F04521",
        "name": "Mátra utca",
        "lat": "47.400258",
        "lon": "18.999410",
        "parent": "CSF04521"
    },
    {
        "id": "F04523",
        "name": "Soroksár, központi raktárak",
        "lat": "47.378255",
        "lon": "19.130467",
        "parent": ""
    },
    {
        "id": "F04524",
        "name": "Dinnyehegyi út",
        "lat": "47.416013",
        "lon": "19.134408",
        "parent": "CSF04525"
    },
    {
        "id": "F04525",
        "name": "Dinnyehegyi út",
        "lat": "47.417137",
        "lon": "19.135828",
        "parent": "CSF04525"
    },
    {
        "id": "F04526",
        "name": "Soroksár, Molnár-sziget",
        "lat": "47.398251",
        "lon": "19.108609",
        "parent": ""
    },
    {
        "id": "F04527",
        "name": "Hold utca",
        "lat": "47.418368",
        "lon": "19.109139",
        "parent": ""
    },
    {
        "id": "F04528",
        "name": "Festékgyár",
        "lat": "47.417036",
        "lon": "19.109999",
        "parent": "CSF04528"
    },
    {
        "id": "F04529",
        "name": "Festékgyár",
        "lat": "47.416820",
        "lon": "19.110290",
        "parent": "CSF04528"
    },
    {
        "id": "F04530",
        "name": "Soroksár felső H",
        "lat": "47.410343",
        "lon": "19.111435",
        "parent": "CSF04530"
    },
    {
        "id": "F04531",
        "name": "Soroksár felső H",
        "lat": "47.410289",
        "lon": "19.111621",
        "parent": "CSF04530"
    },
    {
        "id": "F04532",
        "name": "Tárcsás utca",
        "lat": "47.406636",
        "lon": "19.114399",
        "parent": "CSF04532"
    },
    {
        "id": "F04533",
        "name": "Tárcsás utca",
        "lat": "47.406240",
        "lon": "19.114650",
        "parent": "CSF04532"
    },
    {
        "id": "F04534",
        "name": "Soroksár felső",
        "lat": "47.409938",
        "lon": "19.111832",
        "parent": "CSF04534"
    },
    {
        "id": "F04535",
        "name": "Soroksár felső",
        "lat": "47.409380",
        "lon": "19.112017",
        "parent": "CSF04534"
    },
    {
        "id": "F04536",
        "name": "Tárcsás utca",
        "lat": "47.405152",
        "lon": "19.112608",
        "parent": "CSF04532"
    },
    {
        "id": "F04537",
        "name": "Tárcsás utca",
        "lat": "47.405728",
        "lon": "19.112636",
        "parent": "CSF04532"
    },
    {
        "id": "F04538",
        "name": "Soroksár, Hősök tere H",
        "lat": "47.399790",
        "lon": "19.114496",
        "parent": "CSF04542"
    },
    {
        "id": "F04539",
        "name": "Soroksár, Hősök tere H",
        "lat": "47.398936",
        "lon": "19.114601",
        "parent": "CSF04542"
    },
    {
        "id": "F04540",
        "name": "Soroksár, Hősök tere",
        "lat": "47.399538",
        "lon": "19.114655",
        "parent": "CSF04540"
    },
    {
        "id": "F04541",
        "name": "Soroksár, Hősök tere",
        "lat": "47.399080",
        "lon": "19.114906",
        "parent": "CSF04540"
    },
    {
        "id": "F04542",
        "name": "Soroksár, Hősök tere H",
        "lat": "47.400176",
        "lon": "19.116511",
        "parent": "CSF04542"
    },
    {
        "id": "F04543",
        "name": "Soroksár, Hősök tere H",
        "lat": "47.399996",
        "lon": "19.116683",
        "parent": "CSF04542"
    },
    {
        "id": "F04544",
        "name": "Soroksár vasútállomás",
        "lat": "47.400947",
        "lon": "19.121294",
        "parent": "CSF04544"
    },
    {
        "id": "F04545",
        "name": "Soroksár vasútállomás",
        "lat": "47.400818",
        "lon": "19.121939",
        "parent": "CSF04544"
    },
    {
        "id": "F04546",
        "name": "Szent István utca",
        "lat": "47.391812",
        "lon": "19.114963",
        "parent": "CSF04546"
    },
    {
        "id": "F04547",
        "name": "Szent István utca",
        "lat": "47.391533",
        "lon": "19.114857",
        "parent": "CSF04546"
    },
    {
        "id": "F04548",
        "name": "Millenniumtelep",
        "lat": "47.379898",
        "lon": "19.104976",
        "parent": "CSF04548"
    },
    {
        "id": "F04549",
        "name": "Millenniumtelep",
        "lat": "47.379584",
        "lon": "19.104817",
        "parent": "CSF04548"
    },
    {
        "id": "F04550",
        "name": "Zsellér dűlő",
        "lat": "47.389905",
        "lon": "19.119842",
        "parent": "CS049171"
    },
    {
        "id": "F04551",
        "name": "Zsellér dűlő",
        "lat": "47.389200",
        "lon": "19.120232",
        "parent": "CS049171"
    },
    {
        "id": "F04552",
        "name": "Polimer",
        "lat": "47.382332",
        "lon": "19.126910",
        "parent": "CSF04553"
    },
    {
        "id": "F04553",
        "name": "Polimer",
        "lat": "47.382632",
        "lon": "19.126758",
        "parent": "CSF04553"
    },
    {
        "id": "F04554",
        "name": "Vecsés út, sorompó",
        "lat": "47.398722",
        "lon": "19.125120",
        "parent": "CSF04555"
    },
    {
        "id": "F04555",
        "name": "Vecsés út, sorompó",
        "lat": "47.398910",
        "lon": "19.126538",
        "parent": "CSF04555"
    },
    {
        "id": "F04556",
        "name": "Szamaránszki dűlő",
        "lat": "47.399814",
        "lon": "19.133984",
        "parent": "CSF04557"
    },
    {
        "id": "F04557",
        "name": "Szamaránszki dűlő",
        "lat": "47.399921",
        "lon": "19.134143",
        "parent": "CSF04557"
    },
    {
        "id": "F04558",
        "name": "Telefondűlő út",
        "lat": "47.401032",
        "lon": "19.140134",
        "parent": "CSF04559"
    },
    {
        "id": "F04559",
        "name": "Telefondűlő út",
        "lat": "47.401355",
        "lon": "19.140797",
        "parent": "CSF04559"
    },
    {
        "id": "F04560",
        "name": "Kertészeti Egyetem",
        "lat": "47.398686",
        "lon": "19.148966",
        "parent": "CSF04560"
    },
    {
        "id": "F04561",
        "name": "Kertészeti Egyetem",
        "lat": "47.398596",
        "lon": "19.149257",
        "parent": "CSF04560"
    },
    {
        "id": "F04562",
        "name": "Víztorony tér",
        "lat": "47.389473",
        "lon": "19.161386",
        "parent": "CSF04562"
    },
    {
        "id": "F04563",
        "name": "Víztorony tér",
        "lat": "47.389257",
        "lon": "19.161531",
        "parent": "CSF04562"
    },
    {
        "id": "F04564",
        "name": "Erzsébeti temető",
        "lat": "47.418675",
        "lon": "19.122154",
        "parent": "CSF04565"
    },
    {
        "id": "F04565",
        "name": "Erzsébeti temető",
        "lat": "47.418711",
        "lon": "19.122551",
        "parent": "CSF04565"
    },
    {
        "id": "F04566",
        "name": "Tangazdaság (Óvoda)",
        "lat": "47.390734",
        "lon": "19.159667",
        "parent": "CSF04567"
    },
    {
        "id": "F04567",
        "name": "Tangazdaság (Óvoda)",
        "lat": "47.390863",
        "lon": "19.159302",
        "parent": "CSF04567"
    },
    {
        "id": "F04568",
        "name": "Erzsébet utca",
        "lat": "47.403244",
        "lon": "19.115494",
        "parent": "CSF04568"
    },
    {
        "id": "F04569",
        "name": "Erzsébet utca",
        "lat": "47.402749",
        "lon": "19.115785",
        "parent": "CSF04568"
    },
    {
        "id": "F04570",
        "name": "Ócsai úti felüljáró",
        "lat": "47.383340",
        "lon": "19.125733",
        "parent": "CSF04571"
    },
    {
        "id": "F04571",
        "name": "Ócsai úti felüljáró",
        "lat": "47.383646",
        "lon": "19.125707",
        "parent": "CSF04571"
    },
    {
        "id": "F04572",
        "name": "Szent László utca",
        "lat": "47.420769",
        "lon": "19.126053",
        "parent": "CS008965"
    },
    {
        "id": "F04573",
        "name": "Szent László utca",
        "lat": "47.420840",
        "lon": "19.126358",
        "parent": "CS008965"
    },
    {
        "id": "F04574",
        "name": "Újtelep út",
        "lat": "47.415637",
        "lon": "19.132883",
        "parent": ""
    },
    {
        "id": "F04575",
        "name": "Szent László utca",
        "lat": "47.415699",
        "lon": "19.133308",
        "parent": ""
    },
    {
        "id": "F04576",
        "name": "Szentlőrinci úti lakótelep",
        "lat": "47.416871",
        "lon": "19.130526",
        "parent": "CS008966"
    },
    {
        "id": "F04577",
        "name": "Szentlőrinci úti lakótelep",
        "lat": "47.416600",
        "lon": "19.131056",
        "parent": "CS008966"
    },
    {
        "id": "F04578",
        "name": "Pécel, Pesti út 110.",
        "lat": "47.491874",
        "lon": "19.317023",
        "parent": "CSF04578"
    },
    {
        "id": "F04579",
        "name": "Pécel, Pesti út 110.",
        "lat": "47.491678",
        "lon": "19.316464",
        "parent": "CSF04578"
    },
    {
        "id": "F04580",
        "name": "Orvosi rendelő",
        "lat": "47.490139",
        "lon": "19.331705",
        "parent": "CSF04580"
    },
    {
        "id": "F04581",
        "name": "Orvosi rendelő",
        "lat": "47.490054",
        "lon": "19.333429",
        "parent": "CSF04580"
    },
    {
        "id": "F04582",
        "name": "Szent Imre körút",
        "lat": "47.482664",
        "lon": "19.342598",
        "parent": ""
    },
    {
        "id": "F04583",
        "name": "Szent Imre körút",
        "lat": "47.484547",
        "lon": "19.342376",
        "parent": ""
    },
    {
        "id": "F04584",
        "name": "Kistarcsa, kórház H",
        "lat": "47.539805",
        "lon": "19.252603",
        "parent": ""
    },
    {
        "id": "F04585",
        "name": "Határ utca",
        "lat": "47.491491",
        "lon": "19.323112",
        "parent": "CSF04585"
    },
    {
        "id": "F04586",
        "name": "Határ utca",
        "lat": "47.491475",
        "lon": "19.322435",
        "parent": "CSF04585"
    },
    {
        "id": "F04587",
        "name": "Faiskola utcai átjáró",
        "lat": "47.490799",
        "lon": "19.326692",
        "parent": "CSF04587"
    },
    {
        "id": "F04588",
        "name": "Faiskola utcai átjáró",
        "lat": "47.490782",
        "lon": "19.326307",
        "parent": "CSF04587"
    },
    {
        "id": "F04589",
        "name": "Ráday Gedeon tér",
        "lat": "47.491822",
        "lon": "19.342331",
        "parent": "CSF04590"
    },
    {
        "id": "F04590",
        "name": "Ráday Gedeon tér",
        "lat": "47.491866",
        "lon": "19.342477",
        "parent": "CSF04590"
    },
    {
        "id": "F04591",
        "name": "Kossuth tér",
        "lat": "47.488029",
        "lon": "19.340969",
        "parent": "CSF04591"
    },
    {
        "id": "F04592",
        "name": "Kossuth tér",
        "lat": "47.487957",
        "lon": "19.341194",
        "parent": "CSF04591"
    },
    {
        "id": "F04593",
        "name": "Pécel, Kun József utca",
        "lat": "47.477653",
        "lon": "19.343128",
        "parent": ""
    },
    {
        "id": "F04594",
        "name": "Köztársaság tér",
        "lat": "47.490362",
        "lon": "19.336244",
        "parent": "CSF04595"
    },
    {
        "id": "F04595",
        "name": "Köztársaság tér",
        "lat": "47.490821",
        "lon": "19.336234",
        "parent": "CSF04595"
    },
    {
        "id": "F04596",
        "name": "Vecsés-nyugat",
        "lat": "47.417987",
        "lon": "19.254473",
        "parent": "CSF04597"
    },
    {
        "id": "F04597",
        "name": "Vecsés-nyugat",
        "lat": "47.418112",
        "lon": "19.253447",
        "parent": "CSF04597"
    },
    {
        "id": "F04598",
        "name": "Repülőtér, P+R",
        "lat": "47.429363",
        "lon": "19.263790",
        "parent": ""
    },
    {
        "id": "F04599",
        "name": "Liszt Ferenc Airport 2",
        "lat": "47.432768",
        "lon": "19.261259",
        "parent": ""
    },
    {
        "id": "F04600",
        "name": "Gyál felső vasútállomás",
        "lat": "47.388826",
        "lon": "19.206048",
        "parent": "CSF04600"
    },
    {
        "id": "F04601",
        "name": "Gyál felső vasútállomás",
        "lat": "47.388141",
        "lon": "19.207476",
        "parent": "CSF04600"
    },
    {
        "id": "F04602",
        "name": "Széchenyi István utca",
        "lat": "47.389267",
        "lon": "19.218990",
        "parent": ""
    },
    {
        "id": "F04603",
        "name": "Gyál, Vecsési út",
        "lat": "47.380893",
        "lon": "19.230220",
        "parent": ""
    },
    {
        "id": "F04604",
        "name": "Kőrösi út",
        "lat": "47.376028",
        "lon": "19.223384",
        "parent": ""
    },
    {
        "id": "F04605",
        "name": "Ady Endre utca",
        "lat": "47.385303",
        "lon": "19.210368",
        "parent": "CSF04605"
    },
    {
        "id": "F04606",
        "name": "Ady Endre utca",
        "lat": "47.384384",
        "lon": "19.211584",
        "parent": "CSF04605"
    },
    {
        "id": "F04607",
        "name": "Dunaharaszti felső",
        "lat": "47.366411",
        "lon": "19.092636",
        "parent": "CSF04607"
    },
    {
        "id": "F04608",
        "name": "Dunaharaszti felső",
        "lat": "47.366330",
        "lon": "19.092675",
        "parent": "CSF04607"
    },
    {
        "id": "F04609",
        "name": "Dunaharaszti külső",
        "lat": "47.359892",
        "lon": "19.086130",
        "parent": "CSF04610"
    },
    {
        "id": "F04610",
        "name": "Dunaharaszti külső",
        "lat": "47.360647",
        "lon": "19.086713",
        "parent": "CSF04610"
    },
    {
        "id": "F04611",
        "name": "Szigetszentmiklós",
        "lat": "47.344292",
        "lon": "19.050268",
        "parent": "CSF04611"
    },
    {
        "id": "F04612",
        "name": "Szigetszentmiklós",
        "lat": "47.344121",
        "lon": "19.050215",
        "parent": "CSF04611"
    },
    {
        "id": "F04613",
        "name": "József Attila-telep",
        "lat": "47.337122",
        "lon": "19.034441",
        "parent": "CSF04613"
    },
    {
        "id": "F04614",
        "name": "József Attila-telep",
        "lat": "47.337068",
        "lon": "19.034230",
        "parent": "CSF04613"
    },
    {
        "id": "F04615",
        "name": "Szigetszentmiklós alsó",
        "lat": "47.336453",
        "lon": "19.018973",
        "parent": "CSF04615"
    },
    {
        "id": "F04616",
        "name": "Szigetszentmiklós alsó",
        "lat": "47.336435",
        "lon": "19.020257",
        "parent": "CSF04615"
    },
    {
        "id": "F04617",
        "name": "Szigetszentmiklós-Gyártelep",
        "lat": "47.333635",
        "lon": "19.003776",
        "parent": "CSF04618"
    },
    {
        "id": "F04618",
        "name": "Szigetszentmiklós-Gyártelep",
        "lat": "47.333806",
        "lon": "19.004742",
        "parent": "CSF04618"
    },
    {
        "id": "F04619",
        "name": "Szigethalom",
        "lat": "47.330069",
        "lon": "18.993884",
        "parent": "CSF04619"
    },
    {
        "id": "F04620",
        "name": "Szigethalom",
        "lat": "47.330012",
        "lon": "18.993852",
        "parent": "CSF04619"
    },
    {
        "id": "F04621",
        "name": "Szigethalom alsó",
        "lat": "47.321444",
        "lon": "18.983569",
        "parent": "CSF04621"
    },
    {
        "id": "F04622",
        "name": "Szigethalom alsó",
        "lat": "47.321291",
        "lon": "18.983489",
        "parent": "CSF04621"
    },
    {
        "id": "F04623",
        "name": "Tököl",
        "lat": "47.313477",
        "lon": "18.974254",
        "parent": "CSF04623"
    },
    {
        "id": "F04624",
        "name": "Tököl",
        "lat": "47.313327",
        "lon": "18.974207",
        "parent": "CSF04623"
    },
    {
        "id": "F04627",
        "name": "Szigetcsép",
        "lat": "47.270249",
        "lon": "18.956296",
        "parent": "CSF04627"
    },
    {
        "id": "F04628",
        "name": "Szigetcsép",
        "lat": "47.270213",
        "lon": "18.956230",
        "parent": "CSF04627"
    },
    {
        "id": "F04631",
        "name": "Szigetszentmárton-Szigetújfalu",
        "lat": "47.227389",
        "lon": "18.946233",
        "parent": "CSF04632"
    },
    {
        "id": "F04632",
        "name": "Szigetszentmárton-Szigetújfalu",
        "lat": "47.228459",
        "lon": "18.945901",
        "parent": "CSF04632"
    },
    {
        "id": "F04633",
        "name": "Horgásztanyák",
        "lat": "47.213029",
        "lon": "18.952835",
        "parent": "CSF04634"
    },
    {
        "id": "F04634",
        "name": "Horgásztanyák",
        "lat": "47.214135",
        "lon": "18.953071",
        "parent": "CSF04634"
    },
    {
        "id": "F04635",
        "name": "Angyalisziget",
        "lat": "47.199340",
        "lon": "18.944796",
        "parent": "CSF04636"
    },
    {
        "id": "F04636",
        "name": "Angyalisziget",
        "lat": "47.200276",
        "lon": "18.945335",
        "parent": "CSF04636"
    },
    {
        "id": "F04638",
        "name": "Ráckeve",
        "lat": "47.175502",
        "lon": "18.941748",
        "parent": ""
    },
    {
        "id": "F04639",
        "name": "Háros",
        "lat": "47.385570",
        "lon": "19.020184",
        "parent": ""
    },
    {
        "id": "F04641",
        "name": "Gát utca",
        "lat": "47.382986",
        "lon": "19.013351",
        "parent": "CSF04641"
    },
    {
        "id": "F04642",
        "name": "Gát utca",
        "lat": "47.382614",
        "lon": "19.012710",
        "parent": "CSF04641"
    },
    {
        "id": "F04643",
        "name": "Árpád utca",
        "lat": "47.480090",
        "lon": "19.343101",
        "parent": "CSF04643"
    },
    {
        "id": "F04644",
        "name": "Árpád utca",
        "lat": "47.479985",
        "lon": "19.343227",
        "parent": "CSF04643"
    },
    {
        "id": "F04645",
        "name": "Pécel vasútállomás",
        "lat": "47.493413",
        "lon": "19.339207",
        "parent": "CSF04645"
    },
    {
        "id": "F04646",
        "name": "Pécel vasútállomás",
        "lat": "47.493317",
        "lon": "19.338052",
        "parent": "CSF04645"
    },
    {
        "id": "F04647",
        "name": "Szent István utca",
        "lat": "47.378595",
        "lon": "19.226941",
        "parent": ""
    },
    {
        "id": "F04648",
        "name": "Rákóczi Ferenc utca",
        "lat": "47.387626",
        "lon": "19.215448",
        "parent": ""
    },
    {
        "id": "F04649",
        "name": "Bocskai István utca",
        "lat": "47.383451",
        "lon": "19.228017",
        "parent": "CSF04649"
    },
    {
        "id": "F04650",
        "name": "Somogyi Béla utca",
        "lat": "47.387220",
        "lon": "19.222175",
        "parent": ""
    },
    {
        "id": "F04651",
        "name": "Bocskai István utca",
        "lat": "47.377868",
        "lon": "19.220026",
        "parent": ""
    },
    {
        "id": "F04652",
        "name": "Somogyi Béla utca",
        "lat": "47.381673",
        "lon": "19.214277",
        "parent": ""
    },
    {
        "id": "F04653",
        "name": "Lakihegy, Cseresznyés utca",
        "lat": "47.376945",
        "lon": "19.007059",
        "parent": "CS037747"
    },
    {
        "id": "F04655",
        "name": "Csömör",
        "lat": "47.545025",
        "lon": "19.225065",
        "parent": ""
    },
    {
        "id": "F04656",
        "name": "Kistarcsa, kórház",
        "lat": "47.539459",
        "lon": "19.249613",
        "parent": "CSF04656"
    },
    {
        "id": "F04657",
        "name": "Kistarcsa, kórház",
        "lat": "47.538670",
        "lon": "19.248455",
        "parent": "CSF04656"
    },
    {
        "id": "F04658",
        "name": "Kistarcsa",
        "lat": "47.545845",
        "lon": "19.259734",
        "parent": "CSF04658"
    },
    {
        "id": "F04659",
        "name": "Kistarcsa",
        "lat": "47.545818",
        "lon": "19.259867",
        "parent": "CSF04658"
    },
    {
        "id": "F04660",
        "name": "Zsófialiget",
        "lat": "47.548446",
        "lon": "19.264009",
        "parent": "CSF04660"
    },
    {
        "id": "F04661",
        "name": "Zsófialiget",
        "lat": "47.548437",
        "lon": "19.264129",
        "parent": "CSF04660"
    },
    {
        "id": "F04662",
        "name": "Kerepes",
        "lat": "47.553433",
        "lon": "19.271377",
        "parent": "CSF04662"
    },
    {
        "id": "F04663",
        "name": "Kerepes",
        "lat": "47.552751",
        "lon": "19.270417",
        "parent": "CSF04662"
    },
    {
        "id": "F04664",
        "name": "Szilasliget",
        "lat": "47.568896",
        "lon": "19.275416",
        "parent": "CSF04664"
    },
    {
        "id": "F04665",
        "name": "Szilasliget",
        "lat": "47.568079",
        "lon": "19.274655",
        "parent": "CSF04664"
    },
    {
        "id": "F04668",
        "name": "Mogyoród",
        "lat": "47.597029",
        "lon": "19.271853",
        "parent": "CSF04668"
    },
    {
        "id": "F04669",
        "name": "Mogyoród",
        "lat": "47.595986",
        "lon": "19.271649",
        "parent": "CSF04668"
    },
    {
        "id": "F04670",
        "name": "Szentjakab",
        "lat": "47.597379",
        "lon": "19.290299",
        "parent": "CSF04670"
    },
    {
        "id": "F04671",
        "name": "Szentjakab",
        "lat": "47.597297",
        "lon": "19.290405",
        "parent": "CSF04670"
    },
    {
        "id": "F04672",
        "name": "Gödöllő, Erzsébet park",
        "lat": "47.595209",
        "lon": "19.341536",
        "parent": "CSF04672"
    },
    {
        "id": "F04673",
        "name": "Gödöllő, Erzsébet park",
        "lat": "47.594934",
        "lon": "19.340005",
        "parent": "CSF04672"
    },
    {
        "id": "F04674",
        "name": "Gödöllő, Szabadság tér",
        "lat": "47.597505",
        "lon": "19.347599",
        "parent": "CSF04675"
    },
    {
        "id": "F04675",
        "name": "Gödöllő, Szabadság tér",
        "lat": "47.597827",
        "lon": "19.348252",
        "parent": "CSF04675"
    },
    {
        "id": "F04676",
        "name": "Gödöllő, Palotakert",
        "lat": "47.598525",
        "lon": "19.356661",
        "parent": "CSF04676"
    },
    {
        "id": "F04677",
        "name": "Gödöllő, Palotakert",
        "lat": "47.598453",
        "lon": "19.356634",
        "parent": "CSF04676"
    },
    {
        "id": "F04679",
        "name": "Gödöllő",
        "lat": "47.593341",
        "lon": "19.357787",
        "parent": ""
    },
    {
        "id": "F04680",
        "name": "Lacházi fogadó",
        "lat": "47.379465",
        "lon": "19.009070",
        "parent": "CSF04681"
    },
    {
        "id": "F04681",
        "name": "Lacházi fogadó",
        "lat": "47.380050",
        "lon": "19.009785",
        "parent": "CSF04681"
    },
    {
        "id": "F04682",
        "name": "Erkel Ferenc utca",
        "lat": "47.517165",
        "lon": "18.936313",
        "parent": "CSF04682"
    },
    {
        "id": "F04683",
        "name": "Erkel Ferenc utca",
        "lat": "47.516454",
        "lon": "18.935704",
        "parent": "CSF04682"
    },
    {
        "id": "F04684",
        "name": "Gyógyszertár",
        "lat": "47.513483",
        "lon": "18.932471",
        "parent": "CSF04685"
    },
    {
        "id": "F04685",
        "name": "Gyógyszertár",
        "lat": "47.513697",
        "lon": "18.932931",
        "parent": "CSF04685"
    },
    {
        "id": "F04687",
        "name": "Szentendre",
        "lat": "47.661057",
        "lon": "19.075695",
        "parent": "CSF04687"
    },
    {
        "id": "F04688",
        "name": "Pannóniatelep",
        "lat": "47.652488",
        "lon": "19.065294",
        "parent": "CSF04688"
    },
    {
        "id": "F04689",
        "name": "Pannóniatelep",
        "lat": "47.651894",
        "lon": "19.064508",
        "parent": "CSF04688"
    },
    {
        "id": "F04690",
        "name": "Pomáz",
        "lat": "47.643188",
        "lon": "19.032032",
        "parent": "CSF04690"
    },
    {
        "id": "F04691",
        "name": "Pomáz",
        "lat": "47.642732",
        "lon": "19.032690",
        "parent": "CSF04690"
    },
    {
        "id": "F04692",
        "name": "Budakalász, Lenfonó",
        "lat": "47.621692",
        "lon": "19.046912",
        "parent": "CSF04693"
    },
    {
        "id": "F04693",
        "name": "Budakalász, Lenfonó",
        "lat": "47.621863",
        "lon": "19.046592",
        "parent": "CSF04693"
    },
    {
        "id": "F04694",
        "name": "Budakalász",
        "lat": "47.616133",
        "lon": "19.055013",
        "parent": "CSF04695"
    },
    {
        "id": "F04695",
        "name": "Budakalász",
        "lat": "47.616196",
        "lon": "19.054827",
        "parent": "CSF04695"
    },
    {
        "id": "F04696",
        "name": "Anna kápolna",
        "lat": "47.582136",
        "lon": "18.939193",
        "parent": "CSF04697"
    },
    {
        "id": "F04697",
        "name": "Anna kápolna",
        "lat": "47.582289",
        "lon": "18.939074",
        "parent": "CSF04697"
    },
    {
        "id": "F04698",
        "name": "Munkás utca",
        "lat": "47.587064",
        "lon": "18.937162",
        "parent": "CSF04699"
    },
    {
        "id": "F04699",
        "name": "Munkás utca",
        "lat": "47.588044",
        "lon": "18.937094",
        "parent": "CSF04699"
    },
    {
        "id": "F04700",
        "name": "Solymár, községháza",
        "lat": "47.592154",
        "lon": "18.937099",
        "parent": "CSF04702"
    },
    {
        "id": "F04701",
        "name": "Solymár, községháza",
        "lat": "47.591669",
        "lon": "18.937233",
        "parent": "CSF04702"
    },
    {
        "id": "F04702",
        "name": "Solymár, községháza",
        "lat": "47.592524",
        "lon": "18.938215",
        "parent": "CSF04702"
    },
    {
        "id": "F04703",
        "name": "Solymár, PEMÜ",
        "lat": "47.597218",
        "lon": "18.927753",
        "parent": "CS044511"
    },
    {
        "id": "F04704",
        "name": "Dózsa György utca",
        "lat": "47.592825",
        "lon": "18.931495",
        "parent": "CS044572"
    },
    {
        "id": "F04705",
        "name": "Dózsa György utca",
        "lat": "47.592708",
        "lon": "18.932577",
        "parent": "CS044572"
    },
    {
        "id": "F04706",
        "name": "Templom tér",
        "lat": "47.591401",
        "lon": "18.929721",
        "parent": "CSF04707"
    },
    {
        "id": "F04707",
        "name": "Templom tér",
        "lat": "47.591472",
        "lon": "18.929348",
        "parent": "CSF04707"
    },
    {
        "id": "F04708",
        "name": "Budakeszi, városháza",
        "lat": "47.510655",
        "lon": "18.929291",
        "parent": "CSF04709"
    },
    {
        "id": "F04709",
        "name": "Budakeszi, városháza",
        "lat": "47.510682",
        "lon": "18.929570",
        "parent": "CSF04709"
    },
    {
        "id": "F04710",
        "name": "Ibolya utca",
        "lat": "47.460371",
        "lon": "18.926526",
        "parent": "CSF04710"
    },
    {
        "id": "F04711",
        "name": "Ibolya utca",
        "lat": "47.460245",
        "lon": "18.926579",
        "parent": "CSF04710"
    },
    {
        "id": "F04712",
        "name": "Patkó utca",
        "lat": "47.458504",
        "lon": "18.939342",
        "parent": "CSF04713"
    },
    {
        "id": "F04713",
        "name": "Patkó utca",
        "lat": "47.458999",
        "lon": "18.939288",
        "parent": "CSF04713"
    },
    {
        "id": "F04714",
        "name": "Gimnázium",
        "lat": "47.460663",
        "lon": "18.940001",
        "parent": "CSF04714"
    },
    {
        "id": "F04715",
        "name": "Gimnázium",
        "lat": "47.460564",
        "lon": "18.939802",
        "parent": "CSF04714"
    },
    {
        "id": "F04716",
        "name": "Budaörs, városháza",
        "lat": "47.461254",
        "lon": "18.946950",
        "parent": "CSF04717"
    },
    {
        "id": "F04717",
        "name": "Budaörs, városháza",
        "lat": "47.461371",
        "lon": "18.946313",
        "parent": "CSF04717"
    },
    {
        "id": "F04719",
        "name": "Kisfaludy utca",
        "lat": "47.460261",
        "lon": "18.952814",
        "parent": "CSF04720"
    },
    {
        "id": "F04720",
        "name": "Kisfaludy utca",
        "lat": "47.460280",
        "lon": "18.954299",
        "parent": "CSF04720"
    },
    {
        "id": "F04721",
        "name": "Károly király utca",
        "lat": "47.460669",
        "lon": "18.956858",
        "parent": ""
    },
    {
        "id": "F04722",
        "name": "Károly király utca",
        "lat": "47.460881",
        "lon": "18.959796",
        "parent": ""
    },
    {
        "id": "F04724",
        "name": "Budaörsi lakótelep",
        "lat": "47.456070",
        "lon": "18.940748",
        "parent": "CSF04724"
    },
    {
        "id": "F04725",
        "name": "Ifjúság utca",
        "lat": "47.456670",
        "lon": "18.947203",
        "parent": "CSF04726"
    },
    {
        "id": "F04726",
        "name": "Ifjúság utca",
        "lat": "47.456694",
        "lon": "18.946680",
        "parent": "CSF04726"
    },
    {
        "id": "F04727",
        "name": "Csata utca",
        "lat": "47.455266",
        "lon": "18.960727",
        "parent": "CSF04728"
    },
    {
        "id": "F04728",
        "name": "Csata utca",
        "lat": "47.455653",
        "lon": "18.960700",
        "parent": "CSF04728"
    },
    {
        "id": "F04729",
        "name": "Agip utca",
        "lat": "47.449133",
        "lon": "18.962739",
        "parent": "CSF04730"
    },
    {
        "id": "F04730",
        "name": "Agip utca",
        "lat": "47.450194",
        "lon": "18.962419",
        "parent": "CSF04730"
    },
    {
        "id": "F04731",
        "name": "Kinizsi utca",
        "lat": "47.449705",
        "lon": "18.969607",
        "parent": "CSF04731"
    },
    {
        "id": "F04732",
        "name": "Kinizsi utca",
        "lat": "47.449633",
        "lon": "18.969846",
        "parent": "CSF04731"
    },
    {
        "id": "F04733",
        "name": "Erdő utca",
        "lat": "47.509168",
        "lon": "18.926785",
        "parent": "CSF04733"
    },
    {
        "id": "F04734",
        "name": "Erdő utca",
        "lat": "47.508862",
        "lon": "18.926547",
        "parent": "CSF04733"
    },
    {
        "id": "F04735",
        "name": "Aradi utca",
        "lat": "47.461784",
        "lon": "18.969298",
        "parent": "CSF04735"
    },
    {
        "id": "F04736",
        "name": "Aradi utca",
        "lat": "47.461577",
        "lon": "18.968701",
        "parent": "CSF04735"
    },
    {
        "id": "F04737",
        "name": "Budaörs, benzinkút",
        "lat": "47.451423",
        "lon": "18.958479",
        "parent": "CSF04738"
    },
    {
        "id": "F04738",
        "name": "Budaörs, benzinkút",
        "lat": "47.453204",
        "lon": "18.958436",
        "parent": "CSF04738"
    },
    {
        "id": "F04739",
        "name": "Gyár utca",
        "lat": "47.458333",
        "lon": "18.906106",
        "parent": "CSF04739"
    },
    {
        "id": "F04740",
        "name": "Gyár utca",
        "lat": "47.458332",
        "lon": "18.905576",
        "parent": "CSF04739"
    },
    {
        "id": "F04741",
        "name": "Légimentők",
        "lat": "47.455375",
        "lon": "18.907467",
        "parent": "CSF04741"
    },
    {
        "id": "F04742",
        "name": "Légimentők",
        "lat": "47.454899",
        "lon": "18.908290",
        "parent": "CSF04741"
    },
    {
        "id": "F04743",
        "name": "Törökbálint vasútállomás",
        "lat": "47.450694",
        "lon": "18.904880",
        "parent": "CSF04744"
    },
    {
        "id": "F04744",
        "name": "Törökbálint vasútállomás",
        "lat": "47.450794",
        "lon": "18.905012",
        "parent": "CSF04744"
    },
    {
        "id": "F04745",
        "name": "Kerekdomb utca",
        "lat": "47.448176",
        "lon": "18.905205",
        "parent": "CSF04746"
    },
    {
        "id": "F04746",
        "name": "Kerekdomb utca",
        "lat": "47.448491",
        "lon": "18.905310",
        "parent": "CSF04746"
    },
    {
        "id": "F04747",
        "name": "Vasút utca",
        "lat": "47.446814",
        "lon": "18.909293",
        "parent": "CSF04748"
    },
    {
        "id": "F04748",
        "name": "Vasút utca",
        "lat": "47.447084",
        "lon": "18.909266",
        "parent": "CSF04748"
    },
    {
        "id": "F04749",
        "name": "Deák Ferenc utca",
        "lat": "47.440955",
        "lon": "18.913604",
        "parent": "CSF04749"
    },
    {
        "id": "F04750",
        "name": "Deák Ferenc utca",
        "lat": "47.440775",
        "lon": "18.913923",
        "parent": "CSF04749"
    },
    {
        "id": "F04752",
        "name": "Baross Gábor utca",
        "lat": "47.436046",
        "lon": "18.915539",
        "parent": ""
    },
    {
        "id": "F04754",
        "name": "Bartók Béla utca",
        "lat": "47.432802",
        "lon": "18.918848",
        "parent": "CS008317"
    },
    {
        "id": "F04755",
        "name": "Munkácsy Mihály utca (hősi emlékmű)",
        "lat": "47.431347",
        "lon": "18.916701",
        "parent": "CS073473"
    },
    {
        "id": "F04757",
        "name": "Harangláb",
        "lat": "47.432752",
        "lon": "18.913956",
        "parent": "CSF04757"
    },
    {
        "id": "F04759",
        "name": "Őszibarack utca",
        "lat": "47.436901",
        "lon": "18.901219",
        "parent": ""
    },
    {
        "id": "F04761",
        "name": "Széchenyi tér",
        "lat": "47.439365",
        "lon": "18.900827",
        "parent": ""
    },
    {
        "id": "F04762",
        "name": "Idősek otthona",
        "lat": "47.442460",
        "lon": "18.901296",
        "parent": "CSF04762"
    },
    {
        "id": "F04763",
        "name": "Idősek otthona",
        "lat": "47.442370",
        "lon": "18.901561",
        "parent": "CSF04762"
    },
    {
        "id": "F04764",
        "name": "Köztársaság tér",
        "lat": "47.445118",
        "lon": "18.905213",
        "parent": "CSF04765"
    },
    {
        "id": "F04765",
        "name": "Köztársaság tér",
        "lat": "47.445821",
        "lon": "18.905941",
        "parent": "CSF04765"
    },
    {
        "id": "F04767",
        "name": "Diósd, Törökbálinti elágazás",
        "lat": "47.410612",
        "lon": "18.956322",
        "parent": "CSF04768"
    },
    {
        "id": "F04768",
        "name": "Diósd, Törökbálinti elágazás",
        "lat": "47.410675",
        "lon": "18.957329",
        "parent": "CSF04768"
    },
    {
        "id": "F04769",
        "name": "Diósd, Sashegyi út",
        "lat": "47.407379",
        "lon": "18.951902",
        "parent": "CSF04770"
    },
    {
        "id": "F04770",
        "name": "Diósd, Sashegyi út",
        "lat": "47.407414",
        "lon": "18.951650",
        "parent": "CSF04770"
    },
    {
        "id": "F04771",
        "name": "Gyár utca",
        "lat": "47.402425",
        "lon": "18.943975",
        "parent": ""
    },
    {
        "id": "F04772",
        "name": "Diósd, városháza",
        "lat": "47.408779",
        "lon": "18.948772",
        "parent": ""
    },
    {
        "id": "F04773",
        "name": "Csapágygyár",
        "lat": "47.405310",
        "lon": "18.942207",
        "parent": ""
    },
    {
        "id": "F04774",
        "name": "Külső Bécsi út 35.",
        "lat": "47.590141",
        "lon": "18.987441",
        "parent": "CSF04774"
    },
    {
        "id": "F04775",
        "name": "Külső Bécsi út 35.",
        "lat": "47.589880",
        "lon": "18.987481",
        "parent": "CSF04774"
    },
    {
        "id": "F04776",
        "name": "Pilisborosjenő, Téglagyári tér",
        "lat": "47.596405",
        "lon": "18.978165",
        "parent": ""
    },
    {
        "id": "F04777",
        "name": "Rácski telep",
        "lat": "47.554826",
        "lon": "18.927013",
        "parent": "CSF04777"
    },
    {
        "id": "F04778",
        "name": "Rácski telep",
        "lat": "47.554669",
        "lon": "18.927381",
        "parent": "CSF04777"
    },
    {
        "id": "F04779",
        "name": "Erdészház",
        "lat": "47.560689",
        "lon": "18.917883",
        "parent": "CSF04779"
    },
    {
        "id": "F04780",
        "name": "Erdészház",
        "lat": "47.560478",
        "lon": "18.918399",
        "parent": "CSF04779"
    },
    {
        "id": "F04781",
        "name": "13-as kilométerkő",
        "lat": "47.567101",
        "lon": "18.909322",
        "parent": "CSF04781"
    },
    {
        "id": "F04782",
        "name": "13-as kilométerkő",
        "lat": "47.566962",
        "lon": "18.909838",
        "parent": "CSF04781"
    },
    {
        "id": "F04783",
        "name": "Sebestyéndomb",
        "lat": "47.571612",
        "lon": "18.898491",
        "parent": "CSF04783"
    },
    {
        "id": "F04784",
        "name": "Sebestyéndomb",
        "lat": "47.571604",
        "lon": "18.898850",
        "parent": "CSF04783"
    },
    {
        "id": "F04785",
        "name": "Ady Endre utca",
        "lat": "47.575857",
        "lon": "18.891261",
        "parent": "CSF04785"
    },
    {
        "id": "F04786",
        "name": "Ady Endre utca",
        "lat": "47.575338",
        "lon": "18.893150",
        "parent": "CSF04785"
    },
    {
        "id": "F04788",
        "name": "Budakeszi, Dózsa György tér",
        "lat": "47.507040",
        "lon": "18.921361",
        "parent": "CSF04790"
    },
    {
        "id": "F04790",
        "name": "Budakeszi, Dózsa György tér",
        "lat": "47.507327",
        "lon": "18.921675",
        "parent": "CSF04790"
    },
    {
        "id": "F04791",
        "name": "Tulipán utca",
        "lat": "47.462381",
        "lon": "18.973939",
        "parent": "CSF04791"
    },
    {
        "id": "F04792",
        "name": "Tulipán utca",
        "lat": "47.462210",
        "lon": "18.973422",
        "parent": "CSF04791"
    },
    {
        "id": "F04793",
        "name": "Szentistvántelep",
        "lat": "47.629301",
        "lon": "19.043159",
        "parent": "CSF04793"
    },
    {
        "id": "F04794",
        "name": "Szentistvántelep",
        "lat": "47.628303",
        "lon": "19.043505",
        "parent": "CSF04793"
    },
    {
        "id": "F04795",
        "name": "Felsőhatár utca",
        "lat": "47.463204",
        "lon": "18.980875",
        "parent": "CSF04795"
    },
    {
        "id": "F04796",
        "name": "Felsőhatár utca",
        "lat": "47.463105",
        "lon": "18.981087",
        "parent": "CSF04795"
    },
    {
        "id": "F04797",
        "name": "Bajcsy-Zsilinszky utca",
        "lat": "47.589941",
        "lon": "18.936106",
        "parent": "CSF04798"
    },
    {
        "id": "F04798",
        "name": "Bajcsy-Zsilinszky utca",
        "lat": "47.590238",
        "lon": "18.936398",
        "parent": "CSF04798"
    },
    {
        "id": "F04799",
        "name": "Pilisvörösvári utca",
        "lat": "47.594977",
        "lon": "18.935763",
        "parent": "CSF04800"
    },
    {
        "id": "F04800",
        "name": "Pilisvörösvári utca",
        "lat": "47.595103",
        "lon": "18.935311",
        "parent": "CSF04800"
    },
    {
        "id": "F04801",
        "name": "Csiki csárda",
        "lat": "47.459889",
        "lon": "18.921898",
        "parent": "CSF04801"
    },
    {
        "id": "F04802",
        "name": "Csiki csárda",
        "lat": "47.459475",
        "lon": "18.921130",
        "parent": "CSF04801"
    },
    {
        "id": "F04803",
        "name": "Csiki tanya",
        "lat": "47.458765",
        "lon": "18.914129",
        "parent": "CSF04803"
    },
    {
        "id": "F04804",
        "name": "Csiki tanya",
        "lat": "47.458595",
        "lon": "18.915243",
        "parent": "CSF04803"
    },
    {
        "id": "F04805",
        "name": "Lévai utca",
        "lat": "47.459466",
        "lon": "18.946723",
        "parent": "CSF04805"
    },
    {
        "id": "F04806",
        "name": "Lévai utca",
        "lat": "47.458673",
        "lon": "18.946955",
        "parent": "CSF04805"
    },
    {
        "id": "F04807",
        "name": "Kötő utca",
        "lat": "47.460897",
        "lon": "18.949523",
        "parent": "CSF04807"
    },
    {
        "id": "F04808",
        "name": "Kötő utca",
        "lat": "47.460654",
        "lon": "18.950174",
        "parent": "CSF04807"
    },
    {
        "id": "F04809",
        "name": "Templom tér",
        "lat": "47.461709",
        "lon": "18.964364",
        "parent": "CSF04809"
    },
    {
        "id": "F04810",
        "name": "Templom tér",
        "lat": "47.461601",
        "lon": "18.964483",
        "parent": "CSF04809"
    },
    {
        "id": "F04811",
        "name": "Baross utca",
        "lat": "47.459060",
        "lon": "18.958705",
        "parent": "CS008598"
    },
    {
        "id": "F04812",
        "name": "Jókai Mór utca",
        "lat": "47.443848",
        "lon": "18.910918",
        "parent": "CSF04813"
    },
    {
        "id": "F04813",
        "name": "Jókai Mór utca",
        "lat": "47.444064",
        "lon": "18.910944",
        "parent": "CSF04813"
    },
    {
        "id": "F04814",
        "name": "Ady Endre utca",
        "lat": "47.434929",
        "lon": "18.906885",
        "parent": "CS008326"
    },
    {
        "id": "F04815",
        "name": "Zrínyi utca",
        "lat": "47.435086",
        "lon": "18.910623",
        "parent": ""
    },
    {
        "id": "F04816",
        "name": "Kölcsey Ferenc utca",
        "lat": "47.407815",
        "lon": "18.946191",
        "parent": ""
    },
    {
        "id": "F04817",
        "name": "Solymár, téglagyári bekötőút",
        "lat": "47.587733",
        "lon": "18.992841",
        "parent": "CSF04817"
    },
    {
        "id": "F04818",
        "name": "Solymár, téglagyári bekötőút",
        "lat": "47.587257",
        "lon": "18.993932",
        "parent": "CSF04817"
    },
    {
        "id": "F04819",
        "name": "Kövesbérci utca",
        "lat": "47.592631",
        "lon": "18.983529",
        "parent": "CSF04819"
    },
    {
        "id": "F04820",
        "name": "Kövesbérci utca",
        "lat": "47.591930",
        "lon": "18.984473",
        "parent": "CSF04819"
    },
    {
        "id": "F04821",
        "name": "BM iskola",
        "lat": "47.550038",
        "lon": "18.933759",
        "parent": "CSF04821"
    },
    {
        "id": "F04822",
        "name": "BM iskola",
        "lat": "47.549688",
        "lon": "18.934052",
        "parent": "CSF04821"
    },
    {
        "id": "F04823",
        "name": "Mészégető",
        "lat": "47.558647",
        "lon": "18.921446",
        "parent": "CSF04824"
    },
    {
        "id": "F04824",
        "name": "Mészégető",
        "lat": "47.558974",
        "lon": "18.920585",
        "parent": "CSF04824"
    },
    {
        "id": "F04825",
        "name": "Úttörő utca (Posta)",
        "lat": "47.576223",
        "lon": "18.889399",
        "parent": ""
    },
    {
        "id": "F04826",
        "name": "Úttörő utca (Posta)",
        "lat": "47.575842",
        "lon": "18.886981",
        "parent": ""
    },
    {
        "id": "F04827",
        "name": "Nagykovácsi, községháza",
        "lat": "47.576027",
        "lon": "18.884163",
        "parent": "CSF04827"
    },
    {
        "id": "F04828",
        "name": "Nagykovácsi, községháza",
        "lat": "47.575920",
        "lon": "18.884482",
        "parent": "CSF04827"
    },
    {
        "id": "F04829",
        "name": "Alcsiki dűlő",
        "lat": "47.460064",
        "lon": "18.934007",
        "parent": "CSF04830"
    },
    {
        "id": "F04830",
        "name": "Alcsiki dűlő",
        "lat": "47.460145",
        "lon": "18.934511",
        "parent": "CSF04830"
    },
    {
        "id": "F04831",
        "name": "Váci Mihály utca",
        "lat": "47.595658",
        "lon": "18.932397",
        "parent": "CSF04832"
    },
    {
        "id": "F04832",
        "name": "Váci Mihály utca",
        "lat": "47.596142",
        "lon": "18.931346",
        "parent": "CSF04832"
    },
    {
        "id": "F04833",
        "name": "Tetra Pak",
        "lat": "47.457413",
        "lon": "18.903920",
        "parent": "CSF04834"
    },
    {
        "id": "F04834",
        "name": "Tetra Pak",
        "lat": "47.457817",
        "lon": "18.903508",
        "parent": "CSF04834"
    },
    {
        "id": "F04835",
        "name": "Budaörsi lakótelep",
        "lat": "47.455971",
        "lon": "18.940642",
        "parent": "CSF04724"
    },
    {
        "id": "F04836",
        "name": "Budaörsi lakótelep",
        "lat": "47.456007",
        "lon": "18.940324",
        "parent": "CSF04724"
    },
    {
        "id": "F04837",
        "name": "Lejtő utca",
        "lat": "47.459584",
        "lon": "18.930613",
        "parent": "CSF04837"
    },
    {
        "id": "F04838",
        "name": "Lejtő utca",
        "lat": "47.459423",
        "lon": "18.931701",
        "parent": "CSF04837"
    },
    {
        "id": "L008076",
        "name": "Határ út",
        "lat": "47.465443",
        "lon": "19.126757",
        "parent": "CSF01541"
    },
    {
        "id": "L008077",
        "name": "Pöttyös utca",
        "lat": "47.468548",
        "lon": "19.116946",
        "parent": "CSF01878"
    },
    {
        "id": "L008078",
        "name": "Ecseri út",
        "lat": "47.470920",
        "lon": "19.111329",
        "parent": "CSF01493"
    },
    {
        "id": "L008082",
        "name": "Népliget",
        "lat": "47.475441",
        "lon": "19.098808",
        "parent": "CSF01282"
    },
    {
        "id": "L008083",
        "name": "Nagyvárad tér",
        "lat": "47.478943",
        "lon": "19.089796",
        "parent": "CSF01252"
    },
    {
        "id": "L008084",
        "name": "Klinikák",
        "lat": "47.482834",
        "lon": "19.079176",
        "parent": "CSF01232"
    },
    {
        "id": "L008136",
        "name": "Arany János utca",
        "lat": "47.503063",
        "lon": "19.054531",
        "parent": "CSF00956"
    },
    {
        "id": "L008139",
        "name": "Dózsa György út",
        "lat": "47.524653",
        "lon": "19.063321",
        "parent": "CSF02680"
    },
    {
        "id": "L008159",
        "name": "Forgách utca",
        "lat": "47.539383",
        "lon": "19.069597",
        "parent": "CSL008159"
    },
    {
        "id": "L008162",
        "name": "Gyöngyösi utca",
        "lat": "47.548691",
        "lon": "19.073233",
        "parent": "CSF02684"
    },
    {
        "id": "L008163",
        "name": "Újpest-Városkapu",
        "lat": "47.558926",
        "lon": "19.079229",
        "parent": "CSF00897"
    },
    {
        "id": "L008186",
        "name": "Újpest-Központ",
        "lat": "47.560429",
        "lon": "19.089916",
        "parent": "CSF00913"
    },
    {
        "id": "L056213",
        "name": "Rákóczi tér",
        "lat": "47.492722",
        "lon": "19.071817",
        "parent": "CS056230"
    },
    {
        "id": "L056214",
        "name": "II. János Pál pápa tér",
        "lat": "47.495300",
        "lon": "19.077244",
        "parent": "CS056232"
    },
    {
        "id": "LM1BUM",
        "name": "Bajza utca (» Mexikói út)",
        "lat": "47.511317",
        "lon": "19.072625",
        "parent": "CSF01101"
    },
    {
        "id": "LM1BUV",
        "name": "Bajza utca (» Vörösmarty tér)",
        "lat": "47.511324",
        "lon": "19.072364",
        "parent": "CSF01101"
    },
    {
        "id": "LM1BZM",
        "name": "Bajcsy-Zsilinszky út (» Mexikói út)",
        "lat": "47.499864",
        "lon": "19.055470",
        "parent": "CSF00997"
    },
    {
        "id": "LM1BZV",
        "name": "Bajcsy-Zsilinszky út (» Vörösmarty tér)",
        "lat": "47.499887",
        "lon": "19.055181",
        "parent": "CSF00997"
    },
    {
        "id": "LM1DF1",
        "name": "Deák Ferenc tér (» Vörösmarty tér)",
        "lat": "47.497778",
        "lon": "19.053095",
        "parent": "CSF00960"
    },
    {
        "id": "LM1DF2",
        "name": "Deák Ferenc tér (» Mexikói út)",
        "lat": "47.497594",
        "lon": "19.053350",
        "parent": "CSF00960"
    },
    {
        "id": "LM1DF3",
        "name": "Deák Ferenc tér (M1 aluljáró)",
        "lat": "47.497504",
        "lon": "19.054145",
        "parent": "CSF00960"
    },
    {
        "id": "LM1HTM",
        "name": "Hősök tere (» Mexikói út)",
        "lat": "47.514180",
        "lon": "19.076956",
        "parent": "CSLM1HTV"
    },
    {
        "id": "LM1HTV",
        "name": "Hősök tere (» Vörösmarty tér)",
        "lat": "47.514330",
        "lon": "19.076732",
        "parent": "CSLM1HTV"
    },
    {
        "id": "LM1KKM",
        "name": "Kodály körönd (» Mexikói út)",
        "lat": "47.509251",
        "lon": "19.069458",
        "parent": "CSF01096"
    },
    {
        "id": "LM1KKV",
        "name": "Kodály körönd (» Vörösmarty tér)",
        "lat": "47.509216",
        "lon": "19.069224",
        "parent": "CSF01096"
    },
    {
        "id": "LM1MUM",
        "name": "Mexikói út",
        "lat": "47.519524",
        "lon": "19.091103",
        "parent": "CSLM1MUV"
    },
    {
        "id": "LM1MUV",
        "name": "Mexikói út (» Vörösmarty tér)",
        "lat": "47.519698",
        "lon": "19.091075",
        "parent": "CSLM1MUV"
    },
    {
        "id": "LM1OKM",
        "name": "Oktogon (» Mexikói út)",
        "lat": "47.504927",
        "lon": "19.063414",
        "parent": "CSLM1OKV"
    },
    {
        "id": "LM1OKV",
        "name": "Oktogon (» Vörösmarty tér)",
        "lat": "47.505239",
        "lon": "19.062922",
        "parent": "CSLM1OKV"
    },
    {
        "id": "LM1OPM",
        "name": "Opera (» Mexikói út)",
        "lat": "47.502179",
        "lon": "19.058966",
        "parent": "CSLM1OPV"
    },
    {
        "id": "LM1OPV",
        "name": "Opera (» Vörösmarty tér)",
        "lat": "47.502308",
        "lon": "19.058780",
        "parent": "CSLM1OPV"
    },
    {
        "id": "LM1SFM",
        "name": "Széchenyi fürdő (» Mexikói út)",
        "lat": "47.517421",
        "lon": "19.080986",
        "parent": "CSLM1SFV"
    },
    {
        "id": "LM1SFV",
        "name": "Széchenyi fürdő (» Vörösmarty tér)",
        "lat": "47.517575",
        "lon": "19.080975",
        "parent": "CSLM1SFV"
    },
    {
        "id": "LM1VTM",
        "name": "Vörösmarty tér (» Mexikói út)",
        "lat": "47.496704",
        "lon": "19.050684",
        "parent": "CSLM1VTV"
    },
    {
        "id": "LM1VTV",
        "name": "Vörösmarty tér",
        "lat": "47.496901",
        "lon": "19.050474",
        "parent": "CSLM1VTV"
    },
    {
        "id": "LM1VUM",
        "name": "Vörösmarty utca (» Mexikói út)",
        "lat": "47.507227",
        "lon": "19.066445",
        "parent": "CSF01093"
    },
    {
        "id": "LM1VUV",
        "name": "Vörösmarty utca (» Vörösmarty tér)",
        "lat": "47.507197",
        "lon": "19.066198",
        "parent": "CSF01093"
    },
    {
        "id": "LM2AS1",
        "name": "Astoria",
        "lat": "47.494440",
        "lon": "19.060127",
        "parent": "CSF01019"
    },
    {
        "id": "LM2ASA",
        "name": "Astoria [A]",
        "lat": "47.494528",
        "lon": "19.059838",
        "parent": "CSF01019"
    },
    {
        "id": "LM2ASB",
        "name": "Astoria [B]",
        "lat": "47.494622",
        "lon": "19.060104",
        "parent": "CSF01019"
    },
    {
        "id": "LM2ASC",
        "name": "Astoria [C]",
        "lat": "47.494579",
        "lon": "19.060298",
        "parent": "CSF01019"
    },
    {
        "id": "LM2ASD",
        "name": "Astoria [D]",
        "lat": "47.494317",
        "lon": "19.060460",
        "parent": "CSF01019"
    },
    {
        "id": "LM2ASE",
        "name": "Astoria [E]",
        "lat": "47.494186",
        "lon": "19.060361",
        "parent": "CSF01019"
    },
    {
        "id": "LM2ASF",
        "name": "Astoria [F]",
        "lat": "47.494197",
        "lon": "19.060131",
        "parent": "CSF01019"
    },
    {
        "id": "LM2ASG",
        "name": "Astoria [G]",
        "lat": "47.494105",
        "lon": "19.059932",
        "parent": "CSF01019"
    },
    {
        "id": "LM2ASH",
        "name": "Astoria [H]",
        "lat": "47.494185",
        "lon": "19.059704",
        "parent": "CSF01019"
    },
    {
        "id": "LM2ASI",
        "name": "Astoria [I]",
        "lat": "47.494368",
        "lon": "19.059623",
        "parent": "CSF01019"
    },
    {
        "id": "LM2ASJ",
        "name": "Astoria [J]",
        "lat": "47.494476",
        "lon": "19.059689",
        "parent": "CSF01019"
    },
    {
        "id": "LM2BL1",
        "name": "Blaha Lujza tér",
        "lat": "47.497001",
        "lon": "19.070426",
        "parent": "CSLM2BLA"
    },
    {
        "id": "LM2BLA",
        "name": "Blaha Lujza tér [A]",
        "lat": "47.497462",
        "lon": "19.070723",
        "parent": "CSLM2BLA"
    },
    {
        "id": "LM2BLB",
        "name": "Blaha Lujza tér [B]",
        "lat": "47.497399",
        "lon": "19.070874",
        "parent": "CSLM2BLA"
    },
    {
        "id": "LM2BLC",
        "name": "Blaha Lujza tér [C]",
        "lat": "47.497111",
        "lon": "19.070958",
        "parent": "CSLM2BLA"
    },
    {
        "id": "LM2BLD",
        "name": "Blaha Lujza tér [D]",
        "lat": "47.496981",
        "lon": "19.070853",
        "parent": "CSLM2BLA"
    },
    {
        "id": "LM2BLE",
        "name": "Blaha Lujza tér [E]",
        "lat": "47.496862",
        "lon": "19.070699",
        "parent": "CSLM2BLA"
    },
    {
        "id": "LM2BLF",
        "name": "Blaha Lujza tér [F]",
        "lat": "47.496835",
        "lon": "19.070577",
        "parent": "CSLM2BLA"
    },
    {
        "id": "LM2BLG",
        "name": "Blaha Lujza tér [G]",
        "lat": "47.496778",
        "lon": "19.070266",
        "parent": "CSLM2BLA"
    },
    {
        "id": "LM2BLH",
        "name": "Blaha Lujza tér [H]",
        "lat": "47.497210",
        "lon": "19.070256",
        "parent": "CSLM2BLA"
    },
    {
        "id": "LM2BLI",
        "name": "Blaha Lujza tér [I]",
        "lat": "47.497328",
        "lon": "19.070318",
        "parent": "CSLM2BLA"
    },
    {
        "id": "LM2BT1",
        "name": "Batthyány tér",
        "lat": "47.506422",
        "lon": "19.038927",
        "parent": "CSF00062"
    },
    {
        "id": "LM2DF1",
        "name": "Deák Ferenc tér (M2 aluljáró)",
        "lat": "47.497493",
        "lon": "19.054104",
        "parent": "CSF00960"
    },
    {
        "id": "LM2DP1",
        "name": "Déli pályaudvar",
        "lat": "47.500375",
        "lon": "19.024802",
        "parent": "CSF00094"
    },
    {
        "id": "LM2KP1",
        "name": "Keleti pályaudvar (Kerepesi út)",
        "lat": "47.499860",
        "lon": "19.082865",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LM2OV1",
        "name": "Örs vezér tere",
        "lat": "47.502922",
        "lon": "19.135935",
        "parent": "CSLM2OVE"
    },
    {
        "id": "LM2OVA",
        "name": "Örs vezér tere [A]",
        "lat": "47.503588",
        "lon": "19.136476",
        "parent": "CSLM2OVE"
    },
    {
        "id": "LM2OVB",
        "name": "Örs vezér tere [B]",
        "lat": "47.503578",
        "lon": "19.136870",
        "parent": "CSLM2OVE"
    },
    {
        "id": "LM2OVC",
        "name": "Örs vezér tere [C]",
        "lat": "47.502637",
        "lon": "19.136890",
        "parent": "CSLM2OVE"
    },
    {
        "id": "LM2OVD",
        "name": "Örs vezér tere [D]",
        "lat": "47.503000",
        "lon": "19.136104",
        "parent": "CSLM2OVE"
    },
    {
        "id": "LM2OVE",
        "name": "Örs vezér tere [E]",
        "lat": "47.503664",
        "lon": "19.135953",
        "parent": "CSLM2OVE"
    },
    {
        "id": "LM2PF1",
        "name": "Puskás Ferenc Stadion (Hungária körút)",
        "lat": "47.500385",
        "lon": "19.107153",
        "parent": "CSLM2PF1"
    },
    {
        "id": "LM2PF2",
        "name": "Puskás Ferenc Stadion (Ifjuság útja)",
        "lat": "47.500147",
        "lon": "19.107823",
        "parent": "CSLM2PF1"
    },
    {
        "id": "LM2PU1",
        "name": "Pillangó utca",
        "lat": "47.501297",
        "lon": "19.119883",
        "parent": "CSLM2PU1"
    },
    {
        "id": "LM2SZ1",
        "name": "Széll Kálmán tér",
        "lat": "47.506982",
        "lon": "19.024828",
        "parent": "CSF02481"
    },
    {
        "id": "LM3AH1",
        "name": "Árpád híd",
        "lat": "47.532518",
        "lon": "19.067090",
        "parent": "CSLM3AHG"
    },
    {
        "id": "LM3AH2",
        "name": "Árpád híd",
        "lat": "47.532780",
        "lon": "19.066471",
        "parent": "CSLM3AHG"
    },
    {
        "id": "LM3AHA",
        "name": "Árpád híd [A]",
        "lat": "47.533153",
        "lon": "19.067298",
        "parent": "CSLM3AHG"
    },
    {
        "id": "LM3AHB",
        "name": "Árpád híd [B]",
        "lat": "47.532572",
        "lon": "19.067481",
        "parent": "CSLM3AHG"
    },
    {
        "id": "LM3AHC",
        "name": "Árpád híd [C]",
        "lat": "47.532228",
        "lon": "19.067231",
        "parent": "CSLM3AHG"
    },
    {
        "id": "LM3AHD",
        "name": "Árpád híd [D]",
        "lat": "47.532009",
        "lon": "19.066915",
        "parent": "CSLM3AHG"
    },
    {
        "id": "LM3AHE",
        "name": "Árpád híd [E]",
        "lat": "47.532369",
        "lon": "19.066144",
        "parent": "CSLM3AHG"
    },
    {
        "id": "LM3AHF",
        "name": "Árpád híd [F]",
        "lat": "47.533008",
        "lon": "19.066186",
        "parent": "CSLM3AHG"
    },
    {
        "id": "LM3AHG",
        "name": "Árpád híd [G]",
        "lat": "47.533294",
        "lon": "19.066579",
        "parent": "CSLM3AHG"
    },
    {
        "id": "LM3CN1",
        "name": "Corvin-negyed",
        "lat": "47.485815",
        "lon": "19.070185",
        "parent": "CSLM3CNJ"
    },
    {
        "id": "LM3CNA",
        "name": "Corvin-negyed [A]",
        "lat": "47.486096",
        "lon": "19.070064",
        "parent": "CSLM3CNJ"
    },
    {
        "id": "LM3CNB",
        "name": "Corvin-negyed [B]",
        "lat": "47.486104",
        "lon": "19.070311",
        "parent": "CSLM3CNJ"
    },
    {
        "id": "LM3CNC",
        "name": "Corvin-negyed [C]",
        "lat": "47.485940",
        "lon": "19.070339",
        "parent": "CSLM3CNJ"
    },
    {
        "id": "LM3CND",
        "name": "Corvin-negyed [D]",
        "lat": "47.485615",
        "lon": "19.070272",
        "parent": "CSLM3CNJ"
    },
    {
        "id": "LM3CNE",
        "name": "Corvin-negyed [E]",
        "lat": "47.485586",
        "lon": "19.070101",
        "parent": "CSLM3CNJ"
    },
    {
        "id": "LM3CNF",
        "name": "Corvin-negyed [F]",
        "lat": "47.485607",
        "lon": "19.069988",
        "parent": "CSLM3CNJ"
    },
    {
        "id": "LM3CNG",
        "name": "Corvin-negyed [G]",
        "lat": "47.485569",
        "lon": "19.069692",
        "parent": "CSLM3CNJ"
    },
    {
        "id": "LM3CNH",
        "name": "Corvin-negyed [H]",
        "lat": "47.485750",
        "lon": "19.069620",
        "parent": "CSLM3CNJ"
    },
    {
        "id": "LM3CNI",
        "name": "Corvin-negyed [I]",
        "lat": "47.486064",
        "lon": "19.069703",
        "parent": "CSLM3CNJ"
    },
    {
        "id": "LM3CNJ",
        "name": "Corvin-negyed [J]",
        "lat": "47.486116",
        "lon": "19.069868",
        "parent": "CSLM3CNJ"
    },
    {
        "id": "LM3DF1",
        "name": "Deák Ferenc tér (M3 aluljáró)",
        "lat": "47.497502",
        "lon": "19.054313",
        "parent": "CSF00960"
    },
    {
        "id": "LM3FT1",
        "name": "Ferenciek tere",
        "lat": "47.493191",
        "lon": "19.055891",
        "parent": "CSLM3FT1"
    },
    {
        "id": "LM3KK1",
        "name": "Kőbánya-Kispest",
        "lat": "47.463423",
        "lon": "19.149125",
        "parent": "CSF01543"
    },
    {
        "id": "LM3KK2",
        "name": "Kőbánya-Kispest (P+R)",
        "lat": "47.463857",
        "lon": "19.147192",
        "parent": "CSF01543"
    },
    {
        "id": "LM3KK3",
        "name": "Kőbánya-Kispest",
        "lat": "47.463586",
        "lon": "19.148029",
        "parent": "CSF01543"
    },
    {
        "id": "LM3KV1",
        "name": "Kálvin tér",
        "lat": "47.489693",
        "lon": "19.061707",
        "parent": "CSF01289"
    },
    {
        "id": "LM3LE1",
        "name": "Lehel tér",
        "lat": "47.517367",
        "lon": "19.060398",
        "parent": "CSLM3LED"
    },
    {
        "id": "LM3LE2",
        "name": "Lehel tér",
        "lat": "47.519061",
        "lon": "19.061079",
        "parent": "CSLM3LED"
    },
    {
        "id": "LM3LEA",
        "name": "Lehel tér [A]",
        "lat": "47.519226",
        "lon": "19.061201",
        "parent": "CSLM3LED"
    },
    {
        "id": "LM3LEB",
        "name": "Lehel tér [B]",
        "lat": "47.518978",
        "lon": "19.061075",
        "parent": "CSLM3LED"
    },
    {
        "id": "LM3LEC",
        "name": "Lehel tér [C]",
        "lat": "47.519056",
        "lon": "19.060726",
        "parent": "CSLM3LED"
    },
    {
        "id": "LM3LED",
        "name": "Lehel tér [D]",
        "lat": "47.519496",
        "lon": "19.060912",
        "parent": "CSLM3LED"
    },
    {
        "id": "LM3LEE",
        "name": "Lehel tér [E]",
        "lat": "47.517681",
        "lon": "19.060595",
        "parent": "CSLM3LED"
    },
    {
        "id": "LM3LEF",
        "name": "Lehel tér [F]",
        "lat": "47.517432",
        "lon": "19.060648",
        "parent": "CSLM3LED"
    },
    {
        "id": "LM3LEG",
        "name": "Lehel tér [G]",
        "lat": "47.517127",
        "lon": "19.060339",
        "parent": "CSLM3LED"
    },
    {
        "id": "LM3LEH",
        "name": "Lehel tér [H]",
        "lat": "47.517146",
        "lon": "19.059893",
        "parent": "CSLM3LED"
    },
    {
        "id": "LM3LEI",
        "name": "Lehel tér [I]",
        "lat": "47.517584",
        "lon": "19.060103",
        "parent": "CSLM3LED"
    },
    {
        "id": "LM3LEJ",
        "name": "Lehel tér [J]",
        "lat": "47.516176",
        "lon": "19.059899",
        "parent": "CSLM3LED"
    },
    {
        "id": "LM3LEK",
        "name": "Lehel tér [K]",
        "lat": "47.515966",
        "lon": "19.060234",
        "parent": "CSLM3LED"
    },
    {
        "id": "LM3LEL",
        "name": "Lehel tér [L]",
        "lat": "47.516004",
        "lon": "19.059430",
        "parent": "CSLM3LED"
    },
    {
        "id": "LM3LEM",
        "name": "Lehel tér [M]",
        "lat": "47.516228",
        "lon": "19.059531",
        "parent": "CSLM3LED"
    },
    {
        "id": "LM3NY1",
        "name": "Nyugati pályaudvar",
        "lat": "47.510545",
        "lon": "19.055967",
        "parent": "CSLM3NYA"
    },
    {
        "id": "LM3NY2",
        "name": "Nyugati pályaudvar",
        "lat": "47.511807",
        "lon": "19.056937",
        "parent": "CSLM3NYA"
    },
    {
        "id": "LM3NYA",
        "name": "Nyugati pályaudvar [A]",
        "lat": "47.512240",
        "lon": "19.056584",
        "parent": "CSLM3NYA"
    },
    {
        "id": "LM3NYB",
        "name": "Nyugati pályaudvar [B]",
        "lat": "47.512118",
        "lon": "19.057114",
        "parent": "CSLM3NYA"
    },
    {
        "id": "LM3NYC",
        "name": "Nyugati pályaudvar [C]",
        "lat": "47.511509",
        "lon": "19.056730",
        "parent": "CSLM3NYA"
    },
    {
        "id": "LM3NYD",
        "name": "Nyugati pályaudvar [D]",
        "lat": "47.511026",
        "lon": "19.057148",
        "parent": "CSLM3NYA"
    },
    {
        "id": "LM3NYE",
        "name": "Nyugati pályaudvar [E]",
        "lat": "47.510447",
        "lon": "19.056426",
        "parent": "CSLM3NYA"
    },
    {
        "id": "LM3NYF",
        "name": "Nyugati pályaudvar [F]",
        "lat": "47.510703",
        "lon": "19.056257",
        "parent": "CSLM3NYA"
    },
    {
        "id": "LM3NYG",
        "name": "Nyugati pályaudvar [G]",
        "lat": "47.510326",
        "lon": "19.056196",
        "parent": "CSLM3NYA"
    },
    {
        "id": "LM3NYH",
        "name": "Nyugati pályaudvar [H]",
        "lat": "47.510233",
        "lon": "19.056103",
        "parent": "CSLM3NYA"
    },
    {
        "id": "LM3NYI",
        "name": "Nyugati pályaudvar [I]",
        "lat": "47.509870",
        "lon": "19.056404",
        "parent": "CSLM3NYA"
    },
    {
        "id": "LM3NYJ",
        "name": "Nyugati pályaudvar [J]",
        "lat": "47.510011",
        "lon": "19.055055",
        "parent": "CSLM3NYA"
    },
    {
        "id": "LM3NYK",
        "name": "Nyugati pályaudvar [K]",
        "lat": "47.510513",
        "lon": "19.055031",
        "parent": "CSLM3NYA"
    },
    {
        "id": "LM3NYL",
        "name": "Nyugati pályaudvar [L]",
        "lat": "47.510792",
        "lon": "19.055004",
        "parent": "CSLM3NYA"
    },
    {
        "id": "LM3NYM",
        "name": "Nyugati pályaudvar [M]",
        "lat": "47.510917",
        "lon": "19.055716",
        "parent": "CSLM3NYA"
    },
    {
        "id": "LM4BP1",
        "name": "Bikás park",
        "lat": "47.465173",
        "lon": "19.033432",
        "parent": "CSLM4BP1"
    },
    {
        "id": "LM4BP2",
        "name": "Bikás park (Vahot utca)",
        "lat": "47.464837",
        "lon": "19.033335",
        "parent": "CSLM4BP1"
    },
    {
        "id": "LM4FT1",
        "name": "Fővám tér",
        "lat": "47.486650",
        "lon": "19.057060",
        "parent": "CSLM4FT1"
    },
    {
        "id": "LM4FT2",
        "name": "Fővám tér (lift)",
        "lat": "47.486153",
        "lon": "19.057581",
        "parent": "CSLM4FT1"
    },
    {
        "id": "LM4KF1",
        "name": "Kelenföld vasútállomás (Etele tér)",
        "lat": "47.464273",
        "lon": "19.021033",
        "parent": "CS056215"
    },
    {
        "id": "LM4KF2",
        "name": "Kelenföld vasútállomás (vasútállomás)",
        "lat": "47.464305",
        "lon": "19.020529",
        "parent": "CS056215"
    },
    {
        "id": "LM4KF3",
        "name": "Kelenföld vasútállomás (lift-Őrmező)",
        "lat": "47.464342",
        "lon": "19.019925",
        "parent": "CS056215"
    },
    {
        "id": "LM4KF4",
        "name": "Kelenföld vasútállomás (Őrmező)",
        "lat": "47.464358",
        "lon": "19.019665",
        "parent": "CS056215"
    },
    {
        "id": "LM4KFA",
        "name": "Kelenföld vasútállomás [A]",
        "lat": "47.464176",
        "lon": "19.022057",
        "parent": "CS056215"
    },
    {
        "id": "LM4KFB",
        "name": "Kelenföld vasútállomás [B]",
        "lat": "47.464130",
        "lon": "19.018466",
        "parent": "CS056215"
    },
    {
        "id": "LM4KFC",
        "name": "Kelenföld vasútállomás [C]",
        "lat": "47.464156",
        "lon": "19.018071",
        "parent": "CS056215"
    },
    {
        "id": "LM4KFD",
        "name": "Kelenföld vasútállomás [D]",
        "lat": "47.464130",
        "lon": "19.018466",
        "parent": "CS056215"
    },
    {
        "id": "LM4KP2",
        "name": "Keleti pályaudvar (Thököly út)",
        "lat": "47.500620",
        "lon": "19.082038",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LM4KP3",
        "name": "Keleti pályaudvar (Baross tér)",
        "lat": "47.499857",
        "lon": "19.081348",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LM4KV1",
        "name": "Kálvin tér",
        "lat": "47.489048",
        "lon": "19.061394",
        "parent": "CSF01289"
    },
    {
        "id": "LM4KV2",
        "name": "Kálvin tér (lift)",
        "lat": "47.489099",
        "lon": "19.061552",
        "parent": "CSF01289"
    },
    {
        "id": "LM4KVA",
        "name": "Kálvin tér [A]",
        "lat": "47.489987",
        "lon": "19.061298",
        "parent": "CSF01289"
    },
    {
        "id": "LM4KVB",
        "name": "Kálvin tér [B]",
        "lat": "47.489919",
        "lon": "19.062093",
        "parent": "CSF01289"
    },
    {
        "id": "LM4KVC",
        "name": "Kálvin tér [C]",
        "lat": "47.489727",
        "lon": "19.062364",
        "parent": "CSF01289"
    },
    {
        "id": "LM4KVD",
        "name": "Kálvin tér [D]",
        "lat": "47.489226",
        "lon": "19.061814",
        "parent": "CSF01289"
    },
    {
        "id": "LM4KVE",
        "name": "Kálvin tér [E]",
        "lat": "47.489559",
        "lon": "19.061525",
        "parent": "CSF01289"
    },
    {
        "id": "LM4KVF",
        "name": "Kálvin tér [F]",
        "lat": "47.489696",
        "lon": "19.061327",
        "parent": "CSF01289"
    },
    {
        "id": "LM4KVG",
        "name": "Kálvin tér [G]",
        "lat": "47.489897",
        "lon": "19.061217",
        "parent": "CSF01289"
    },
    {
        "id": "LM4MK1",
        "name": "Móricz Zsigmond körtér",
        "lat": "47.477369",
        "lon": "19.047515",
        "parent": "CSLM4MKF"
    },
    {
        "id": "LM4MK2",
        "name": "Móricz Zsigmond körtér (Váli utca)",
        "lat": "47.476569",
        "lon": "19.047322",
        "parent": "CSLM4MKF"
    },
    {
        "id": "LM4MK3",
        "name": "Móricz Zsigmond körtér (lift)",
        "lat": "47.477421",
        "lon": "19.047531",
        "parent": "CSLM4MKF"
    },
    {
        "id": "LM4MKA",
        "name": "Móricz Zsigmond körtér [A]",
        "lat": "47.477342",
        "lon": "19.046972",
        "parent": "CSLM4MKF"
    },
    {
        "id": "LM4MKB",
        "name": "Móricz Zsigmond körtér [B]",
        "lat": "47.477591",
        "lon": "19.047013",
        "parent": "CSLM4MKF"
    },
    {
        "id": "LM4MKC",
        "name": "Móricz Zsigmond körtér [C]",
        "lat": "47.477681",
        "lon": "19.046940",
        "parent": "CSLM4MKF"
    },
    {
        "id": "LM4MKD",
        "name": "Móricz Zsigmond körtér [D]",
        "lat": "47.477773",
        "lon": "19.046558",
        "parent": "CSLM4MKF"
    },
    {
        "id": "LM4MKE",
        "name": "Móricz Zsigmond körtér [E]",
        "lat": "47.477893",
        "lon": "19.046952",
        "parent": "CSLM4MKF"
    },
    {
        "id": "LM4MKF",
        "name": "Móricz Zsigmond körtér [F]",
        "lat": "47.477914",
        "lon": "19.047368",
        "parent": "CSLM4MKF"
    },
    {
        "id": "LM4MKG",
        "name": "Móricz Zsigmond körtér [G]",
        "lat": "47.477604",
        "lon": "19.047573",
        "parent": "CSLM4MKF"
    },
    {
        "id": "LM4MKH",
        "name": "Móricz Zsigmond körtér [H]",
        "lat": "47.477407",
        "lon": "19.047984",
        "parent": "CSLM4MKF"
    },
    {
        "id": "LM4MKI",
        "name": "Móricz Zsigmond körtér [I]",
        "lat": "47.477128",
        "lon": "19.047393",
        "parent": "CSLM4MKF"
    },
    {
        "id": "LM4MKJ",
        "name": "Móricz Zsigmond körtér [J]",
        "lat": "47.476534",
        "lon": "19.047630",
        "parent": "CSLM4MKF"
    },
    {
        "id": "LM4MKK",
        "name": "Móricz Zsigmond körtér [K]",
        "lat": "47.476839",
        "lon": "19.047061",
        "parent": "CSLM4MKF"
    },
    {
        "id": "LM4SG1",
        "name": "Szent Gellért tér",
        "lat": "47.483473",
        "lon": "19.053841",
        "parent": "CSLM4SG1"
    },
    {
        "id": "LM4SG2",
        "name": "Szent Gellért tér (Műegyetemi rakpart)",
        "lat": "47.483018",
        "lon": "19.054657",
        "parent": "CSLM4SG1"
    },
    {
        "id": "LM4UK1",
        "name": "Újbuda-központ",
        "lat": "47.473931",
        "lon": "19.046312",
        "parent": "CSLM4UK1"
    },
    {
        "id": "LMXDFA",
        "name": "Deák Ferenc tér [A]",
        "lat": "47.497840",
        "lon": "19.055142",
        "parent": "CSF00960"
    },
    {
        "id": "LMXDFB",
        "name": "Deák Ferenc tér [B]",
        "lat": "47.497717",
        "lon": "19.055341",
        "parent": "CSF00960"
    },
    {
        "id": "LMXDFC",
        "name": "Deák Ferenc tér [C]",
        "lat": "47.497463",
        "lon": "19.055144",
        "parent": "CSF00960"
    },
    {
        "id": "LMXDFD",
        "name": "Deák Ferenc tér [D]",
        "lat": "47.497334",
        "lon": "19.055003",
        "parent": "CSF00960"
    },
    {
        "id": "LMXDFE",
        "name": "Deák Ferenc tér [E]",
        "lat": "47.497444",
        "lon": "19.054694",
        "parent": "CSF00960"
    },
    {
        "id": "LMXKPA",
        "name": "Keleti pályaudvar [A]",
        "lat": "47.500708",
        "lon": "19.081836",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LMXKPB",
        "name": "Keleti pályaudvar [B]",
        "lat": "47.500835",
        "lon": "19.081892",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LMXKPC",
        "name": "Keleti pályaudvar [C]",
        "lat": "47.500824",
        "lon": "19.082096",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LMXKPD",
        "name": "Keleti pályaudvar [D]",
        "lat": "47.500557",
        "lon": "19.082443",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LMXKPE",
        "name": "Keleti pályaudvar [E]",
        "lat": "47.500468",
        "lon": "19.081907",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LMXKPF",
        "name": "Keleti pályaudvar [F]",
        "lat": "47.499954",
        "lon": "19.082972",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LMXKPG",
        "name": "Keleti pályaudvar [G]",
        "lat": "47.499476",
        "lon": "19.082804",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LMXKPH",
        "name": "Keleti pályaudvar [H]",
        "lat": "47.499479",
        "lon": "19.082419",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LMXKPI",
        "name": "Keleti pályaudvar [I]",
        "lat": "47.500377",
        "lon": "19.082327",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LMXKPJ",
        "name": "Keleti pályaudvar [J]",
        "lat": "47.500166",
        "lon": "19.081876",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LMXKPK",
        "name": "Keleti pályaudvar [K]",
        "lat": "47.499635",
        "lon": "19.080700",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LMXKPL",
        "name": "Keleti pályaudvar [L]",
        "lat": "47.499448",
        "lon": "19.080676",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LMXKPM",
        "name": "Keleti pályaudvar [M]",
        "lat": "47.499376",
        "lon": "19.080515",
        "parent": "CSLMXKPB"
    },
    {
        "id": "LMXKPN",
        "name": "Keleti pályaudvar [N]",
        "lat": "47.499887",
        "lon": "19.079791",
        "parent": "CSLMXKPB"
    }
]
/* harmony export (immutable) */ __webpack_exports__["a"] = stops;



/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__stops__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lodash__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__lodash__);



// http://stackoverflow.com/a/21623256/6541
const calculateDistanceInKm = function(lat1, lon1, lat2, lon2) {
    var R = 6371; // Radius of the earth in km
    var dLat = (lat2 - lat1) * Math.PI / 180; // deg2rad below
    var dLon = (lon2 - lon1) * Math.PI / 180;
    var a = 0.5 - Math.cos(dLat) / 2 + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * (1 - Math.cos(dLon)) / 2;
    return R * 2 * Math.asin(Math.sqrt(a));
};

const mosaik = {
    lat: 47.515320599999995,
    lon: 19.0529829
};

const otthon = {
    lat: 47.4789593,
    lon: 19.083382999999998
};

// api call
const bkkUrl = 'http://futar.bkk.hu/bkk-utvonaltervezo-api/ws/otp/api/where/arrivals-and-departures-for-stop.json?includeReferences=agencies,routes,trips,stops&minutesBefore=1&minutesAfter=30&key=bkk-web&version=3&appVersion=2.2.7-20170324232341&stopId=BKK_';

// distance from x in km
const distanceThreshold = 0.7;

let distances = [];
for (var i = 0; i < __WEBPACK_IMPORTED_MODULE_0__stops__["a" /* stops */].length; i++) {
    var stop = __WEBPACK_IMPORTED_MODULE_0__stops__["a" /* stops */][i];
    const distance = calculateDistanceInKm(otthon.lat, otthon.lon, stop.lat, stop.lon);
    distances.push({'id': stop.id, 'name': stop.name, 'distance': distance, 'parent': stop.parent});
}

const nearbyStops = distances.filter(d => d.parent !== '').filter(d => d.distance < distanceThreshold).sort((a, b) => a.distance - b.distance);
console.table(nearbyStops);

const grouped = __WEBPACK_IMPORTED_MODULE_1__lodash___default()(nearbyStops)
    .groupBy(x => x.parent)
    .toArray()
    .value()
    .sort((a, b) => b.length - a.length);

console.log(grouped);

grouped.forEach(route => {
    route.forEach(stop => {
        fetch(bkkUrl + stop.id).then(res => res.json()).then(json => {
            if (json.data.entry.stopTimes.length > 0) {
                console.log(json);
                processData(json);
            } else {
                console.log(`stop id ${stop.id} is empty`);
            }
        });
    });
});

const processData = function (json) {
    const now = new Date(json.currentTime);
//    console.log(`now: ${now}`);
    const stopId = json.data.entry.stopId;
    const stopName = json.data.references.stops[stopId].name;
    const stopTimes = json.data.entry.stopTimes;
    document.write(`<div><b>${stopName}</b>:</div>`)
//    console.log(stopTimes);
    stopTimes.forEach(stopTime => {
        const departure = new Date(stopTime.arrivalTime * 1000);
        const diff = ((stopTime.arrivalTime * 1000) - json.currentTime) / 1000 / 60;
        if (diff < 0) return;
        const tripId = stopTime.tripId;
        const routeId = json.data.references.trips[tripId].routeId;
        const tripHeadSign = json.data.references.trips[tripId].tripHeadsign;
        const route = json.data.references.routes[routeId];
        const vehicleName = route.shortName;
        const backgroundColor = route.color;
        const color = route.textColor;
        const desc = route.description;
        document.write(`
            <div>
                <span style='color: ${color}; background-color: ${backgroundColor}'>${vehicleName}</span>
                &nbsp;towards ${tripHeadSign}
            </div>
            <div>leaving in ${Math.ceil(diff)} minute(s)</div>
        `);
    });
};
// console.table(nearbyStops);
// console.log(grouped);

const getLoc = false;
getLoc && window.navigator.geolocation.getCurrentPosition(function(pos) {
    console.log(pos.coords.latitude);
    console.log(pos.coords.longitude);
});


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.4';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      reLeadingDot = /^\./,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
      rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * Adds the key-value `pair` to `map`.
   *
   * @private
   * @param {Object} map The map to modify.
   * @param {Array} pair The key-value pair to add.
   * @returns {Object} Returns `map`.
   */
  function addMapEntry(map, pair) {
    // Don't return `map.set` because it's not chainable in IE 11.
    map.set(pair[0], pair[1]);
    return map;
  }

  /**
   * Adds `value` to `set`.
   *
   * @private
   * @param {Object} set The set to modify.
   * @param {*} value The value to add.
   * @returns {Object} Returns `set`.
   */
  function addSetEntry(set, value) {
    // Don't return `set.add` because it's not chainable in IE 11.
    set.add(value);
    return set;
  }

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, baseClone, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        if (isObject(srcValue)) {
          stack || (stack = new Stack);
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = object[key],
          srcValue = source[key],
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `map`.
     *
     * @private
     * @param {Object} map The map to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned map.
     */
    function cloneMap(map, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
      return arrayReduce(array, addMapEntry, new map.constructor);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of `set`.
     *
     * @private
     * @param {Object} set The set to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned set.
     */
    function cloneSet(set, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
      return arrayReduce(array, addSetEntry, new set.constructor);
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, cloneFunc, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return cloneMap(object, isDeep, cloneFunc);

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return cloneSet(object, isDeep, cloneFunc);

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length &&
        (typeof value == 'number' || reIsUint.test(value)) &&
        (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (reLeadingDot.test(string)) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, string) {
        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            result = wait - timeSinceLastCall;

        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(args) {
      args.push(undefined, customDefaultsAssignIn);
      return apply(assignInWith, undefined, args);
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      var sourceURL = '//# sourceURL=' +
        ('sourceURL' in options
          ? options.sourceURL
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = (lodashFunc.name + ''),
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
      return _;
    }.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(4)(module)))

/***/ }),
/* 3 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ })
/******/ ]);